{"expireTime":9007200881132592000,"key":"transformer-remark-markdown-ast-1b8f71a14818aab332cf3a402113857b--","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"text","value":"Doc Websites & Repos","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":24,"offset":24},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":24,"offset":24},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/PYTHON_PRAC","children":[{"type":"text","value":"Python Practice","position":{"start":{"line":4,"column":6,"offset":31},"end":{"line":4,"column":21,"offset":46},"indent":[]}}],"position":{"start":{"line":4,"column":5,"offset":30},"end":{"line":4,"column":61,"offset":86},"indent":[]}}],"position":{"start":{"line":4,"column":5,"offset":30},"end":{"line":4,"column":61,"offset":86},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":26},"end":{"line":4,"column":61,"offset":86},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://lambda-resources.netlify.app/","children":[{"type":"text","value":"Lambda Bootcamp Website","position":{"start":{"line":5,"column":6,"offset":92},"end":{"line":5,"column":29,"offset":115},"indent":[]}}],"position":{"start":{"line":5,"column":5,"offset":91},"end":{"line":5,"column":69,"offset":155},"indent":[]}}],"position":{"start":{"line":5,"column":5,"offset":91},"end":{"line":5,"column":69,"offset":155},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":87},"end":{"line":5,"column":69,"offset":155},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/React_Notes_V3","children":[{"type":"text","value":"React Notes","position":{"start":{"line":6,"column":6,"offset":161},"end":{"line":6,"column":17,"offset":172},"indent":[]}}],"position":{"start":{"line":6,"column":5,"offset":160},"end":{"line":6,"column":60,"offset":215},"indent":[]}}],"position":{"start":{"line":6,"column":5,"offset":160},"end":{"line":6,"column":60,"offset":215},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":156},"end":{"line":6,"column":60,"offset":215},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Project-Showcase","children":[{"type":"text","value":"Project Showcase","position":{"start":{"line":7,"column":6,"offset":221},"end":{"line":7,"column":22,"offset":237},"indent":[]}}],"position":{"start":{"line":7,"column":5,"offset":220},"end":{"line":7,"column":67,"offset":282},"indent":[]}}],"position":{"start":{"line":7,"column":5,"offset":220},"end":{"line":7,"column":67,"offset":282},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":216},"end":{"line":7,"column":67,"offset":282},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/DS-ALGO-OFFICIAL","children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":8,"column":6,"offset":288},"end":{"line":8,"column":34,"offset":316},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":287},"end":{"line":8,"column":79,"offset":361},"indent":[]}}],"position":{"start":{"line":8,"column":5,"offset":287},"end":{"line":8,"column":79,"offset":361},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":283},"end":{"line":8,"column":79,"offset":361},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Lambda-Resource-Static-Assets","children":[{"type":"text","value":"Lambda Site Static Content Server","position":{"start":{"line":9,"column":6,"offset":367},"end":{"line":9,"column":39,"offset":400},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":366},"end":{"line":9,"column":97,"offset":458},"indent":[]}}],"position":{"start":{"line":9,"column":5,"offset":366},"end":{"line":9,"column":97,"offset":458},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":362},"end":{"line":9,"column":97,"offset":458},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/mini-project-showcase","children":[{"type":"text","value":"Mini-Project Showcase","position":{"start":{"line":10,"column":6,"offset":464},"end":{"line":10,"column":27,"offset":485},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":463},"end":{"line":10,"column":77,"offset":535},"indent":[]}}],"position":{"start":{"line":10,"column":5,"offset":463},"end":{"line":10,"column":77,"offset":535},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":459},"end":{"line":10,"column":77,"offset":535},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Useful-Snippets-js","children":[{"type":"text","value":"Useful Snippets","position":{"start":{"line":11,"column":6,"offset":541},"end":{"line":11,"column":21,"offset":556},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":540},"end":{"line":11,"column":68,"offset":603},"indent":[]}}],"position":{"start":{"line":11,"column":5,"offset":540},"end":{"line":11,"column":68,"offset":603},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":536},"end":{"line":11,"column":68,"offset":603},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/Markdown-Templates","children":[{"type":"text","value":"Markdown Templates","position":{"start":{"line":12,"column":6,"offset":609},"end":{"line":12,"column":24,"offset":627},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":608},"end":{"line":12,"column":71,"offset":674},"indent":[]}}],"position":{"start":{"line":12,"column":5,"offset":608},"end":{"line":12,"column":71,"offset":674},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":604},"end":{"line":12,"column":71,"offset":674},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://github.com/bgoonz/zumzi-chat-messenger","children":[{"type":"text","value":"Zumzi Video Conferencing App (mesibo api backend)","position":{"start":{"line":13,"column":6,"offset":680},"end":{"line":13,"column":55,"offset":729},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":679},"end":{"line":13,"column":104,"offset":778},"indent":[]}}],"position":{"start":{"line":13,"column":5,"offset":679},"end":{"line":13,"column":104,"offset":778},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":675},"end":{"line":13,"column":104,"offset":778},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":26},"end":{"line":13,"column":104,"offset":778},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"Core Concepts","position":{"start":{"line":15,"column":3,"offset":782},"end":{"line":15,"column":16,"offset":795},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":780},"end":{"line":15,"column":16,"offset":795},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"index","position":{"start":{"line":17,"column":3,"offset":799},"end":{"line":17,"column":8,"offset":804},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":797},"end":{"line":17,"column":8,"offset":804},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This appendix is a non-exhaustive list of new syntactic features and methods that were added to JavaScript in ES6. These features are the most commonly used and most helpful.","position":{"start":{"line":19,"column":1,"offset":806},"end":{"line":19,"column":175,"offset":980},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":806},"end":{"line":19,"column":175,"offset":980},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"While this appendix doesn't cover ES6 classes, we go over the basics while learning about components in the book. In addition, this appendix doesn't include descriptions of some larger new features like promises and generators. If you'd like more info on those or on any topic below, we encourage you to reference the ","position":{"start":{"line":21,"column":1,"offset":982},"end":{"line":21,"column":319,"offset":1300},"indent":[]}},{"type":"link","title":null,"url":"https://developer.mozilla.org/","children":[{"type":"text","value":"Mozilla Developer Network's website","position":{"start":{"line":21,"column":320,"offset":1301},"end":{"line":21,"column":355,"offset":1336},"indent":[]}}],"position":{"start":{"line":21,"column":319,"offset":1300},"end":{"line":21,"column":388,"offset":1369},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":21,"column":388,"offset":1369},"end":{"line":21,"column":389,"offset":1370},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":21,"column":389,"offset":1370},"end":{"line":21,"column":391,"offset":1372},"indent":[]}},{"type":"text","value":"MDN","position":{"start":{"line":21,"column":391,"offset":1372},"end":{"line":21,"column":394,"offset":1375},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":21,"column":394,"offset":1375},"end":{"line":21,"column":396,"offset":1377},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":21,"column":396,"offset":1377},"end":{"line":21,"column":397,"offset":1378},"indent":[]}}],"position":{"start":{"line":21,"column":1,"offset":982},"end":{"line":21,"column":397,"offset":1378},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Prefer ","position":{"start":{"line":23,"column":4,"offset":1383},"end":{"line":23,"column":11,"offset":1390},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":23,"column":11,"offset":1390},"end":{"line":23,"column":18,"offset":1397},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":23,"column":18,"offset":1397},"end":{"line":23,"column":23,"offset":1402},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":23,"column":23,"offset":1402},"end":{"line":23,"column":28,"offset":1407},"indent":[]}},{"type":"text","value":" over ","position":{"start":{"line":23,"column":28,"offset":1407},"end":{"line":23,"column":34,"offset":1413},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":23,"column":34,"offset":1413},"end":{"line":23,"column":39,"offset":1418},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1380},"end":{"line":23,"column":39,"offset":1418},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If you've worked with ES5 JavaScript before, you're likely used to seeing variables declared with ","position":{"start":{"line":25,"column":1,"offset":1420},"end":{"line":25,"column":99,"offset":1518},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":25,"column":99,"offset":1518},"end":{"line":25,"column":104,"offset":1523},"indent":[]}},{"type":"text","value":":","position":{"start":{"line":25,"column":104,"offset":1523},"end":{"line":25,"column":105,"offset":1524},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1420},"end":{"line":25,"column":105,"offset":1524},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar myVariable = 5;","position":{"start":{"line":27,"column":1,"offset":1526},"end":{"line":29,"column":4,"offset":1554},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Both the ","position":{"start":{"line":31,"column":1,"offset":1556},"end":{"line":31,"column":10,"offset":1565},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":31,"column":10,"offset":1565},"end":{"line":31,"column":17,"offset":1572},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":31,"column":17,"offset":1572},"end":{"line":31,"column":22,"offset":1577},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":31,"column":22,"offset":1577},"end":{"line":31,"column":27,"offset":1582},"indent":[]}},{"type":"text","value":" statements also declare variables. They were introduced in ES6.","position":{"start":{"line":31,"column":27,"offset":1582},"end":{"line":31,"column":91,"offset":1646},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1556},"end":{"line":31,"column":91,"offset":1646},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Use ","position":{"start":{"line":33,"column":1,"offset":1648},"end":{"line":33,"column":5,"offset":1652},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":33,"column":5,"offset":1652},"end":{"line":33,"column":12,"offset":1659},"indent":[]}},{"type":"text","value":" in cases where a variable is never re-assigned. Using ","position":{"start":{"line":33,"column":12,"offset":1659},"end":{"line":33,"column":67,"offset":1714},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":33,"column":67,"offset":1714},"end":{"line":33,"column":74,"offset":1721},"indent":[]}},{"type":"text","value":" makes this clear to whoever is reading your code. It refers to the \"constant\" state of the variable in the context it is defined within.","position":{"start":{"line":33,"column":74,"offset":1721},"end":{"line":33,"column":211,"offset":1858},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1648},"end":{"line":33,"column":211,"offset":1858},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"If the variable will be re-assigned, use ","position":{"start":{"line":35,"column":1,"offset":1860},"end":{"line":35,"column":42,"offset":1901},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":35,"column":42,"offset":1901},"end":{"line":35,"column":47,"offset":1906},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":35,"column":47,"offset":1906},"end":{"line":35,"column":48,"offset":1907},"indent":[]}}],"position":{"start":{"line":35,"column":1,"offset":1860},"end":{"line":35,"column":48,"offset":1907},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We encourage the use of ","position":{"start":{"line":37,"column":1,"offset":1909},"end":{"line":37,"column":25,"offset":1933},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":37,"column":25,"offset":1933},"end":{"line":37,"column":32,"offset":1940},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":37,"column":32,"offset":1940},"end":{"line":37,"column":37,"offset":1945},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":37,"column":37,"offset":1945},"end":{"line":37,"column":42,"offset":1950},"indent":[]}},{"type":"text","value":" instead of ","position":{"start":{"line":37,"column":42,"offset":1950},"end":{"line":37,"column":54,"offset":1962},"indent":[]}},{"type":"inlineCode","value":"var","position":{"start":{"line":37,"column":54,"offset":1962},"end":{"line":37,"column":59,"offset":1967},"indent":[]}},{"type":"text","value":". In addition to the restriction introduced by ","position":{"start":{"line":37,"column":59,"offset":1967},"end":{"line":37,"column":106,"offset":2014},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":37,"column":106,"offset":2014},"end":{"line":37,"column":113,"offset":2021},"indent":[]}},{"type":"text","value":", both ","position":{"start":{"line":37,"column":113,"offset":2021},"end":{"line":37,"column":120,"offset":2028},"indent":[]}},{"type":"inlineCode","value":"const","position":{"start":{"line":37,"column":120,"offset":2028},"end":{"line":37,"column":127,"offset":2035},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":37,"column":127,"offset":2035},"end":{"line":37,"column":132,"offset":2040},"indent":[]}},{"type":"inlineCode","value":"let","position":{"start":{"line":37,"column":132,"offset":2040},"end":{"line":37,"column":137,"offset":2045},"indent":[]}},{"type":"text","value":" are ","position":{"start":{"line":37,"column":137,"offset":2045},"end":{"line":37,"column":142,"offset":2050},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"block scoped","position":{"start":{"line":37,"column":143,"offset":2051},"end":{"line":37,"column":155,"offset":2063},"indent":[]}}],"position":{"start":{"line":37,"column":142,"offset":2050},"end":{"line":37,"column":156,"offset":2064},"indent":[]}},{"type":"text","value":" as opposed to ","position":{"start":{"line":37,"column":156,"offset":2064},"end":{"line":37,"column":171,"offset":2079},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"function scoped","position":{"start":{"line":37,"column":172,"offset":2080},"end":{"line":37,"column":187,"offset":2095},"indent":[]}}],"position":{"start":{"line":37,"column":171,"offset":2079},"end":{"line":37,"column":188,"offset":2096},"indent":[]}},{"type":"text","value":". This scoping can help avoid unexpected bugs.","position":{"start":{"line":37,"column":188,"offset":2096},"end":{"line":37,"column":234,"offset":2142},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1909},"end":{"line":37,"column":234,"offset":2142},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Arrow functions","position":{"start":{"line":39,"column":4,"offset":2147},"end":{"line":39,"column":19,"offset":2162},"indent":[]}}],"position":{"start":{"line":39,"column":1,"offset":2144},"end":{"line":39,"column":19,"offset":2162},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"There are three ways to write arrow function bodies. For the examples below, let's say we have an array of city objects:","position":{"start":{"line":41,"column":1,"offset":2164},"end":{"line":41,"column":121,"offset":2284},"indent":[]}}],"position":{"start":{"line":41,"column":1,"offset":2164},"end":{"line":41,"column":121,"offset":2284},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst cities = [\n  { name: 'Cairo', pop: 7764700 },\n  { name: 'Lagos', pop: 8029200 },\n];","position":{"start":{"line":43,"column":1,"offset":2286},"end":{"line":48,"column":4,"offset":2384},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If we write an arrow function that spans multiple lines, we must use braces to delimit the function body like this:","position":{"start":{"line":50,"column":1,"offset":2386},"end":{"line":50,"column":116,"offset":2501},"indent":[]}}],"position":{"start":{"line":50,"column":1,"offset":2386},"end":{"line":50,"column":116,"offset":2501},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations = cities.map((city) => {\n    const popMM = (city.pop / 1000000).toFixed(2);\n    return popMM + ' million';\n});\nconsole.log(formattedPopulations);","position":{"start":{"line":52,"column":1,"offset":2503},"end":{"line":58,"column":4,"offset":2685},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Note that we must also explicitly specify a ","position":{"start":{"line":60,"column":1,"offset":2687},"end":{"line":60,"column":45,"offset":2731},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":60,"column":45,"offset":2731},"end":{"line":60,"column":53,"offset":2739},"indent":[]}},{"type":"text","value":" for the function.","position":{"start":{"line":60,"column":53,"offset":2739},"end":{"line":60,"column":71,"offset":2757},"indent":[]}}],"position":{"start":{"line":60,"column":1,"offset":2687},"end":{"line":60,"column":71,"offset":2757},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"However, if we write a function body that is only a single line ","position":{"start":{"line":62,"column":1,"offset":2759},"end":{"line":62,"column":65,"offset":2823},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":62,"column":65,"offset":2823},"end":{"line":62,"column":67,"offset":2825},"indent":[]}},{"type":"text","value":"or single expression","position":{"start":{"line":62,"column":67,"offset":2825},"end":{"line":62,"column":87,"offset":2845},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":62,"column":87,"offset":2845},"end":{"line":62,"column":89,"offset":2847},"indent":[]}},{"type":"text","value":" we can use parentheses to delimit it:","position":{"start":{"line":62,"column":89,"offset":2847},"end":{"line":62,"column":127,"offset":2885},"indent":[]}}],"position":{"start":{"line":62,"column":1,"offset":2759},"end":{"line":62,"column":127,"offset":2885},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const formattedPopulations2 = cities.map((city) => (city.pop / 1000000).toFixed(2) + ' million');","position":{"start":{"line":64,"column":1,"offset":2887},"end":{"line":66,"column":4,"offset":2994},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notably, we don't use ","position":{"start":{"line":68,"column":1,"offset":2996},"end":{"line":68,"column":23,"offset":3018},"indent":[]}},{"type":"inlineCode","value":"return","position":{"start":{"line":68,"column":23,"offset":3018},"end":{"line":68,"column":31,"offset":3026},"indent":[]}},{"type":"text","value":" as it's implied.","position":{"start":{"line":68,"column":31,"offset":3026},"end":{"line":68,"column":48,"offset":3043},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":2996},"end":{"line":68,"column":48,"offset":3043},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Furthermore, if your function body is terse you can write it like so:","position":{"start":{"line":70,"column":1,"offset":3045},"end":{"line":70,"column":70,"offset":3114},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":3045},"end":{"line":70,"column":70,"offset":3114},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const pops = cities.map((city) => city.pop);\nconsole.log(pops);","position":{"start":{"line":72,"column":1,"offset":3116},"end":{"line":75,"column":4,"offset":3189},"indent":[1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The terseness of arrow functions is one of two reasons that we use them. Compare the one-liner above to this:","position":{"start":{"line":77,"column":1,"offset":3191},"end":{"line":77,"column":110,"offset":3300},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":3191},"end":{"line":77,"column":110,"offset":3300},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const popsNoArrow = cities.map(function (city) {\n    return city.pop;\n});","position":{"start":{"line":79,"column":1,"offset":3302},"end":{"line":83,"column":4,"offset":3385},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Of greater benefit, though, is how arrow functions bind the ","position":{"start":{"line":85,"column":1,"offset":3387},"end":{"line":85,"column":61,"offset":3447},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":85,"column":61,"offset":3447},"end":{"line":85,"column":67,"offset":3453},"indent":[]}},{"type":"text","value":" object.","position":{"start":{"line":85,"column":67,"offset":3453},"end":{"line":85,"column":75,"offset":3461},"indent":[]}}],"position":{"start":{"line":85,"column":1,"offset":3387},"end":{"line":85,"column":75,"offset":3461},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The traditional JavaScript function declaration syntax ","position":{"start":{"line":87,"column":1,"offset":3463},"end":{"line":87,"column":56,"offset":3518},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":87,"column":56,"offset":3518},"end":{"line":87,"column":58,"offset":3520},"indent":[]}},{"type":"inlineCode","value":"function () {}","position":{"start":{"line":87,"column":58,"offset":3520},"end":{"line":87,"column":74,"offset":3536},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":87,"column":74,"offset":3536},"end":{"line":87,"column":76,"offset":3538},"indent":[]}},{"type":"text","value":" will bind ","position":{"start":{"line":87,"column":76,"offset":3538},"end":{"line":87,"column":87,"offset":3549},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":87,"column":87,"offset":3549},"end":{"line":87,"column":93,"offset":3555},"indent":[]}},{"type":"text","value":" in anonymous functions to the global object. To illustrate the confusion this causes, consider the following example:","position":{"start":{"line":87,"column":93,"offset":3555},"end":{"line":87,"column":211,"offset":3673},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":3463},"end":{"line":87,"column":211,"offset":3673},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction printSong() {\n  console.log(\"Oops - The Global Object\");\n}\n\nconst jukebox = {\n  songs: [\n    {\n      title: \"Wanna Be Startin' Somethin'\",\n      artist: \"Michael Jackson\",\n    },\n    {\n      title: \"Superstar\",\n      artist: \"Madonna\",\n    },\n  ],\n  printSong: function (song) {\n    console.log(song.title + \" - \" + song.artist);\n  },\n  printSongs: function () {\n\n    this.songs.forEach(function(song) {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":89,"column":1,"offset":3675},"end":{"line":118,"column":4,"offset":4163},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The method ","position":{"start":{"line":120,"column":1,"offset":4165},"end":{"line":120,"column":12,"offset":4176},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":120,"column":12,"offset":4176},"end":{"line":120,"column":26,"offset":4190},"indent":[]}},{"type":"text","value":" iterates over ","position":{"start":{"line":120,"column":26,"offset":4190},"end":{"line":120,"column":41,"offset":4205},"indent":[]}},{"type":"inlineCode","value":"this.songs","position":{"start":{"line":120,"column":41,"offset":4205},"end":{"line":120,"column":53,"offset":4217},"indent":[]}},{"type":"text","value":" with ","position":{"start":{"line":120,"column":53,"offset":4217},"end":{"line":120,"column":59,"offset":4223},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":120,"column":59,"offset":4223},"end":{"line":120,"column":70,"offset":4234},"indent":[]}},{"type":"text","value":". In this context, ","position":{"start":{"line":120,"column":70,"offset":4234},"end":{"line":120,"column":89,"offset":4253},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":120,"column":89,"offset":4253},"end":{"line":120,"column":95,"offset":4259},"indent":[]}},{"type":"text","value":" is bound to the object ","position":{"start":{"line":120,"column":95,"offset":4259},"end":{"line":120,"column":119,"offset":4283},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":120,"column":119,"offset":4283},"end":{"line":120,"column":121,"offset":4285},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":120,"column":121,"offset":4285},"end":{"line":120,"column":130,"offset":4294},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":120,"column":130,"offset":4294},"end":{"line":120,"column":132,"offset":4296},"indent":[]}},{"type":"text","value":" as expected. However, the anonymous function passed to ","position":{"start":{"line":120,"column":132,"offset":4296},"end":{"line":120,"column":188,"offset":4352},"indent":[]}},{"type":"inlineCode","value":"forEach()","position":{"start":{"line":120,"column":188,"offset":4352},"end":{"line":120,"column":199,"offset":4363},"indent":[]}},{"type":"text","value":" binds its internal ","position":{"start":{"line":120,"column":199,"offset":4363},"end":{"line":120,"column":219,"offset":4383},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":120,"column":219,"offset":4383},"end":{"line":120,"column":225,"offset":4389},"indent":[]}},{"type":"text","value":" to the global object. As such, ","position":{"start":{"line":120,"column":225,"offset":4389},"end":{"line":120,"column":257,"offset":4421},"indent":[]}},{"type":"inlineCode","value":"this.printSong(song)","position":{"start":{"line":120,"column":257,"offset":4421},"end":{"line":120,"column":279,"offset":4443},"indent":[]}},{"type":"text","value":" calls the function declared at the top of the example, ","position":{"start":{"line":120,"column":279,"offset":4443},"end":{"line":120,"column":335,"offset":4499},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":120,"column":336,"offset":4500},"end":{"line":120,"column":339,"offset":4503},"indent":[]}}],"position":{"start":{"line":120,"column":335,"offset":4499},"end":{"line":120,"column":340,"offset":4504},"indent":[]}},{"type":"text","value":" the method on ","position":{"start":{"line":120,"column":340,"offset":4504},"end":{"line":120,"column":355,"offset":4519},"indent":[]}},{"type":"inlineCode","value":"jukebox","position":{"start":{"line":120,"column":355,"offset":4519},"end":{"line":120,"column":364,"offset":4528},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":120,"column":364,"offset":4528},"end":{"line":120,"column":365,"offset":4529},"indent":[]}}],"position":{"start":{"line":120,"column":1,"offset":4165},"end":{"line":120,"column":365,"offset":4529},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"JavaScript developers have traditionally used workarounds for this behavior, but arrow functions solve the problem by ","position":{"start":{"line":122,"column":1,"offset":4531},"end":{"line":122,"column":119,"offset":4649},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"capturing the ","position":{"start":{"line":122,"column":121,"offset":4651},"end":{"line":122,"column":135,"offset":4665},"indent":[]}},{"type":"inlineCode","value":"this","position":{"start":{"line":122,"column":135,"offset":4665},"end":{"line":122,"column":141,"offset":4671},"indent":[]}},{"type":"text","value":" value of the enclosing context","position":{"start":{"line":122,"column":141,"offset":4671},"end":{"line":122,"column":172,"offset":4702},"indent":[]}}],"position":{"start":{"line":122,"column":119,"offset":4649},"end":{"line":122,"column":174,"offset":4704},"indent":[]}},{"type":"text","value":". Using an arrow function for ","position":{"start":{"line":122,"column":174,"offset":4704},"end":{"line":122,"column":204,"offset":4734},"indent":[]}},{"type":"inlineCode","value":"printSongs()","position":{"start":{"line":122,"column":204,"offset":4734},"end":{"line":122,"column":218,"offset":4748},"indent":[]}},{"type":"text","value":" has the expected result:","position":{"start":{"line":122,"column":218,"offset":4748},"end":{"line":122,"column":243,"offset":4773},"indent":[]}}],"position":{"start":{"line":122,"column":1,"offset":4531},"end":{"line":122,"column":243,"offset":4773},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"  printSongs: function () {\n    this.songs.forEach((song) => {\n\n      this.printSong(song);\n    });\n  },\n}\n\njukebox.printSongs();","position":{"start":{"line":124,"column":1,"offset":4775},"end":{"line":134,"column":4,"offset":4914},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"For this reason, throughout the book we use arrow functions for all anonymous functions.","position":{"start":{"line":136,"column":1,"offset":4916},"end":{"line":136,"column":89,"offset":5004},"indent":[]}}],"position":{"start":{"line":136,"column":1,"offset":4916},"end":{"line":136,"column":89,"offset":5004},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Modules","position":{"start":{"line":138,"column":4,"offset":5009},"end":{"line":138,"column":11,"offset":5016},"indent":[]}}],"position":{"start":{"line":138,"column":1,"offset":5006},"end":{"line":138,"column":11,"offset":5016},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"ES6 formally supports modules using the ","position":{"start":{"line":140,"column":1,"offset":5018},"end":{"line":140,"column":41,"offset":5058},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":140,"column":41,"offset":5058},"end":{"line":140,"column":49,"offset":5066},"indent":[]}},{"type":"text","value":"/","position":{"start":{"line":140,"column":49,"offset":5066},"end":{"line":140,"column":50,"offset":5067},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":140,"column":50,"offset":5067},"end":{"line":140,"column":58,"offset":5075},"indent":[]}},{"type":"text","value":" syntax.","position":{"start":{"line":140,"column":58,"offset":5075},"end":{"line":140,"column":66,"offset":5083},"indent":[]}}],"position":{"start":{"line":140,"column":1,"offset":5018},"end":{"line":140,"column":66,"offset":5083},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Named exports","position":{"start":{"line":142,"column":3,"offset":5087},"end":{"line":142,"column":16,"offset":5100},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5085},"end":{"line":142,"column":18,"offset":5102},"indent":[]}}],"position":{"start":{"line":142,"column":1,"offset":5085},"end":{"line":142,"column":18,"offset":5102},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Inside any file, you can use ","position":{"start":{"line":144,"column":1,"offset":5104},"end":{"line":144,"column":30,"offset":5133},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":144,"column":30,"offset":5133},"end":{"line":144,"column":38,"offset":5141},"indent":[]}},{"type":"text","value":" to specify a variable the module should expose. Here's an example of a file that exports two functions:","position":{"start":{"line":144,"column":38,"offset":5141},"end":{"line":144,"column":142,"offset":5245},"indent":[]}}],"position":{"start":{"line":144,"column":1,"offset":5104},"end":{"line":144,"column":142,"offset":5245},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const sayHi = () => console.log('Hi!');\nexport const sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');","position":{"start":{"line":146,"column":1,"offset":5247},"end":{"line":151,"column":4,"offset":5407},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Now, anywhere we wanted to use these functions we could use ","position":{"start":{"line":153,"column":1,"offset":5409},"end":{"line":153,"column":61,"offset":5469},"indent":[]}},{"type":"inlineCode","value":"import","position":{"start":{"line":153,"column":61,"offset":5469},"end":{"line":153,"column":69,"offset":5477},"indent":[]}},{"type":"text","value":". We need to specify which functions we want to import. A common way of doing this is using ES6's destructuring assignment syntax to list them out like this:","position":{"start":{"line":153,"column":69,"offset":5477},"end":{"line":153,"column":226,"offset":5634},"indent":[]}}],"position":{"start":{"line":153,"column":1,"offset":5409},"end":{"line":153,"column":226,"offset":5634},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { sayHi, sayBye } from './greetings';\n\nsayHi();\nsayBye();","position":{"start":{"line":155,"column":1,"offset":5636},"end":{"line":160,"column":4,"offset":5710},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Importantly, the function that was ","position":{"start":{"line":162,"column":1,"offset":5712},"end":{"line":162,"column":36,"offset":5747},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"not","position":{"start":{"line":162,"column":37,"offset":5748},"end":{"line":162,"column":40,"offset":5751},"indent":[]}}],"position":{"start":{"line":162,"column":36,"offset":5747},"end":{"line":162,"column":41,"offset":5752},"indent":[]}},{"type":"text","value":" exported ","position":{"start":{"line":162,"column":41,"offset":5752},"end":{"line":162,"column":51,"offset":5762},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":162,"column":51,"offset":5762},"end":{"line":162,"column":53,"offset":5764},"indent":[]}},{"type":"inlineCode","value":"saySomething","position":{"start":{"line":162,"column":53,"offset":5764},"end":{"line":162,"column":67,"offset":5778},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":162,"column":67,"offset":5778},"end":{"line":162,"column":69,"offset":5780},"indent":[]}},{"type":"text","value":" is unavailable outside of the module.","position":{"start":{"line":162,"column":69,"offset":5780},"end":{"line":162,"column":107,"offset":5818},"indent":[]}}],"position":{"start":{"line":162,"column":1,"offset":5712},"end":{"line":162,"column":107,"offset":5818},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Also note that we supply a ","position":{"start":{"line":164,"column":1,"offset":5820},"end":{"line":164,"column":28,"offset":5847},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"relative path","position":{"start":{"line":164,"column":30,"offset":5849},"end":{"line":164,"column":43,"offset":5862},"indent":[]}}],"position":{"start":{"line":164,"column":28,"offset":5847},"end":{"line":164,"column":45,"offset":5864},"indent":[]}},{"type":"text","value":" to ","position":{"start":{"line":164,"column":45,"offset":5864},"end":{"line":164,"column":49,"offset":5868},"indent":[]}},{"type":"inlineCode","value":"from","position":{"start":{"line":164,"column":49,"offset":5868},"end":{"line":164,"column":55,"offset":5874},"indent":[]}},{"type":"text","value":", indicating that the ES6 module is a local file as opposed to an npm package.","position":{"start":{"line":164,"column":55,"offset":5874},"end":{"line":164,"column":133,"offset":5952},"indent":[]}}],"position":{"start":{"line":164,"column":1,"offset":5820},"end":{"line":164,"column":133,"offset":5952},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Instead of inserting an ","position":{"start":{"line":166,"column":1,"offset":5954},"end":{"line":166,"column":25,"offset":5978},"indent":[]}},{"type":"inlineCode","value":"export","position":{"start":{"line":166,"column":25,"offset":5978},"end":{"line":166,"column":33,"offset":5986},"indent":[]}},{"type":"text","value":" before each variable you'd like to export, you can use this syntax to list off all the exposed variables in one area:","position":{"start":{"line":166,"column":33,"offset":5986},"end":{"line":166,"column":151,"offset":6104},"indent":[]}}],"position":{"start":{"line":166,"column":1,"offset":5954},"end":{"line":166,"column":151,"offset":6104},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nexport { sayHi, sayBye };","position":{"start":{"line":168,"column":1,"offset":6106},"end":{"line":175,"column":4,"offset":6279},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We can also specify that we'd like to import all of a module's functionality underneath a given namespace with the ","position":{"start":{"line":177,"column":1,"offset":6281},"end":{"line":177,"column":116,"offset":6396},"indent":[]}},{"type":"inlineCode","value":"import * as <Namespace>","position":{"start":{"line":177,"column":116,"offset":6396},"end":{"line":177,"column":141,"offset":6421},"indent":[]}},{"type":"text","value":" syntax:","position":{"start":{"line":177,"column":141,"offset":6421},"end":{"line":177,"column":149,"offset":6429},"indent":[]}}],"position":{"start":{"line":177,"column":1,"offset":6281},"end":{"line":177,"column":149,"offset":6429},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import * as Greetings from './greetings';\n\nGreetings.sayHi();\n\nGreetings.sayBye();\n\nGreetings.saySomething();","position":{"start":{"line":179,"column":1,"offset":6431},"end":{"line":187,"column":4,"offset":6550},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Default export","position":{"start":{"line":189,"column":3,"offset":6554},"end":{"line":189,"column":17,"offset":6568},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":6552},"end":{"line":189,"column":19,"offset":6570},"indent":[]}}],"position":{"start":{"line":189,"column":1,"offset":6552},"end":{"line":189,"column":19,"offset":6570},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The other type of export is a default export. A module can only contain one default export:","position":{"start":{"line":191,"column":1,"offset":6572},"end":{"line":191,"column":92,"offset":6663},"indent":[]}}],"position":{"start":{"line":191,"column":1,"offset":6572},"end":{"line":191,"column":92,"offset":6663},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const sayHi = () => console.log('Hi!');\nconst sayBye = () => console.log('Bye!');\n\nconst saySomething = () => console.log('Something!');\n\nconst Greetings = { sayHi, sayBye };\n\nexport default Greetings;","position":{"start":{"line":193,"column":1,"offset":6665},"end":{"line":202,"column":4,"offset":6876},"indent":[1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"This is a common pattern for libraries. It means you can easily import the library wholesale without specifying what individual functions you want:","position":{"start":{"line":204,"column":1,"offset":6878},"end":{"line":204,"column":148,"offset":7025},"indent":[]}}],"position":{"start":{"line":204,"column":1,"offset":6878},"end":{"line":204,"column":148,"offset":7025},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import Greetings from './greetings';\n\nGreetings.sayHi();\nGreetings.sayBye();","position":{"start":{"line":206,"column":1,"offset":7027},"end":{"line":211,"column":4,"offset":7113},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It's not uncommon for a module to use a mix of both named exports and default exports. For instance, with ","position":{"start":{"line":213,"column":1,"offset":7115},"end":{"line":213,"column":107,"offset":7221},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":213,"column":107,"offset":7221},"end":{"line":213,"column":118,"offset":7232},"indent":[]}},{"type":"text","value":", you can import ","position":{"start":{"line":213,"column":118,"offset":7232},"end":{"line":213,"column":135,"offset":7249},"indent":[]}},{"type":"inlineCode","value":"ReactDOM","position":{"start":{"line":213,"column":135,"offset":7249},"end":{"line":213,"column":145,"offset":7259},"indent":[]}},{"type":"text","value":" ","position":{"start":{"line":213,"column":145,"offset":7259},"end":{"line":213,"column":146,"offset":7260},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":213,"column":146,"offset":7260},"end":{"line":213,"column":148,"offset":7262},"indent":[]}},{"type":"text","value":"a default export","position":{"start":{"line":213,"column":148,"offset":7262},"end":{"line":213,"column":164,"offset":7278},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":213,"column":164,"offset":7278},"end":{"line":213,"column":166,"offset":7280},"indent":[]}},{"type":"text","value":" like this:","position":{"start":{"line":213,"column":166,"offset":7280},"end":{"line":213,"column":177,"offset":7291},"indent":[]}}],"position":{"start":{"line":213,"column":1,"offset":7115},"end":{"line":213,"column":177,"offset":7291},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import ReactDOM from 'react-dom';\n\nReactDOM.render();","position":{"start":{"line":215,"column":1,"offset":7293},"end":{"line":219,"column":4,"offset":7356},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Or, if you're only going to use the ","position":{"start":{"line":221,"column":1,"offset":7358},"end":{"line":221,"column":37,"offset":7394},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":221,"column":37,"offset":7394},"end":{"line":221,"column":47,"offset":7404},"indent":[]}},{"type":"text","value":" function, you can import the named ","position":{"start":{"line":221,"column":47,"offset":7404},"end":{"line":221,"column":83,"offset":7440},"indent":[]}},{"type":"inlineCode","value":"render()","position":{"start":{"line":221,"column":83,"offset":7440},"end":{"line":221,"column":93,"offset":7450},"indent":[]}},{"type":"text","value":" function like this:","position":{"start":{"line":221,"column":93,"offset":7450},"end":{"line":221,"column":113,"offset":7470},"indent":[]}}],"position":{"start":{"line":221,"column":1,"offset":7358},"end":{"line":221,"column":113,"offset":7470},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"import { render } from 'react-dom';\n\nrender();","position":{"start":{"line":223,"column":1,"offset":7472},"end":{"line":227,"column":4,"offset":7528},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"To achieve this flexibility, the export implementation for ","position":{"start":{"line":229,"column":1,"offset":7530},"end":{"line":229,"column":60,"offset":7589},"indent":[]}},{"type":"inlineCode","value":"react-dom","position":{"start":{"line":229,"column":60,"offset":7589},"end":{"line":229,"column":71,"offset":7600},"indent":[]}},{"type":"text","value":" looks something like this:","position":{"start":{"line":229,"column":71,"offset":7600},"end":{"line":229,"column":98,"offset":7627},"indent":[]}}],"position":{"start":{"line":229,"column":1,"offset":7530},"end":{"line":229,"column":98,"offset":7627},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"export const render = (component, target) => {};\n\nconst ReactDOM = {\n    render\n};\n\nexport default ReactDOM;","position":{"start":{"line":231,"column":1,"offset":7629},"end":{"line":239,"column":4,"offset":7747},"indent":[1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"If you want to play around with the module syntax, check out the folder ","position":{"start":{"line":241,"column":1,"offset":7749},"end":{"line":241,"column":73,"offset":7821},"indent":[]}},{"type":"inlineCode","value":"code/webpack/es6-modules","position":{"start":{"line":241,"column":73,"offset":7821},"end":{"line":241,"column":99,"offset":7847},"indent":[]}},{"type":"text","value":".","position":{"start":{"line":241,"column":99,"offset":7847},"end":{"line":241,"column":100,"offset":7848},"indent":[]}}],"position":{"start":{"line":241,"column":1,"offset":7749},"end":{"line":241,"column":100,"offset":7848},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"For more reading on ES6 modules, see this article from Mozilla: \"","position":{"start":{"line":243,"column":1,"offset":7850},"end":{"line":243,"column":66,"offset":7915},"indent":[]}},{"type":"link","title":null,"url":"https://hacks.mozilla.org/2015/08/es6-in-depth-modules/","children":[{"type":"text","value":"ES6 in Depth: Modules","position":{"start":{"line":243,"column":67,"offset":7916},"end":{"line":243,"column":88,"offset":7937},"indent":[]}}],"position":{"start":{"line":243,"column":66,"offset":7915},"end":{"line":243,"column":146,"offset":7995},"indent":[]}},{"type":"text","value":"\".","position":{"start":{"line":243,"column":146,"offset":7995},"end":{"line":243,"column":148,"offset":7997},"indent":[]}}],"position":{"start":{"line":243,"column":1,"offset":7850},"end":{"line":243,"column":148,"offset":7997},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":245,"column":4,"offset":8002},"end":{"line":245,"column":21,"offset":8019},"indent":[]}}],"position":{"start":{"line":245,"column":1,"offset":7999},"end":{"line":245,"column":21,"offset":8019},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We use ","position":{"start":{"line":247,"column":1,"offset":8021},"end":{"line":247,"column":8,"offset":8028},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":247,"column":8,"offset":8028},"end":{"line":247,"column":25,"offset":8045},"indent":[]}},{"type":"text","value":" often throughout the book. We use it in areas where we want to create a modified version of an existing object.","position":{"start":{"line":247,"column":25,"offset":8045},"end":{"line":247,"column":137,"offset":8157},"indent":[]}}],"position":{"start":{"line":247,"column":1,"offset":8021},"end":{"line":247,"column":137,"offset":8157},"indent":[]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":249,"column":1,"offset":8159},"end":{"line":249,"column":18,"offset":8176},"indent":[]}},{"type":"text","value":" accepts any number of objects as arguments. When the function receives two arguments, it ","position":{"start":{"line":249,"column":18,"offset":8176},"end":{"line":249,"column":108,"offset":8266},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"copies","position":{"start":{"line":249,"column":109,"offset":8267},"end":{"line":249,"column":115,"offset":8273},"indent":[]}}],"position":{"start":{"line":249,"column":108,"offset":8266},"end":{"line":249,"column":116,"offset":8274},"indent":[]}},{"type":"text","value":" the properties of the second object onto the first, like so:","position":{"start":{"line":249,"column":116,"offset":8274},"end":{"line":249,"column":177,"offset":8335},"indent":[]}}],"position":{"start":{"line":249,"column":1,"offset":8159},"end":{"line":249,"column":177,"offset":8335},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst coffee = { };\nconst noCream = { cream: false };\nconst noMilk = { milk: false };\nObject.assign(coffee, noCream);","position":{"start":{"line":251,"column":1,"offset":8337},"end":{"line":256,"column":4,"offset":8463},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"It is idiomatic to pass in three arguments to ","position":{"start":{"line":258,"column":1,"offset":8465},"end":{"line":258,"column":47,"offset":8511},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":258,"column":47,"offset":8511},"end":{"line":258,"column":64,"offset":8528},"indent":[]}},{"type":"text","value":". The first argument is a new JavaScript object, the one that ","position":{"start":{"line":258,"column":64,"offset":8528},"end":{"line":258,"column":126,"offset":8590},"indent":[]}},{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":258,"column":126,"offset":8590},"end":{"line":258,"column":143,"offset":8607},"indent":[]}},{"type":"text","value":" will ultimately return. The second is the object whose properties we'd like to build off of. The last is the changes we'd like to apply:","position":{"start":{"line":258,"column":143,"offset":8607},"end":{"line":258,"column":280,"offset":8744},"indent":[]}}],"position":{"start":{"line":258,"column":1,"offset":8465},"end":{"line":258,"column":280,"offset":8744},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const coffeeWithMilk = Object.assign({}, coffee, { milk: true });","position":{"start":{"line":260,"column":1,"offset":8746},"end":{"line":262,"column":4,"offset":8821},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"inlineCode","value":"Object.assign()","position":{"start":{"line":264,"column":1,"offset":8823},"end":{"line":264,"column":18,"offset":8840},"indent":[]}},{"type":"text","value":" is a handy method for working with \"immutable\" JavaScript objects.","position":{"start":{"line":264,"column":18,"offset":8840},"end":{"line":264,"column":85,"offset":8907},"indent":[]}}],"position":{"start":{"line":264,"column":1,"offset":8823},"end":{"line":264,"column":85,"offset":8907},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Template literals","position":{"start":{"line":266,"column":4,"offset":8912},"end":{"line":266,"column":21,"offset":8929},"indent":[]}}],"position":{"start":{"line":266,"column":1,"offset":8909},"end":{"line":266,"column":21,"offset":8929},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5 JavaScript, you'd interpolate variables into strings like this:","position":{"start":{"line":268,"column":1,"offset":8931},"end":{"line":268,"column":71,"offset":9001},"indent":[]}}],"position":{"start":{"line":268,"column":1,"offset":8931},"end":{"line":268,"column":71,"offset":9001},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"var greeting = 'Hello, ' + user + '! It is ' + degF + ' degrees outside.';","position":{"start":{"line":270,"column":1,"offset":9003},"end":{"line":272,"column":4,"offset":9087},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6 template literals, we can create the same string like this:","position":{"start":{"line":274,"column":1,"offset":9089},"end":{"line":274,"column":69,"offset":9157},"indent":[]}}],"position":{"start":{"line":274,"column":1,"offset":9089},"end":{"line":274,"column":69,"offset":9157},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const greeting = `Hello, ${user}! It is ${degF} degrees outside.`;","position":{"start":{"line":276,"column":1,"offset":9159},"end":{"line":278,"column":4,"offset":9235},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The spread operator ","position":{"start":{"line":280,"column":4,"offset":9240},"end":{"line":280,"column":24,"offset":9260},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":280,"column":24,"offset":9260},"end":{"line":280,"column":26,"offset":9262},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":280,"column":26,"offset":9262},"end":{"line":280,"column":31,"offset":9267},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":280,"column":31,"offset":9267},"end":{"line":280,"column":33,"offset":9269},"indent":[]}}],"position":{"start":{"line":280,"column":1,"offset":9237},"end":{"line":280,"column":33,"offset":9269},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In arrays, the ellipsis ","position":{"start":{"line":282,"column":1,"offset":9271},"end":{"line":282,"column":25,"offset":9295},"indent":[]}},{"type":"inlineCode","value":"...","position":{"start":{"line":282,"column":25,"offset":9295},"end":{"line":282,"column":30,"offset":9300},"indent":[]}},{"type":"text","value":" operator will ","position":{"start":{"line":282,"column":30,"offset":9300},"end":{"line":282,"column":45,"offset":9315},"indent":[]}},{"type":"emphasis","children":[{"type":"text","value":"expand","position":{"start":{"line":282,"column":46,"offset":9316},"end":{"line":282,"column":52,"offset":9322},"indent":[]}}],"position":{"start":{"line":282,"column":45,"offset":9315},"end":{"line":282,"column":53,"offset":9323},"indent":[]}},{"type":"text","value":" the array that follows into the parent array. The spread operator enables us to succinctly construct new arrays as a composite of existing arrays.","position":{"start":{"line":282,"column":53,"offset":9323},"end":{"line":282,"column":200,"offset":9470},"indent":[]}}],"position":{"start":{"line":282,"column":1,"offset":9271},"end":{"line":282,"column":200,"offset":9470},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here is an example:","position":{"start":{"line":284,"column":1,"offset":9472},"end":{"line":284,"column":20,"offset":9491},"indent":[]}}],"position":{"start":{"line":284,"column":1,"offset":9472},"end":{"line":284,"column":20,"offset":9491},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"onst a = [ 1, 2, 3 ];\nconst b = [ 4, 5, 6 ];\nconst c = [ ...a, ...b, 7, 8, 9 ];\n\nconsole.log(c);","position":{"start":{"line":286,"column":1,"offset":9493},"end":{"line":292,"column":4,"offset":9599},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Notice how this is different than if we wrote:","position":{"start":{"line":294,"column":1,"offset":9601},"end":{"line":294,"column":47,"offset":9647},"indent":[]}}],"position":{"start":{"line":294,"column":1,"offset":9601},"end":{"line":294,"column":47,"offset":9647},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const d = [a, b, 7, 8, 9];\nconsole.log(d);","position":{"start":{"line":296,"column":1,"offset":9649},"end":{"line":299,"column":4,"offset":9701},"indent":[1,1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Enhanced object literals","position":{"start":{"line":301,"column":4,"offset":9706},"end":{"line":301,"column":28,"offset":9730},"indent":[]}}],"position":{"start":{"line":301,"column":1,"offset":9703},"end":{"line":301,"column":28,"offset":9730},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, all objects were required to have explicit key and value declarations:","position":{"start":{"line":303,"column":1,"offset":9732},"end":{"line":303,"column":79,"offset":9810},"indent":[]}}],"position":{"start":{"line":303,"column":1,"offset":9732},"end":{"line":303,"column":79,"offset":9810},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const explicit = {\n    getState: getState,\n    dispatch: dispatch\n};","position":{"start":{"line":305,"column":1,"offset":9812},"end":{"line":310,"column":4,"offset":9890},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, you can use this terser syntax whenever the property name and variable name are the same:","position":{"start":{"line":312,"column":1,"offset":9892},"end":{"line":312,"column":98,"offset":9989},"indent":[]}}],"position":{"start":{"line":312,"column":1,"offset":9892},"end":{"line":312,"column":98,"offset":9989},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const implicit = {\n    getState,\n    dispatch\n};","position":{"start":{"line":314,"column":1,"offset":9991},"end":{"line":319,"column":4,"offset":10049},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Lots of open source libraries use this syntax, so it's good to be familiar with it. But whether you use it in your own code is a matter of stylistic preference.","position":{"start":{"line":321,"column":1,"offset":10051},"end":{"line":321,"column":161,"offset":10211},"indent":[]}}],"position":{"start":{"line":321,"column":1,"offset":10051},"end":{"line":321,"column":161,"offset":10211},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Default arguments","position":{"start":{"line":323,"column":4,"offset":10216},"end":{"line":323,"column":21,"offset":10233},"indent":[]}}],"position":{"start":{"line":323,"column":1,"offset":10213},"end":{"line":323,"column":21,"offset":10233},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"With ES6, you can specify a default value for an argument in the case that it is ","position":{"start":{"line":325,"column":1,"offset":10235},"end":{"line":325,"column":82,"offset":10316},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":325,"column":82,"offset":10316},"end":{"line":325,"column":93,"offset":10327},"indent":[]}},{"type":"text","value":" when the function is called.","position":{"start":{"line":325,"column":93,"offset":10327},"end":{"line":325,"column":122,"offset":10356},"indent":[]}}],"position":{"start":{"line":325,"column":1,"offset":10235},"end":{"line":325,"column":122,"offset":10356},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"This:","position":{"start":{"line":327,"column":1,"offset":10358},"end":{"line":327,"column":6,"offset":10363},"indent":[]}}],"position":{"start":{"line":327,"column":1,"offset":10358},"end":{"line":327,"column":6,"offset":10363},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"unction divide(a, b) {\n\n  const divisor = typeof b === 'undefined' ? 1 : b;\n\n  return a / divisor;\n}","position":{"start":{"line":329,"column":1,"offset":10365},"end":{"line":336,"column":4,"offset":10475},"indent":[1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Can be written as this:","position":{"start":{"line":338,"column":1,"offset":10477},"end":{"line":338,"column":24,"offset":10500},"indent":[]}}],"position":{"start":{"line":338,"column":1,"offset":10477},"end":{"line":338,"column":24,"offset":10500},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"function divide(a, b = 1) {\n    return a / b;\n}","position":{"start":{"line":340,"column":1,"offset":10502},"end":{"line":344,"column":4,"offset":10559},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In both cases, using the function looks like this:","position":{"start":{"line":346,"column":1,"offset":10561},"end":{"line":346,"column":51,"offset":10611},"indent":[]}}],"position":{"start":{"line":346,"column":1,"offset":10561},"end":{"line":346,"column":51,"offset":10611},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, 2);\n\ndivide(14, undefined);\n\ndivide(14);","position":{"start":{"line":348,"column":1,"offset":10613},"end":{"line":354,"column":4,"offset":10674},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Whenever the argument ","position":{"start":{"line":356,"column":1,"offset":10676},"end":{"line":356,"column":23,"offset":10698},"indent":[]}},{"type":"inlineCode","value":"b","position":{"start":{"line":356,"column":23,"offset":10698},"end":{"line":356,"column":26,"offset":10701},"indent":[]}},{"type":"text","value":" in the example above is ","position":{"start":{"line":356,"column":26,"offset":10701},"end":{"line":356,"column":51,"offset":10726},"indent":[]}},{"type":"inlineCode","value":"undefined","position":{"start":{"line":356,"column":51,"offset":10726},"end":{"line":356,"column":62,"offset":10737},"indent":[]}},{"type":"text","value":", the default argument is used. Note that ","position":{"start":{"line":356,"column":62,"offset":10737},"end":{"line":356,"column":104,"offset":10779},"indent":[]}},{"type":"inlineCode","value":"null","position":{"start":{"line":356,"column":104,"offset":10779},"end":{"line":356,"column":110,"offset":10785},"indent":[]}},{"type":"text","value":" will not use the default argument:","position":{"start":{"line":356,"column":110,"offset":10785},"end":{"line":356,"column":145,"offset":10820},"indent":[]}}],"position":{"start":{"line":356,"column":1,"offset":10676},"end":{"line":356,"column":145,"offset":10820},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"divide(14, null);","position":{"start":{"line":358,"column":1,"offset":10822},"end":{"line":360,"column":4,"offset":10849},"indent":[1,1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Destructuring assignments","position":{"start":{"line":362,"column":4,"offset":10854},"end":{"line":362,"column":29,"offset":10879},"indent":[]}}],"position":{"start":{"line":362,"column":1,"offset":10851},"end":{"line":362,"column":29,"offset":10879},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For arrays","position":{"start":{"line":364,"column":5,"offset":10885},"end":{"line":364,"column":15,"offset":10895},"indent":[]}}],"position":{"start":{"line":364,"column":1,"offset":10881},"end":{"line":364,"column":15,"offset":10895},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"In ES5, extracting and assigning multiple elements from an array looked like this:","position":{"start":{"line":366,"column":1,"offset":10897},"end":{"line":366,"column":83,"offset":10979},"indent":[]}}],"position":{"start":{"line":366,"column":1,"offset":10897},"end":{"line":366,"column":83,"offset":10979},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"ar fruits = [ 'apples', 'bananas', 'oranges' ];\nvar fruit1 = fruits[0];\nvar fruit2 = fruits[1];","position":{"start":{"line":368,"column":1,"offset":10981},"end":{"line":372,"column":4,"offset":11086},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"In ES6, we can use the destructuring syntax to accomplish the same task like this:","position":{"start":{"line":374,"column":1,"offset":11088},"end":{"line":374,"column":83,"offset":11170},"indent":[]}}],"position":{"start":{"line":374,"column":1,"offset":11088},"end":{"line":374,"column":83,"offset":11170},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const [veg1, veg2] = ['asparagus', 'broccoli', 'onion'];\nconsole.log(veg1);\nconsole.log(veg2);","position":{"start":{"line":376,"column":1,"offset":11172},"end":{"line":380,"column":4,"offset":11276},"indent":[1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The variables in the array on the left are \"matched\" and assigned to the corresponding elements in the array on the right. Note that ","position":{"start":{"line":382,"column":1,"offset":11278},"end":{"line":382,"column":134,"offset":11411},"indent":[]}},{"type":"inlineCode","value":"'onion'","position":{"start":{"line":382,"column":134,"offset":11411},"end":{"line":382,"column":143,"offset":11420},"indent":[]}},{"type":"text","value":" is ignored and has no variable bound to it.","position":{"start":{"line":382,"column":143,"offset":11420},"end":{"line":382,"column":187,"offset":11464},"indent":[]}}],"position":{"start":{"line":382,"column":1,"offset":11278},"end":{"line":382,"column":187,"offset":11464},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"For objects","position":{"start":{"line":384,"column":5,"offset":11470},"end":{"line":384,"column":16,"offset":11481},"indent":[]}}],"position":{"start":{"line":384,"column":1,"offset":11466},"end":{"line":384,"column":16,"offset":11481},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can do something similar for extracting object properties into variables:","position":{"start":{"line":386,"column":1,"offset":11483},"end":{"line":386,"column":77,"offset":11559},"indent":[]}}],"position":{"start":{"line":386,"column":1,"offset":11483},"end":{"line":386,"column":77,"offset":11559},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const smoothie = {\n    fats: ['avocado', 'peanut butter', 'greek yogurt'],\n    liquids: ['almond milk'],\n    greens: ['spinach'],\n    fruits: ['blueberry', 'banana']\n};\n\nconst { liquids, fruits } = smoothie;\n\nconsole.log(liquids);\nconsole.log(fruits);","position":{"start":{"line":388,"column":1,"offset":11561},"end":{"line":400,"column":4,"offset":11822},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"heading","depth":3,"children":[{"type":"text","value":"Parameter context matching","position":{"start":{"line":402,"column":5,"offset":11828},"end":{"line":402,"column":31,"offset":11854},"indent":[]}}],"position":{"start":{"line":402,"column":1,"offset":11824},"end":{"line":402,"column":31,"offset":11854},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"We can use these same principles to bind arguments inside a function to properties of an object supplied as an argument:","position":{"start":{"line":404,"column":1,"offset":11856},"end":{"line":404,"column":121,"offset":11976},"indent":[]}}],"position":{"start":{"line":404,"column":1,"offset":11856},"end":{"line":404,"column":121,"offset":11976},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const containsSpinach = ({ greens }) => {\n    if (greens.find((g) => g === 'spinach')) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\ncontainsSpinach(smoothie);","position":{"start":{"line":406,"column":1,"offset":11978},"end":{"line":416,"column":4,"offset":12169},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"We do this often with functional React components:","position":{"start":{"line":418,"column":1,"offset":12171},"end":{"line":418,"column":51,"offset":12221},"indent":[]}}],"position":{"start":{"line":418,"column":1,"offset":12171},"end":{"line":418,"column":51,"offset":12221},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"const IngredientList = ({ ingredients, onClick }) => (\n    <ul className=\"IngredientList\">\n        {ingredients.map((i) => (\n            <li key={i.id} onClick={() => onClick(i.id)} className=\"item\">\n                {i.name}\n            </li>\n        ))}\n    </ul>\n);","position":{"start":{"line":420,"column":1,"offset":12223},"end":{"line":430,"column":4,"offset":12500},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Here, we use destructuring to extract the props into variables ","position":{"start":{"line":432,"column":1,"offset":12502},"end":{"line":432,"column":64,"offset":12565},"indent":[]}},{"type":"text","value":"(","position":{"start":{"line":432,"column":64,"offset":12565},"end":{"line":432,"column":66,"offset":12567},"indent":[]}},{"type":"inlineCode","value":"ingredients","position":{"start":{"line":432,"column":66,"offset":12567},"end":{"line":432,"column":79,"offset":12580},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":432,"column":79,"offset":12580},"end":{"line":432,"column":84,"offset":12585},"indent":[]}},{"type":"inlineCode","value":"onClick","position":{"start":{"line":432,"column":84,"offset":12585},"end":{"line":432,"column":93,"offset":12594},"indent":[]}},{"type":"text","value":")","position":{"start":{"line":432,"column":93,"offset":12594},"end":{"line":432,"column":95,"offset":12596},"indent":[]}},{"type":"text","value":" that we then use inside the component's function body.","position":{"start":{"line":432,"column":95,"offset":12596},"end":{"line":432,"column":150,"offset":12651},"indent":[]}}],"position":{"start":{"line":432,"column":1,"offset":12502},"end":{"line":432,"column":150,"offset":12651},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":433,"column":1,"offset":12652}}}}