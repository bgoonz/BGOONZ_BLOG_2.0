{"expireTime":9007200881132593000,"key":"transformer-remark-markdown-html-ast-2cebfaa87c848147016971047f88e1f2--","val":{"type":"root","children":[{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":4,"offset":4}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"description: Review","position":{"start":{"line":4,"column":4,"offset":9},"end":{"line":4,"column":23,"offset":28}}}],"position":{"start":{"line":4,"column":1,"offset":6},"end":{"line":4,"column":23,"offset":28}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Review-Of-Previous-Concepts","position":{"start":{"line":6,"column":3,"offset":32},"end":{"line":6,"column":30,"offset":59}}}],"position":{"start":{"line":6,"column":1,"offset":30},"end":{"line":6,"column":30,"offset":59}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":8,"column":5,"offset":65},"end":{"line":8,"column":23,"offset":83}}}],"position":{"start":{"line":8,"column":1,"offset":61},"end":{"line":8,"column":23,"offset":83}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Running JS Locally Concepts","position":{"start":{"line":10,"column":5,"offset":89},"end":{"line":10,"column":32,"offset":116}}}],"position":{"start":{"line":10,"column":1,"offset":85},"end":{"line":10,"column":32,"offset":116}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Match the commands ","position":{"start":{"line":12,"column":5,"offset":122},"end":{"line":12,"column":24,"offset":141}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ls"}],"position":{"start":{"line":12,"column":24,"offset":141},"end":{"line":12,"column":28,"offset":145}}},{"type":"text","value":", ","position":{"start":{"line":12,"column":28,"offset":145},"end":{"line":12,"column":30,"offset":147}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":12,"column":30,"offset":147},"end":{"line":12,"column":34,"offset":151}}},{"type":"text","value":", ","position":{"start":{"line":12,"column":34,"offset":151},"end":{"line":12,"column":36,"offset":153}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pwd"}],"position":{"start":{"line":12,"column":36,"offset":153},"end":{"line":12,"column":41,"offset":158}}},{"type":"text","value":" to their descriptions","position":{"start":{"line":12,"column":41,"offset":158},"end":{"line":12,"column":63,"offset":180}}}],"position":{"start":{"line":12,"column":5,"offset":122},"end":{"line":12,"column":63,"offset":180}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"ls"}],"position":{"start":{"line":13,"column":9,"offset":189},"end":{"line":13,"column":13,"offset":193}}},{"type":"text","value":" lists contents of current directory","position":{"start":{"line":13,"column":13,"offset":193},"end":{"line":13,"column":49,"offset":229}}}],"position":{"start":{"line":13,"column":5,"offset":185},"end":{"line":13,"column":49,"offset":229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":14,"column":9,"offset":238},"end":{"line":14,"column":13,"offset":242}}},{"type":"text","value":" changes current directory","position":{"start":{"line":14,"column":13,"offset":242},"end":{"line":14,"column":39,"offset":268}}}],"position":{"start":{"line":14,"column":9,"offset":238},"end":{"line":14,"column":39,"offset":268}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd .."}],"position":{"start":{"line":15,"column":13,"offset":281},"end":{"line":15,"column":20,"offset":288}}},{"type":"text","value":" takes you up one level","position":{"start":{"line":15,"column":20,"offset":288},"end":{"line":15,"column":43,"offset":311}}}],"position":{"start":{"line":15,"column":9,"offset":277},"end":{"line":15,"column":43,"offset":311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"cd"}],"position":{"start":{"line":16,"column":13,"offset":324},"end":{"line":16,"column":17,"offset":328}}},{"type":"text","value":" alone takes you back home","position":{"start":{"line":16,"column":17,"offset":328},"end":{"line":16,"column":43,"offset":354}}}],"position":{"start":{"line":16,"column":9,"offset":320},"end":{"line":16,"column":43,"offset":354}}},{"type":"text","value":"\n"}],"position":{"start":{"line":15,"column":9,"offset":277},"end":{"line":16,"column":43,"offset":354}}},{"type":"text","value":"\n"}],"position":{"start":{"line":14,"column":5,"offset":234},"end":{"line":16,"column":43,"offset":354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"pwd"}],"position":{"start":{"line":17,"column":9,"offset":363},"end":{"line":17,"column":14,"offset":368}}},{"type":"text","value":" returns current directory","position":{"start":{"line":17,"column":14,"offset":368},"end":{"line":17,"column":40,"offset":394}}}],"position":{"start":{"line":17,"column":5,"offset":359},"end":{"line":17,"column":40,"offset":394}}},{"type":"text","value":"\n"}],"position":{"start":{"line":13,"column":5,"offset":185},"end":{"line":17,"column":40,"offset":394}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":118},"end":{"line":17,"column":40,"offset":394}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Given a folder structure diagram, a list of 'cd ","position":{"start":{"line":18,"column":5,"offset":399},"end":{"line":18,"column":53,"offset":447}}},{"type":"text","value":"(","position":{"start":{"line":18,"column":53,"offset":447},"end":{"line":18,"column":55,"offset":449}}},{"type":"text","value":"path","position":{"start":{"line":18,"column":55,"offset":449},"end":{"line":18,"column":59,"offset":453}}},{"type":"text","value":")","position":{"start":{"line":18,"column":59,"offset":453},"end":{"line":18,"column":61,"offset":455}}},{"type":"text","value":"' commands and target files, match the paths to the target files.","position":{"start":{"line":18,"column":61,"offset":455},"end":{"line":18,"column":126,"offset":520}}}],"position":{"start":{"line":18,"column":1,"offset":395},"end":{"line":18,"column":126,"offset":520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use VSCode to create a folder. Within the folder create a .js file containing ","position":{"start":{"line":19,"column":5,"offset":525},"end":{"line":19,"column":83,"offset":603}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log('hello new world');"}],"position":{"start":{"line":19,"column":83,"offset":603},"end":{"line":19,"column":116,"offset":636}}},{"type":"text","value":" and save it.","position":{"start":{"line":19,"column":116,"offset":636},"end":{"line":19,"column":129,"offset":649}}}],"position":{"start":{"line":19,"column":1,"offset":521},"end":{"line":19,"column":129,"offset":649}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Use node to execute a JavaScript file in the terminal","position":{"start":{"line":20,"column":5,"offset":654},"end":{"line":20,"column":58,"offset":707}}}],"position":{"start":{"line":20,"column":1,"offset":650},"end":{"line":20,"column":58,"offset":707}}},{"type":"text","value":"\n"}],"position":{"start":{"line":12,"column":1,"offset":118},"end":{"line":20,"column":58,"offset":707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Plain Old JS Object Lesson Concepts","position":{"start":{"line":22,"column":5,"offset":713},"end":{"line":22,"column":40,"offset":748}}}],"position":{"start":{"line":22,"column":1,"offset":709},"end":{"line":22,"column":40,"offset":748}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Label variables as either Primitive vs. Reference","position":{"start":{"line":24,"column":5,"offset":754},"end":{"line":24,"column":54,"offset":803}}}],"position":{"start":{"line":24,"column":5,"offset":754},"end":{"line":24,"column":54,"offset":803}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"primitives: strings, booleans, numbers, null and undefined","position":{"start":{"line":25,"column":9,"offset":812},"end":{"line":25,"column":67,"offset":870}}}],"position":{"start":{"line":25,"column":9,"offset":812},"end":{"line":25,"column":67,"offset":870}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"primitives are immutable","position":{"start":{"line":26,"column":13,"offset":883},"end":{"line":26,"column":37,"offset":907}}}],"position":{"start":{"line":26,"column":9,"offset":879},"end":{"line":26,"column":37,"offset":907}}},{"type":"text","value":"\n"}],"position":{"start":{"line":26,"column":9,"offset":879},"end":{"line":26,"column":37,"offset":907}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":5,"offset":808},"end":{"line":26,"column":37,"offset":907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"refereces: objects ","position":{"start":{"line":27,"column":9,"offset":916},"end":{"line":27,"column":28,"offset":935}}},{"type":"text","value":"(","position":{"start":{"line":27,"column":28,"offset":935},"end":{"line":27,"column":30,"offset":937}}},{"type":"text","value":"including arrays","position":{"start":{"line":27,"column":30,"offset":937},"end":{"line":27,"column":46,"offset":953}}},{"type":"text","value":")","position":{"start":{"line":27,"column":46,"offset":953},"end":{"line":27,"column":48,"offset":955}}}],"position":{"start":{"line":27,"column":9,"offset":916},"end":{"line":27,"column":48,"offset":955}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"references are mutable","position":{"start":{"line":28,"column":13,"offset":968},"end":{"line":28,"column":35,"offset":990}}}],"position":{"start":{"line":28,"column":9,"offset":964},"end":{"line":28,"column":35,"offset":990}}},{"type":"text","value":"\n"}],"position":{"start":{"line":28,"column":9,"offset":964},"end":{"line":28,"column":35,"offset":990}}},{"type":"text","value":"\n"}],"position":{"start":{"line":27,"column":5,"offset":912},"end":{"line":28,"column":35,"offset":990}}},{"type":"text","value":"\n"}],"position":{"start":{"line":25,"column":5,"offset":808},"end":{"line":28,"column":35,"offset":990}}},{"type":"text","value":"\n"}],"position":{"start":{"line":24,"column":1,"offset":750},"end":{"line":28,"column":35,"offset":990}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identify when to use ","position":{"start":{"line":29,"column":5,"offset":995},"end":{"line":29,"column":26,"offset":1016}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"."}],"position":{"start":{"line":29,"column":26,"offset":1016},"end":{"line":29,"column":29,"offset":1019}}},{"type":"text","value":" vs ","position":{"start":{"line":29,"column":29,"offset":1019},"end":{"line":29,"column":33,"offset":1023}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[]"}],"position":{"start":{"line":29,"column":33,"offset":1023},"end":{"line":29,"column":37,"offset":1027}}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":29,"column":37,"offset":1027},"end":{"line":29,"column":72,"offset":1062}}}],"position":{"start":{"line":29,"column":5,"offset":995},"end":{"line":29,"column":72,"offset":1062}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"dot syntax ","position":{"start":{"line":30,"column":9,"offset":1071},"end":{"line":30,"column":20,"offset":1082}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object.key"}],"position":{"start":{"line":30,"column":20,"offset":1082},"end":{"line":30,"column":32,"offset":1094}}}],"position":{"start":{"line":30,"column":9,"offset":1071},"end":{"line":30,"column":32,"offset":1094}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"easier to read","position":{"start":{"line":31,"column":13,"offset":1107},"end":{"line":31,"column":27,"offset":1121}}}],"position":{"start":{"line":31,"column":9,"offset":1103},"end":{"line":31,"column":27,"offset":1121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"easier to write","position":{"start":{"line":32,"column":13,"offset":1134},"end":{"line":32,"column":28,"offset":1149}}}],"position":{"start":{"line":32,"column":9,"offset":1130},"end":{"line":32,"column":28,"offset":1149}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"cannot use variables as keys","position":{"start":{"line":33,"column":13,"offset":1162},"end":{"line":33,"column":41,"offset":1190}}}],"position":{"start":{"line":33,"column":9,"offset":1158},"end":{"line":33,"column":41,"offset":1190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"keys cannot begin with a number","position":{"start":{"line":34,"column":13,"offset":1203},"end":{"line":34,"column":44,"offset":1234}}}],"position":{"start":{"line":34,"column":9,"offset":1199},"end":{"line":34,"column":44,"offset":1234}}},{"type":"text","value":"\n"}],"position":{"start":{"line":31,"column":9,"offset":1103},"end":{"line":34,"column":44,"offset":1234}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":5,"offset":1067},"end":{"line":34,"column":44,"offset":1234}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"bracket notation ","position":{"start":{"line":35,"column":9,"offset":1243},"end":{"line":35,"column":26,"offset":1260}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object[\"key]"}],"position":{"start":{"line":35,"column":26,"offset":1260},"end":{"line":35,"column":40,"offset":1274}}}],"position":{"start":{"line":35,"column":9,"offset":1243},"end":{"line":35,"column":40,"offset":1274}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"allows variables as keys","position":{"start":{"line":36,"column":13,"offset":1287},"end":{"line":36,"column":37,"offset":1311}}}],"position":{"start":{"line":36,"column":9,"offset":1283},"end":{"line":36,"column":37,"offset":1311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"strings that start with numbers can be use as keys","position":{"start":{"line":37,"column":13,"offset":1324},"end":{"line":37,"column":63,"offset":1374}}}],"position":{"start":{"line":37,"column":9,"offset":1320},"end":{"line":37,"column":63,"offset":1374}}},{"type":"text","value":"\n"}],"position":{"start":{"line":36,"column":9,"offset":1283},"end":{"line":37,"column":63,"offset":1374}}},{"type":"text","value":"\n"}],"position":{"start":{"line":35,"column":5,"offset":1239},"end":{"line":37,"column":63,"offset":1374}}},{"type":"text","value":"\n"}],"position":{"start":{"line":30,"column":5,"offset":1067},"end":{"line":37,"column":63,"offset":1374}}},{"type":"text","value":"\n"}],"position":{"start":{"line":29,"column":1,"offset":991},"end":{"line":37,"column":63,"offset":1374}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write an object literal with a variable key using interpolation","position":{"start":{"line":38,"column":5,"offset":1379},"end":{"line":38,"column":68,"offset":1442}}}],"position":{"start":{"line":38,"column":5,"offset":1379},"end":{"line":38,"column":68,"offset":1442}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"put it in brackets to access the value of the variable, rather than just make the value that string","position":{"start":{"line":40,"column":9,"offset":1452},"end":{"line":40,"column":108,"offset":1551}}}],"position":{"start":{"line":40,"column":9,"offset":1452},"end":{"line":40,"column":108,"offset":1551}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let a = 'b';\nlet obj = { a: 'letter_a', [a]: 'letter b' };\n"}],"position":{"start":{"line":42,"column":9,"offset":1561},"end":{"line":45,"column":12,"offset":1661}}}],"position":{"start":{"line":42,"column":9,"offset":1561},"end":{"line":45,"column":12,"offset":1661}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":5,"offset":1448},"end":{"line":45,"column":12,"offset":1661}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":5,"offset":1448},"end":{"line":45,"column":12,"offset":1661}}},{"type":"text","value":"\n"}],"position":{"start":{"line":38,"column":1,"offset":1375},"end":{"line":46,"column":1,"offset":1662}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use the ","position":{"start":{"line":47,"column":5,"offset":1667},"end":{"line":47,"column":13,"offset":1675}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj[key] !== undefined"}],"position":{"start":{"line":47,"column":13,"offset":1675},"end":{"line":47,"column":37,"offset":1699}}},{"type":"text","value":" pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":47,"column":37,"offset":1699},"end":{"line":47,"column":114,"offset":1776}}}],"position":{"start":{"line":47,"column":5,"offset":1667},"end":{"line":47,"column":114,"offset":1776}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"can also use ","position":{"start":{"line":48,"column":9,"offset":1785},"end":{"line":48,"column":22,"offset":1798}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(key in object)"}],"position":{"start":{"line":48,"column":22,"offset":1798},"end":{"line":48,"column":39,"offset":1815}}},{"type":"text","value":" syntax interchangeably ","position":{"start":{"line":48,"column":39,"offset":1815},"end":{"line":48,"column":63,"offset":1839}}},{"type":"text","value":"(","position":{"start":{"line":48,"column":63,"offset":1839},"end":{"line":48,"column":65,"offset":1841}}},{"type":"text","value":"returns a boolean","position":{"start":{"line":48,"column":65,"offset":1841},"end":{"line":48,"column":82,"offset":1858}}},{"type":"text","value":")","position":{"start":{"line":48,"column":82,"offset":1858},"end":{"line":48,"column":84,"offset":1860}}}],"position":{"start":{"line":48,"column":5,"offset":1781},"end":{"line":48,"column":84,"offset":1860}}},{"type":"text","value":"\n"}],"position":{"start":{"line":48,"column":5,"offset":1781},"end":{"line":48,"column":84,"offset":1860}}},{"type":"text","value":"\n"}],"position":{"start":{"line":47,"column":1,"offset":1663},"end":{"line":48,"column":84,"offset":1860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Utilize Object.keys and Object.values in a function","position":{"start":{"line":49,"column":5,"offset":1865},"end":{"line":49,"column":56,"offset":1916}}}],"position":{"start":{"line":49,"column":5,"offset":1865},"end":{"line":49,"column":56,"offset":1916}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.keys(obj)"}],"position":{"start":{"line":50,"column":9,"offset":1925},"end":{"line":50,"column":27,"offset":1943}}},{"type":"text","value":" returns an array of all the keys in ","position":{"start":{"line":50,"column":27,"offset":1943},"end":{"line":50,"column":64,"offset":1980}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj"}],"position":{"start":{"line":50,"column":64,"offset":1980},"end":{"line":50,"column":69,"offset":1985}}}],"position":{"start":{"line":50,"column":5,"offset":1921},"end":{"line":50,"column":69,"offset":1985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object.values(obj)"}],"position":{"start":{"line":51,"column":9,"offset":1994},"end":{"line":51,"column":29,"offset":2014}}},{"type":"text","value":" returns an array of the values in ","position":{"start":{"line":51,"column":29,"offset":2014},"end":{"line":51,"column":64,"offset":2049}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"obj"}],"position":{"start":{"line":51,"column":64,"offset":2049},"end":{"line":51,"column":69,"offset":2054}}}],"position":{"start":{"line":51,"column":5,"offset":1990},"end":{"line":51,"column":69,"offset":2054}}},{"type":"text","value":"\n"}],"position":{"start":{"line":50,"column":5,"offset":1921},"end":{"line":51,"column":69,"offset":2054}}},{"type":"text","value":"\n"}],"position":{"start":{"line":49,"column":1,"offset":1861},"end":{"line":51,"column":69,"offset":2054}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Iterate through an object using a ","position":{"start":{"line":52,"column":5,"offset":2059},"end":{"line":52,"column":39,"offset":2093}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for in"}],"position":{"start":{"line":52,"column":39,"offset":2093},"end":{"line":52,"column":47,"offset":2101}}},{"type":"text","value":" loop","position":{"start":{"line":52,"column":47,"offset":2101},"end":{"line":52,"column":52,"offset":2106}}}],"position":{"start":{"line":52,"column":5,"offset":2059},"end":{"line":52,"column":52,"offset":2106}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let printValues = function (obj) {\n    for (let key in obj) {\n        let value = obj[key];\n        console.log(value);\n    }\n};\n"}],"position":{"start":{"line":54,"column":5,"offset":2112},"end":{"line":61,"column":8,"offset":2286}}}],"position":{"start":{"line":54,"column":5,"offset":2112},"end":{"line":61,"column":8,"offset":2286}}},{"type":"text","value":"\n"}],"position":{"start":{"line":52,"column":1,"offset":2055},"end":{"line":62,"column":1,"offset":2287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a function that utilizes ","position":{"start":{"line":63,"column":5,"offset":2292},"end":{"line":63,"column":37,"offset":2324}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...rest"}],"position":{"start":{"line":63,"column":37,"offset":2324},"end":{"line":63,"column":46,"offset":2333}}},{"type":"text","value":" syntax to accept an arbitrary number of arguments","position":{"start":{"line":63,"column":46,"offset":2333},"end":{"line":63,"column":96,"offset":2383}}}],"position":{"start":{"line":63,"column":5,"offset":2292},"end":{"line":63,"column":96,"offset":2383}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...rest"}],"position":{"start":{"line":65,"column":9,"offset":2393},"end":{"line":65,"column":18,"offset":2402}}},{"type":"text","value":" syntax will store all additional arguments in an array","position":{"start":{"line":65,"column":18,"offset":2402},"end":{"line":65,"column":73,"offset":2457}}}],"position":{"start":{"line":65,"column":5,"offset":2389},"end":{"line":65,"column":73,"offset":2457}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"array will be empty if there are no additional arguments","position":{"start":{"line":66,"column":9,"offset":2466},"end":{"line":66,"column":65,"offset":2522}}}],"position":{"start":{"line":66,"column":9,"offset":2466},"end":{"line":66,"column":65,"offset":2522}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let myFunction = function (str, ...strs) {\n    console.log('The first string is ' + str);\n    console.log('The rest of the strings are:');\n    strs.forEach(function (str) {\n        console.log(str);\n    });\n};\n"}],"position":{"start":{"line":68,"column":9,"offset":2532},"end":{"line":76,"column":12,"offset":2823}}}],"position":{"start":{"line":68,"column":9,"offset":2532},"end":{"line":76,"column":12,"offset":2823}}},{"type":"text","value":"\n"}],"position":{"start":{"line":66,"column":5,"offset":2462},"end":{"line":76,"column":12,"offset":2823}}},{"type":"text","value":"\n"}],"position":{"start":{"line":65,"column":5,"offset":2389},"end":{"line":76,"column":12,"offset":2823}}},{"type":"text","value":"\n"}],"position":{"start":{"line":63,"column":1,"offset":2288},"end":{"line":76,"column":12,"offset":2823}}},{"type":"text","value":"\n"}],"position":{"start":{"line":24,"column":1,"offset":750},"end":{"line":76,"column":12,"offset":2823}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":78,"column":1,"offset":2825},"end":{"line":78,"column":4,"offset":2828}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Use ","position":{"start":{"line":80,"column":5,"offset":2834},"end":{"line":80,"column":9,"offset":2838}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"...spread"}],"position":{"start":{"line":80,"column":9,"offset":2838},"end":{"line":80,"column":20,"offset":2849}}},{"type":"text","value":" syntax for Object literals and Array literals","position":{"start":{"line":80,"column":20,"offset":2849},"end":{"line":80,"column":66,"offset":2895}}}],"position":{"start":{"line":80,"column":5,"offset":2834},"end":{"line":80,"column":66,"offset":2895}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let arr1 = ['a', 'b', 'c'];\nlet longer = [...arr1, 'd', 'e']; // [\"a\", \"b\", \"c\", \"d\", \"e\"]\n// without spread syntax, this would give you a nested array\nlet withoutRest = [arr1, 'd', 'e']; // [[\"a\", \"b\", \"c\"], \"d\", \"e\"]\n"}],"position":{"start":{"line":82,"column":5,"offset":2901},"end":{"line":87,"column":8,"offset":3157}}}],"position":{"start":{"line":82,"column":5,"offset":2901},"end":{"line":87,"column":8,"offset":3157}}},{"type":"text","value":"\n"}],"position":{"start":{"line":80,"column":1,"offset":2830},"end":{"line":88,"column":1,"offset":3158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Destructure an array to reference specific elements","position":{"start":{"line":89,"column":5,"offset":3163},"end":{"line":89,"column":56,"offset":3214}}}],"position":{"start":{"line":89,"column":5,"offset":3163},"end":{"line":89,"column":56,"offset":3214}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":91,"column":5,"offset":3220},"end":{"line":91,"column":7,"offset":3222}}},{"type":"text","value":"`","position":{"start":{"line":91,"column":7,"offset":3222},"end":{"line":91,"column":9,"offset":3224}}},{"type":"text","value":"`","position":{"start":{"line":91,"column":9,"offset":3224},"end":{"line":91,"column":11,"offset":3226}}},{"type":"text","value":"javascript","position":{"start":{"line":91,"column":11,"offset":3226},"end":{"line":91,"column":21,"offset":3236}}}],"position":{"start":{"line":91,"column":5,"offset":3220},"end":{"line":91,"column":21,"offset":3236}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let array = ","position":{"start":{"line":93,"column":5,"offset":3242},"end":{"line":93,"column":17,"offset":3254}}},{"type":"text","value":"[","position":{"start":{"line":93,"column":17,"offset":3254},"end":{"line":93,"column":19,"offset":3256}}},{"type":"text","value":"35,9","position":{"start":{"line":93,"column":19,"offset":3256},"end":{"line":93,"column":23,"offset":3260}}},{"type":"text","value":"]","position":{"start":{"line":93,"column":23,"offset":3260},"end":{"line":93,"column":25,"offset":3262}}},{"type":"text","value":";","position":{"start":{"line":93,"column":25,"offset":3262},"end":{"line":93,"column":26,"offset":3263}}}],"position":{"start":{"line":93,"column":5,"offset":3242},"end":{"line":93,"column":26,"offset":3263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let ","position":{"start":{"line":95,"column":5,"offset":3269},"end":{"line":95,"column":9,"offset":3273}}},{"type":"text","value":"[","position":{"start":{"line":95,"column":9,"offset":3273},"end":{"line":95,"column":11,"offset":3275}}},{"type":"text","value":"firstEl, secondEl","position":{"start":{"line":95,"column":11,"offset":3275},"end":{"line":95,"column":28,"offset":3292}}},{"type":"text","value":"]","position":{"start":{"line":95,"column":28,"offset":3292},"end":{"line":95,"column":30,"offset":3294}}},{"type":"text","value":" = array;","position":{"start":{"line":95,"column":30,"offset":3294},"end":{"line":95,"column":39,"offset":3303}}}],"position":{"start":{"line":95,"column":5,"offset":3269},"end":{"line":95,"column":39,"offset":3303}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":97,"column":5,"offset":3309},"end":{"line":97,"column":16,"offset":3320}}},{"type":"text","value":"(","position":{"start":{"line":97,"column":16,"offset":3320},"end":{"line":97,"column":18,"offset":3322}}},{"type":"text","value":"firstEl","position":{"start":{"line":97,"column":18,"offset":3322},"end":{"line":97,"column":25,"offset":3329}}},{"type":"text","value":")","position":{"start":{"line":97,"column":25,"offset":3329},"end":{"line":97,"column":27,"offset":3331}}},{"type":"text","value":"; // =","position":{"start":{"line":97,"column":27,"offset":3331},"end":{"line":97,"column":33,"offset":3337}}},{"type":"text","value":">","position":{"start":{"line":97,"column":33,"offset":3337},"end":{"line":97,"column":37,"offset":3341}}},{"type":"text","value":" 35","position":{"start":{"line":97,"column":37,"offset":3341},"end":{"line":97,"column":40,"offset":3344}}}],"position":{"start":{"line":97,"column":5,"offset":3309},"end":{"line":97,"column":40,"offset":3344}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":99,"column":5,"offset":3350},"end":{"line":99,"column":16,"offset":3361}}},{"type":"text","value":"(","position":{"start":{"line":99,"column":16,"offset":3361},"end":{"line":99,"column":18,"offset":3363}}},{"type":"text","value":"secondEl","position":{"start":{"line":99,"column":18,"offset":3363},"end":{"line":99,"column":26,"offset":3371}}},{"type":"text","value":")","position":{"start":{"line":99,"column":26,"offset":3371},"end":{"line":99,"column":28,"offset":3373}}},{"type":"text","value":"; // =","position":{"start":{"line":99,"column":28,"offset":3373},"end":{"line":99,"column":34,"offset":3379}}},{"type":"text","value":">","position":{"start":{"line":99,"column":34,"offset":3379},"end":{"line":99,"column":38,"offset":3383}}},{"type":"text","value":" 9","position":{"start":{"line":99,"column":38,"offset":3383},"end":{"line":99,"column":40,"offset":3385}}}],"position":{"start":{"line":99,"column":5,"offset":3350},"end":{"line":99,"column":40,"offset":3385}}},{"type":"text","value":"\n"}],"position":{"start":{"line":89,"column":1,"offset":3159},"end":{"line":99,"column":40,"offset":3385}}},{"type":"text","value":"\n"}],"position":{"start":{"line":80,"column":1,"offset":2830},"end":{"line":99,"column":40,"offset":3385}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// can also destructure using ... syntax let array = ","position":{"start":{"line":101,"column":1,"offset":3387},"end":{"line":101,"column":54,"offset":3440}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":54,"offset":3440},"end":{"line":101,"column":56,"offset":3442}}},{"type":"text","value":"35,9,14","position":{"start":{"line":101,"column":56,"offset":3442},"end":{"line":101,"column":63,"offset":3449}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":63,"offset":3449},"end":{"line":101,"column":65,"offset":3451}}},{"type":"text","value":"; let ","position":{"start":{"line":101,"column":65,"offset":3451},"end":{"line":101,"column":71,"offset":3457}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":71,"offset":3457},"end":{"line":101,"column":73,"offset":3459}}},{"type":"text","value":"head, ...tail","position":{"start":{"line":101,"column":73,"offset":3459},"end":{"line":101,"column":86,"offset":3472}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":86,"offset":3472},"end":{"line":101,"column":88,"offset":3474}}},{"type":"text","value":" = array; console.log","position":{"start":{"line":101,"column":88,"offset":3474},"end":{"line":101,"column":109,"offset":3495}}},{"type":"text","value":"(","position":{"start":{"line":101,"column":109,"offset":3495},"end":{"line":101,"column":111,"offset":3497}}},{"type":"text","value":"head","position":{"start":{"line":101,"column":111,"offset":3497},"end":{"line":101,"column":115,"offset":3501}}},{"type":"text","value":")","position":{"start":{"line":101,"column":115,"offset":3501},"end":{"line":101,"column":117,"offset":3503}}},{"type":"text","value":"; // =","position":{"start":{"line":101,"column":117,"offset":3503},"end":{"line":101,"column":123,"offset":3509}}},{"type":"text","value":">","position":{"start":{"line":101,"column":123,"offset":3509},"end":{"line":101,"column":127,"offset":3513}}},{"type":"text","value":" 35 console.log","position":{"start":{"line":101,"column":127,"offset":3513},"end":{"line":101,"column":142,"offset":3528}}},{"type":"text","value":"(","position":{"start":{"line":101,"column":142,"offset":3528},"end":{"line":101,"column":144,"offset":3530}}},{"type":"text","value":"tail","position":{"start":{"line":101,"column":144,"offset":3530},"end":{"line":101,"column":148,"offset":3534}}},{"type":"text","value":")","position":{"start":{"line":101,"column":148,"offset":3534},"end":{"line":101,"column":150,"offset":3536}}},{"type":"text","value":"; // =","position":{"start":{"line":101,"column":150,"offset":3536},"end":{"line":101,"column":156,"offset":3542}}},{"type":"text","value":">","position":{"start":{"line":101,"column":156,"offset":3542},"end":{"line":101,"column":160,"offset":3546}}},{"type":"text","value":" ","position":{"start":{"line":101,"column":160,"offset":3546},"end":{"line":101,"column":161,"offset":3547}}},{"type":"text","value":"[","position":{"start":{"line":101,"column":161,"offset":3547},"end":{"line":101,"column":163,"offset":3549}}},{"type":"text","value":"9, 14","position":{"start":{"line":101,"column":163,"offset":3549},"end":{"line":101,"column":168,"offset":3554}}},{"type":"text","value":"]","position":{"start":{"line":101,"column":168,"offset":3554},"end":{"line":101,"column":170,"offset":3556}}}],"position":{"start":{"line":101,"column":1,"offset":3387},"end":{"line":101,"column":170,"offset":3556}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"- Destructure an object to reference specific values\n   - if you want to use variable names that don't match the keys, you can use aliasing\n      - `let { oldkeyname: newkeyname } = object`\n   - rule of thumb—only destructure values from objects that are two levels deep\n```javascript\nlet obj = {\n   name: \"Wilfred\",\n   appearance: [\"short\", \"mustache\"],\n   favorites: {\n      color: \"mauve\",\n      food: \"spaghetti squash\",\n      number: 3\n   }\n}\n// with variable names that match keys\nlet { name, appearance } = obj;\nconsole.log(name); // \"Wilfred\"\nconsole.log(appearance); // [\"short\", \"mustache\"]\n\n// with new variable names (aliasing)\nlet {name: myName, appearance: myAppearance} = obj;\n\nconsole.log(myName); // \"Wilfred\"\nconsole.log(myAppearance); // [\"short\", \"mustache\"]\n\n// in a function call\nlet sayHello = function({name}) {\nconsole.log(\"Hello, \" + name); // \"Hello Wilfred\"\n}\n\n// nested objects + aliasing\nlet { favorites: {color, food: vegetable} } = obj;\nconsole.log(color, vegetable); //=> mauve spaghetti squash\n"}],"position":{"start":{"line":103,"column":1,"offset":3558},"end":{"line":137,"column":5,"offset":4605}}}],"position":{"start":{"line":103,"column":1,"offset":3558},"end":{"line":137,"column":5,"offset":4605}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function that accepts a array as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":139,"column":5,"offset":4611},"end":{"line":139,"column":133,"offset":4739}}}],"position":{"start":{"line":139,"column":5,"offset":4611},"end":{"line":139,"column":133,"offset":4739}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"//\nlet elementCounts = function (array) {\n    let obj = {};\n    array.forEach(function (el) {\n        if (el in obj) obj[el] += 1;\n        else obj[el] = 1;\n    });\n    return obj;\n};\nconsole.log(elementCounts(['e', 'f', 'g', 'f'])); // => Object {e: 1, f: 2, g: 1}\n"}],"position":{"start":{"line":141,"column":5,"offset":4745},"end":{"line":152,"column":8,"offset":5072}}}],"position":{"start":{"line":141,"column":5,"offset":4745},"end":{"line":152,"column":8,"offset":5072}}},{"type":"text","value":"\n"}],"position":{"start":{"line":139,"column":1,"offset":4607},"end":{"line":152,"column":8,"offset":5072}}},{"type":"text","value":"\n"}],"position":{"start":{"line":139,"column":1,"offset":4607},"end":{"line":152,"column":8,"offset":5072}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Callbacks Lesson Concepts","position":{"start":{"line":154,"column":5,"offset":5078},"end":{"line":154,"column":30,"offset":5103}}}],"position":{"start":{"line":154,"column":1,"offset":5074},"end":{"line":154,"column":30,"offset":5103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given multiple plausible reasons, identify why functions are called \"First Class Objects\" in JavaScript.","position":{"start":{"line":156,"column":5,"offset":5109},"end":{"line":156,"column":109,"offset":5213}}}],"position":{"start":{"line":156,"column":5,"offset":5109},"end":{"line":156,"column":109,"offset":5213}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"they can be stored in variables, passed as arguments to other functions, and serve as return value for a function","position":{"start":{"line":157,"column":9,"offset":5222},"end":{"line":157,"column":122,"offset":5335}}}],"position":{"start":{"line":157,"column":5,"offset":5218},"end":{"line":157,"column":122,"offset":5335}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"supports same basic operations as other types ","position":{"start":{"line":158,"column":9,"offset":5344},"end":{"line":158,"column":55,"offset":5390}}},{"type":"text","value":"(","position":{"start":{"line":158,"column":55,"offset":5390},"end":{"line":158,"column":57,"offset":5392}}},{"type":"text","value":"strings, bools, numbers","position":{"start":{"line":158,"column":57,"offset":5392},"end":{"line":158,"column":80,"offset":5415}}},{"type":"text","value":")","position":{"start":{"line":158,"column":80,"offset":5415},"end":{"line":158,"column":82,"offset":5417}}}],"position":{"start":{"line":158,"column":5,"offset":5340},"end":{"line":158,"column":82,"offset":5417}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"higher-order functions take functions as arguments or return functions as values","position":{"start":{"line":159,"column":9,"offset":5426},"end":{"line":159,"column":89,"offset":5506}}}],"position":{"start":{"line":159,"column":5,"offset":5422},"end":{"line":159,"column":89,"offset":5506}}},{"type":"text","value":"\n"}],"position":{"start":{"line":157,"column":5,"offset":5218},"end":{"line":159,"column":89,"offset":5506}}},{"type":"text","value":"\n"}],"position":{"start":{"line":156,"column":1,"offset":5105},"end":{"line":159,"column":89,"offset":5506}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a code snippet containing an anonymous callback, a named callback, and multiple ","position":{"start":{"line":160,"column":5,"offset":5511},"end":{"line":160,"column":91,"offset":5597}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"console.log"}],"position":{"start":{"line":160,"column":91,"offset":5597},"end":{"line":160,"column":104,"offset":5610}}},{"type":"text","value":"s, predict what will be printed","position":{"start":{"line":160,"column":104,"offset":5610},"end":{"line":160,"column":135,"offset":5641}}}],"position":{"start":{"line":160,"column":5,"offset":5511},"end":{"line":160,"column":135,"offset":5641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"what is this referring to?","position":{"start":{"line":161,"column":9,"offset":5650},"end":{"line":161,"column":35,"offset":5676}}}],"position":{"start":{"line":161,"column":5,"offset":5646},"end":{"line":161,"column":35,"offset":5676}}},{"type":"text","value":"\n"}],"position":{"start":{"line":161,"column":5,"offset":5646},"end":{"line":161,"column":35,"offset":5676}}},{"type":"text","value":"\n"}],"position":{"start":{"line":160,"column":1,"offset":5507},"end":{"line":161,"column":35,"offset":5676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Write a function that takes in a value and two callbacks. The function should return the result of the callback that is greater.","position":{"start":{"line":162,"column":5,"offset":5681},"end":{"line":162,"column":133,"offset":5809}}}],"position":{"start":{"line":162,"column":1,"offset":5677},"end":{"line":162,"column":133,"offset":5809}}},{"type":"text","value":"\n"}],"position":{"start":{"line":156,"column":1,"offset":5105},"end":{"line":162,"column":133,"offset":5809}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n\nlet greaterCB = function (val, callback1, callback2) {\n    if (callback1(val) > callback2(val)) {\n        return callback1(val);\n    }\n    return callback2(val);\n};\n"}],"position":{"start":{"line":164,"column":1,"offset":5811},"end":{"line":178,"column":4,"offset":6159}}}],"position":{"start":{"line":164,"column":1,"offset":5811},"end":{"line":178,"column":4,"offset":6159}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// shorter version let greaterCB = function","position":{"start":{"line":180,"column":1,"offset":6161},"end":{"line":180,"column":44,"offset":6204}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":44,"offset":6204},"end":{"line":180,"column":46,"offset":6206}}},{"type":"text","value":"val, callback1, callback2","position":{"start":{"line":180,"column":46,"offset":6206},"end":{"line":180,"column":71,"offset":6231}}},{"type":"text","value":")","position":{"start":{"line":180,"column":71,"offset":6231},"end":{"line":180,"column":73,"offset":6233}}},{"type":"text","value":" { return Math.max","position":{"start":{"line":180,"column":73,"offset":6233},"end":{"line":180,"column":91,"offset":6251}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":91,"offset":6251},"end":{"line":180,"column":93,"offset":6253}}},{"type":"text","value":"callback1","position":{"start":{"line":180,"column":93,"offset":6253},"end":{"line":180,"column":102,"offset":6262}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":102,"offset":6262},"end":{"line":180,"column":104,"offset":6264}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":104,"offset":6264},"end":{"line":180,"column":107,"offset":6267}}},{"type":"text","value":")","position":{"start":{"line":180,"column":107,"offset":6267},"end":{"line":180,"column":109,"offset":6269}}},{"type":"text","value":", callback2","position":{"start":{"line":180,"column":109,"offset":6269},"end":{"line":180,"column":120,"offset":6280}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":120,"offset":6280},"end":{"line":180,"column":122,"offset":6282}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":122,"offset":6282},"end":{"line":180,"column":125,"offset":6285}}},{"type":"text","value":")","position":{"start":{"line":180,"column":125,"offset":6285},"end":{"line":180,"column":127,"offset":6287}}},{"type":"text","value":")","position":{"start":{"line":180,"column":127,"offset":6287},"end":{"line":180,"column":129,"offset":6289}}},{"type":"text","value":"; } // even shorter, cause why not let greaterCB = ","position":{"start":{"line":180,"column":129,"offset":6289},"end":{"line":180,"column":180,"offset":6340}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":180,"offset":6340},"end":{"line":180,"column":182,"offset":6342}}},{"type":"text","value":"val, cb1, cb2","position":{"start":{"line":180,"column":182,"offset":6342},"end":{"line":180,"column":195,"offset":6355}}},{"type":"text","value":")","position":{"start":{"line":180,"column":195,"offset":6355},"end":{"line":180,"column":197,"offset":6357}}},{"type":"text","value":" =","position":{"start":{"line":180,"column":197,"offset":6357},"end":{"line":180,"column":199,"offset":6359}}},{"type":"text","value":">","position":{"start":{"line":180,"column":199,"offset":6359},"end":{"line":180,"column":203,"offset":6363}}},{"type":"text","value":" Math.max","position":{"start":{"line":180,"column":203,"offset":6363},"end":{"line":180,"column":212,"offset":6372}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":212,"offset":6372},"end":{"line":180,"column":214,"offset":6374}}},{"type":"text","value":"cb1","position":{"start":{"line":180,"column":214,"offset":6374},"end":{"line":180,"column":217,"offset":6377}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":217,"offset":6377},"end":{"line":180,"column":219,"offset":6379}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":219,"offset":6379},"end":{"line":180,"column":222,"offset":6382}}},{"type":"text","value":")","position":{"start":{"line":180,"column":222,"offset":6382},"end":{"line":180,"column":224,"offset":6384}}},{"type":"text","value":", cb2","position":{"start":{"line":180,"column":224,"offset":6384},"end":{"line":180,"column":229,"offset":6389}}},{"type":"text","value":"(","position":{"start":{"line":180,"column":229,"offset":6389},"end":{"line":180,"column":231,"offset":6391}}},{"type":"text","value":"val","position":{"start":{"line":180,"column":231,"offset":6391},"end":{"line":180,"column":234,"offset":6394}}},{"type":"text","value":")","position":{"start":{"line":180,"column":234,"offset":6394},"end":{"line":180,"column":236,"offset":6396}}},{"type":"text","value":")","position":{"start":{"line":180,"column":236,"offset":6396},"end":{"line":180,"column":238,"offset":6398}}},{"type":"text","value":";","position":{"start":{"line":180,"column":238,"offset":6398},"end":{"line":180,"column":239,"offset":6399}}}],"position":{"start":{"line":180,"column":1,"offset":6161},"end":{"line":180,"column":239,"offset":6399}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"- Write a function, myMap, that takes in an array and a callback as arguments. The function should mimic the behavior of `Array#map`.\n```javascript\nlet myMap = function(array, callback) {\n   let newArr = [];\n   for (let i = 0; i < array.length; i ++) {\n      mapped = callback(array[i], i, array);\n      newArr.push(mapped);\n   }\n   return newArr;\n}\nconsole.log( myMap([16,25,36], Math.sqrt)); // => [4, 5, 6];\n\nlet myMapArrow = (array, callback) => {\n   let newArr = [];\n   array.forEach( (ele, ind, array) => {\n      newArr.push(callback(ele, ind, array));\n   })\n   return newArr;\n}\nconsole.log(myMapArrow([16,25,36], Math.sqrt)); // => [4, 5, 6];\n"}],"position":{"start":{"line":182,"column":1,"offset":6401},"end":{"line":203,"column":5,"offset":7070}}}],"position":{"start":{"line":182,"column":1,"offset":6401},"end":{"line":203,"column":5,"offset":7070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function, myFilter, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":205,"column":5,"offset":7076},"end":{"line":205,"column":127,"offset":7198}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#filter"}],"position":{"start":{"line":205,"column":127,"offset":7198},"end":{"line":205,"column":141,"offset":7212}}},{"type":"text","value":".","position":{"start":{"line":205,"column":141,"offset":7212},"end":{"line":205,"column":142,"offset":7213}}}],"position":{"start":{"line":205,"column":5,"offset":7076},"end":{"line":205,"column":142,"offset":7213}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let myFilter = function (array, callback) {\n    let filtered = [];\n    for (let i = 0; i < array.length; i++) {\n        if (callback(array[i])) {\n            filtered.push(array[i], i, array);\n        }\n    }\n};\n"}],"position":{"start":{"line":207,"column":5,"offset":7219},"end":{"line":216,"column":8,"offset":7484}}}],"position":{"start":{"line":207,"column":5,"offset":7219},"end":{"line":216,"column":8,"offset":7484}}},{"type":"text","value":"\n"}],"position":{"start":{"line":205,"column":1,"offset":7072},"end":{"line":217,"column":1,"offset":7485}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Write a function, myEvery, that takes in an array and a callback as arguments. The function should mimic the behavior of ","position":{"start":{"line":218,"column":5,"offset":7490},"end":{"line":218,"column":126,"offset":7611}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#every"}],"position":{"start":{"line":218,"column":126,"offset":7611},"end":{"line":218,"column":139,"offset":7624}}},{"type":"text","value":".","position":{"start":{"line":218,"column":139,"offset":7624},"end":{"line":218,"column":140,"offset":7625}}}],"position":{"start":{"line":218,"column":5,"offset":7490},"end":{"line":218,"column":140,"offset":7625}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let myEvery = function (array, callback) {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i], i, array)) {\n            return false;\n        }\n    }\n    return true;\n};\n// with arrow function syntax\nlet myEvery = (array, callback) => {\n    for (let i = 0; i < array.length; i++) {\n        if (!callback(array[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n"}],"position":{"start":{"line":220,"column":5,"offset":7631},"end":{"line":238,"column":8,"offset":8124}}}],"position":{"start":{"line":220,"column":5,"offset":7631},"end":{"line":238,"column":8,"offset":8124}}},{"type":"text","value":"\n"}],"position":{"start":{"line":218,"column":1,"offset":7486},"end":{"line":238,"column":8,"offset":8124}}},{"type":"text","value":"\n"}],"position":{"start":{"line":205,"column":1,"offset":7072},"end":{"line":238,"column":8,"offset":8124}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Scope Lesson Concepts","position":{"start":{"line":240,"column":5,"offset":8130},"end":{"line":240,"column":26,"offset":8151}}}],"position":{"start":{"line":240,"column":1,"offset":8126},"end":{"line":240,"column":26,"offset":8151}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identify the difference between ","position":{"start":{"line":242,"column":5,"offset":8157},"end":{"line":242,"column":37,"offset":8189}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":242,"column":37,"offset":8189},"end":{"line":242,"column":44,"offset":8196}}},{"type":"text","value":", ","position":{"start":{"line":242,"column":44,"offset":8196},"end":{"line":242,"column":46,"offset":8198}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":242,"column":46,"offset":8198},"end":{"line":242,"column":51,"offset":8203}}},{"type":"text","value":", and ","position":{"start":{"line":242,"column":51,"offset":8203},"end":{"line":242,"column":57,"offset":8209}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":242,"column":57,"offset":8209},"end":{"line":242,"column":62,"offset":8214}}},{"type":"text","value":" declarations","position":{"start":{"line":242,"column":62,"offset":8214},"end":{"line":242,"column":75,"offset":8227}}}],"position":{"start":{"line":242,"column":5,"offset":8157},"end":{"line":242,"column":75,"offset":8227}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":243,"column":9,"offset":8236},"end":{"line":243,"column":16,"offset":8243}}},{"type":"text","value":" - cannot reassign variable, scoped to block","position":{"start":{"line":243,"column":16,"offset":8243},"end":{"line":243,"column":60,"offset":8287}}}],"position":{"start":{"line":243,"column":5,"offset":8232},"end":{"line":243,"column":60,"offset":8287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":244,"column":9,"offset":8296},"end":{"line":244,"column":14,"offset":8301}}},{"type":"text","value":" - can reassign variable, scoped to block","position":{"start":{"line":244,"column":14,"offset":8301},"end":{"line":244,"column":55,"offset":8342}}}],"position":{"start":{"line":244,"column":5,"offset":8292},"end":{"line":244,"column":55,"offset":8342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":245,"column":9,"offset":8351},"end":{"line":245,"column":14,"offset":8356}}},{"type":"text","value":" - outdated, may or may not be reassigned, scoped to function. can be not just reassigned, but also redeclared!","position":{"start":{"line":245,"column":14,"offset":8356},"end":{"line":245,"column":125,"offset":8467}}}],"position":{"start":{"line":245,"column":5,"offset":8347},"end":{"line":245,"column":125,"offset":8467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"a variable will always evaluate to the value it contains regardless of how it was declared","position":{"start":{"line":246,"column":9,"offset":8476},"end":{"line":246,"column":99,"offset":8566}}}],"position":{"start":{"line":246,"column":5,"offset":8472},"end":{"line":246,"column":99,"offset":8566}}},{"type":"text","value":"\n"}],"position":{"start":{"line":243,"column":5,"offset":8232},"end":{"line":246,"column":99,"offset":8566}}},{"type":"text","value":"\n"}],"position":{"start":{"line":242,"column":1,"offset":8153},"end":{"line":246,"column":99,"offset":8566}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Explain the difference between ","position":{"start":{"line":247,"column":5,"offset":8571},"end":{"line":247,"column":36,"offset":8602}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":247,"column":36,"offset":8602},"end":{"line":247,"column":43,"offset":8609}}},{"type":"text","value":", ","position":{"start":{"line":247,"column":43,"offset":8609},"end":{"line":247,"column":45,"offset":8611}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":247,"column":45,"offset":8611},"end":{"line":247,"column":50,"offset":8616}}},{"type":"text","value":", and ","position":{"start":{"line":247,"column":50,"offset":8616},"end":{"line":247,"column":56,"offset":8622}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":247,"column":56,"offset":8622},"end":{"line":247,"column":61,"offset":8627}}},{"type":"text","value":" declarations","position":{"start":{"line":247,"column":61,"offset":8627},"end":{"line":247,"column":74,"offset":8640}}}],"position":{"start":{"line":247,"column":5,"offset":8571},"end":{"line":247,"column":74,"offset":8640}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":248,"column":9,"offset":8649},"end":{"line":248,"column":14,"offset":8654}}},{"type":"text","value":" is function scoped—so if you declare it anywhere in a function, the declaration ","position":{"start":{"line":248,"column":14,"offset":8654},"end":{"line":248,"column":95,"offset":8735}}},{"type":"text","value":"(","position":{"start":{"line":248,"column":95,"offset":8735},"end":{"line":248,"column":97,"offset":8737}}},{"type":"text","value":"but not assignment","position":{"start":{"line":248,"column":97,"offset":8737},"end":{"line":248,"column":115,"offset":8755}}},{"type":"text","value":")","position":{"start":{"line":248,"column":115,"offset":8755},"end":{"line":248,"column":117,"offset":8757}}},{"type":"text","value":" is \"hoisted\"","position":{"start":{"line":248,"column":117,"offset":8757},"end":{"line":248,"column":130,"offset":8770}}}],"position":{"start":{"line":248,"column":9,"offset":8649},"end":{"line":248,"column":130,"offset":8770}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"so it will exist in memory as \"undefined\" which is bad and unpredictable","position":{"start":{"line":249,"column":13,"offset":8783},"end":{"line":249,"column":85,"offset":8855}}}],"position":{"start":{"line":249,"column":9,"offset":8779},"end":{"line":249,"column":85,"offset":8855}}},{"type":"text","value":"\n"}],"position":{"start":{"line":249,"column":9,"offset":8779},"end":{"line":249,"column":85,"offset":8855}}},{"type":"text","value":"\n"}],"position":{"start":{"line":248,"column":5,"offset":8645},"end":{"line":249,"column":85,"offset":8855}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":250,"column":9,"offset":8864},"end":{"line":250,"column":14,"offset":8869}}},{"type":"text","value":" will also allow you to redeclare a variable, while ","position":{"start":{"line":250,"column":14,"offset":8869},"end":{"line":250,"column":66,"offset":8921}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":250,"column":66,"offset":8921},"end":{"line":250,"column":71,"offset":8926}}},{"type":"text","value":" or ","position":{"start":{"line":250,"column":71,"offset":8926},"end":{"line":250,"column":75,"offset":8930}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":250,"column":75,"offset":8930},"end":{"line":250,"column":82,"offset":8937}}},{"type":"text","value":" will raise a syntax error. you shouldn't be able to do that!","position":{"start":{"line":250,"column":82,"offset":8937},"end":{"line":250,"column":143,"offset":8998}}}],"position":{"start":{"line":250,"column":5,"offset":8860},"end":{"line":250,"column":143,"offset":8998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":251,"column":9,"offset":9007},"end":{"line":251,"column":16,"offset":9014}}},{"type":"text","value":" won't let you reassign a variable, but if it points to a mutable object, you will still be able to change the value by mutating the object","position":{"start":{"line":251,"column":16,"offset":9014},"end":{"line":251,"column":155,"offset":9153}}}],"position":{"start":{"line":251,"column":5,"offset":9003},"end":{"line":251,"column":155,"offset":9153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"block-scoped variables allow new variables with the same name in new scopes","position":{"start":{"line":252,"column":9,"offset":9162},"end":{"line":252,"column":84,"offset":9237}}}],"position":{"start":{"line":252,"column":5,"offset":9158},"end":{"line":252,"column":84,"offset":9237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"block-scoped still performs hoisting of all variables within the block, but it doesn't initialize to the value of ","position":{"start":{"line":253,"column":9,"offset":9246},"end":{"line":253,"column":123,"offset":9360}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"undefined"}],"position":{"start":{"line":253,"column":123,"offset":9360},"end":{"line":253,"column":134,"offset":9371}}},{"type":"text","value":" like ","position":{"start":{"line":253,"column":134,"offset":9371},"end":{"line":253,"column":140,"offset":9377}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":253,"column":140,"offset":9377},"end":{"line":253,"column":145,"offset":9382}}},{"type":"text","value":" does, so it throws a specific reference error if you try to access the value before it has been declared","position":{"start":{"line":253,"column":145,"offset":9382},"end":{"line":253,"column":250,"offset":9487}}}],"position":{"start":{"line":253,"column":5,"offset":9242},"end":{"line":253,"column":250,"offset":9487}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you do not use ","position":{"start":{"line":254,"column":9,"offset":9496},"end":{"line":254,"column":27,"offset":9514}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":254,"column":27,"offset":9514},"end":{"line":254,"column":32,"offset":9519}}},{"type":"text","value":" or ","position":{"start":{"line":254,"column":32,"offset":9519},"end":{"line":254,"column":36,"offset":9523}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":254,"column":36,"offset":9523},"end":{"line":254,"column":41,"offset":9528}}},{"type":"text","value":" or ","position":{"start":{"line":254,"column":41,"offset":9528},"end":{"line":254,"column":45,"offset":9532}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":254,"column":45,"offset":9532},"end":{"line":254,"column":52,"offset":9539}}},{"type":"text","value":" when initializing, it will be declared as global—THIS IS BAD","position":{"start":{"line":254,"column":52,"offset":9539},"end":{"line":254,"column":113,"offset":9600}}}],"position":{"start":{"line":254,"column":9,"offset":9496},"end":{"line":254,"column":113,"offset":9600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if you assign a value without a declaration, it exists in the global scope ","position":{"start":{"line":255,"column":13,"offset":9613},"end":{"line":255,"column":88,"offset":9688}}},{"type":"text","value":"(","position":{"start":{"line":255,"column":88,"offset":9688},"end":{"line":255,"column":90,"offset":9690}}},{"type":"text","value":"so then it would be accessible by all outer scopes, so bad","position":{"start":{"line":255,"column":90,"offset":9690},"end":{"line":255,"column":148,"offset":9748}}},{"type":"text","value":")","position":{"start":{"line":255,"column":148,"offset":9748},"end":{"line":255,"column":150,"offset":9750}}},{"type":"text","value":". however, there's no hoisting, so it doesn't exist in the scope until after the line is run","position":{"start":{"line":255,"column":150,"offset":9750},"end":{"line":255,"column":242,"offset":9842}}}],"position":{"start":{"line":255,"column":9,"offset":9609},"end":{"line":255,"column":242,"offset":9842}}},{"type":"text","value":"\n"}],"position":{"start":{"line":255,"column":9,"offset":9609},"end":{"line":255,"column":242,"offset":9842}}},{"type":"text","value":"\n"}],"position":{"start":{"line":254,"column":5,"offset":9492},"end":{"line":255,"column":242,"offset":9842}}},{"type":"text","value":"\n"}],"position":{"start":{"line":248,"column":5,"offset":8645},"end":{"line":255,"column":242,"offset":9842}}},{"type":"text","value":"\n"}],"position":{"start":{"line":247,"column":1,"offset":8567},"end":{"line":255,"column":242,"offset":9842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":256,"column":5,"offset":9847},"end":{"line":256,"column":112,"offset":9954}}}],"position":{"start":{"line":256,"column":5,"offset":9847},"end":{"line":256,"column":112,"offset":9954}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"scope of a program means the set of variables that are available for use within the program","position":{"start":{"line":257,"column":9,"offset":9963},"end":{"line":257,"column":100,"offset":10054}}}],"position":{"start":{"line":257,"column":5,"offset":9959},"end":{"line":257,"column":100,"offset":10054}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"global scope is represented by the ","position":{"start":{"line":258,"column":9,"offset":10063},"end":{"line":258,"column":44,"offset":10098}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"window"}],"position":{"start":{"line":258,"column":44,"offset":10098},"end":{"line":258,"column":52,"offset":10106}}},{"type":"text","value":" object in the browser and the ","position":{"start":{"line":258,"column":52,"offset":10106},"end":{"line":258,"column":83,"offset":10137}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"global"}],"position":{"start":{"line":258,"column":83,"offset":10137},"end":{"line":258,"column":91,"offset":10145}}},{"type":"text","value":" object in Node.js","position":{"start":{"line":258,"column":91,"offset":10145},"end":{"line":258,"column":109,"offset":10163}}}],"position":{"start":{"line":258,"column":9,"offset":10063},"end":{"line":258,"column":109,"offset":10163}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"global variables are available everywhere, and so increase the risk of name collisions","position":{"start":{"line":259,"column":13,"offset":10176},"end":{"line":259,"column":99,"offset":10262}}}],"position":{"start":{"line":259,"column":9,"offset":10172},"end":{"line":259,"column":99,"offset":10262}}},{"type":"text","value":"\n"}],"position":{"start":{"line":259,"column":9,"offset":10172},"end":{"line":259,"column":99,"offset":10262}}},{"type":"text","value":"\n"}],"position":{"start":{"line":258,"column":5,"offset":10059},"end":{"line":259,"column":99,"offset":10262}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"local scope is the set of variables available for use within the function","position":{"start":{"line":260,"column":9,"offset":10271},"end":{"line":260,"column":82,"offset":10344}}}],"position":{"start":{"line":260,"column":9,"offset":10271},"end":{"line":260,"column":82,"offset":10344}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"when we enter a function, we enter a new scope","position":{"start":{"line":261,"column":13,"offset":10357},"end":{"line":261,"column":59,"offset":10403}}}],"position":{"start":{"line":261,"column":9,"offset":10353},"end":{"line":261,"column":59,"offset":10403}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"includes functions arguments, local variables declared inside function, and any variables that were already declared when the function is defined ","position":{"start":{"line":262,"column":13,"offset":10416},"end":{"line":262,"column":159,"offset":10562}}},{"type":"text","value":"(","position":{"start":{"line":262,"column":159,"offset":10562},"end":{"line":262,"column":161,"offset":10564}}},{"type":"text","value":"hmm about that last one","position":{"start":{"line":262,"column":161,"offset":10564},"end":{"line":262,"column":184,"offset":10587}}},{"type":"text","value":")","position":{"start":{"line":262,"column":184,"offset":10587},"end":{"line":262,"column":186,"offset":10589}}}],"position":{"start":{"line":262,"column":9,"offset":10412},"end":{"line":262,"column":186,"offset":10589}}},{"type":"text","value":"\n"}],"position":{"start":{"line":261,"column":9,"offset":10353},"end":{"line":262,"column":186,"offset":10589}}},{"type":"text","value":"\n"}],"position":{"start":{"line":260,"column":5,"offset":10267},"end":{"line":262,"column":186,"offset":10589}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"for blocks ","position":{"start":{"line":263,"column":9,"offset":10598},"end":{"line":263,"column":20,"offset":10609}}},{"type":"text","value":"(","position":{"start":{"line":263,"column":20,"offset":10609},"end":{"line":263,"column":22,"offset":10611}}},{"type":"text","value":"denoted by curly braces ","position":{"start":{"line":263,"column":22,"offset":10611},"end":{"line":263,"column":46,"offset":10635}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{}"}],"position":{"start":{"line":263,"column":46,"offset":10635},"end":{"line":263,"column":50,"offset":10639}}},{"type":"text","value":", as in conditionals or ","position":{"start":{"line":263,"column":50,"offset":10639},"end":{"line":263,"column":74,"offset":10663}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"for"}],"position":{"start":{"line":263,"column":74,"offset":10663},"end":{"line":263,"column":79,"offset":10668}}},{"type":"text","value":" loops","position":{"start":{"line":263,"column":79,"offset":10668},"end":{"line":263,"column":85,"offset":10674}}},{"type":"text","value":")","position":{"start":{"line":263,"column":85,"offset":10674},"end":{"line":263,"column":87,"offset":10676}}},{"type":"text","value":", variables can be block scoped","position":{"start":{"line":263,"column":87,"offset":10676},"end":{"line":263,"column":118,"offset":10707}}}],"position":{"start":{"line":263,"column":5,"offset":10594},"end":{"line":263,"column":118,"offset":10707}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"inner scope does not have access to variables in the outer scope","position":{"start":{"line":264,"column":9,"offset":10716},"end":{"line":264,"column":73,"offset":10780}}}],"position":{"start":{"line":264,"column":9,"offset":10716},"end":{"line":264,"column":73,"offset":10780}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"scope chaining—if a given variable is not found in immediate scope, javascript will search all accessible outer scopes until variable is found","position":{"start":{"line":265,"column":13,"offset":10793},"end":{"line":265,"column":155,"offset":10935}}}],"position":{"start":{"line":265,"column":9,"offset":10789},"end":{"line":265,"column":155,"offset":10935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"so an inner scope can access outer scope variables","position":{"start":{"line":266,"column":13,"offset":10948},"end":{"line":266,"column":63,"offset":10998}}}],"position":{"start":{"line":266,"column":9,"offset":10944},"end":{"line":266,"column":63,"offset":10998}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"but an outer scope can never access inner scope variables","position":{"start":{"line":267,"column":13,"offset":11011},"end":{"line":267,"column":70,"offset":11068}}}],"position":{"start":{"line":267,"column":9,"offset":11007},"end":{"line":267,"column":70,"offset":11068}}},{"type":"text","value":"\n"}],"position":{"start":{"line":265,"column":9,"offset":10789},"end":{"line":267,"column":70,"offset":11068}}},{"type":"text","value":"\n"}],"position":{"start":{"line":264,"column":5,"offset":10712},"end":{"line":267,"column":70,"offset":11068}}},{"type":"text","value":"\n"}],"position":{"start":{"line":257,"column":5,"offset":9959},"end":{"line":267,"column":70,"offset":11068}}},{"type":"text","value":"\n"}],"position":{"start":{"line":256,"column":1,"offset":9843},"end":{"line":267,"column":70,"offset":11068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define an arrow function","position":{"start":{"line":268,"column":5,"offset":11073},"end":{"line":268,"column":29,"offset":11097}}}],"position":{"start":{"line":268,"column":5,"offset":11073},"end":{"line":268,"column":29,"offset":11097}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":270,"column":5,"offset":11103},"end":{"line":270,"column":7,"offset":11105}}},{"type":"text","value":"`","position":{"start":{"line":270,"column":7,"offset":11105},"end":{"line":270,"column":9,"offset":11107}}},{"type":"text","value":"`","position":{"start":{"line":270,"column":9,"offset":11107},"end":{"line":270,"column":11,"offset":11109}}},{"type":"text","value":"javascript","position":{"start":{"line":270,"column":11,"offset":11109},"end":{"line":270,"column":21,"offset":11119}}}],"position":{"start":{"line":270,"column":5,"offset":11103},"end":{"line":270,"column":21,"offset":11119}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let arrowFunction = ","position":{"start":{"line":272,"column":5,"offset":11125},"end":{"line":272,"column":25,"offset":11145}}},{"type":"text","value":"(","position":{"start":{"line":272,"column":25,"offset":11145},"end":{"line":272,"column":27,"offset":11147}}},{"type":"text","value":"param1, param2","position":{"start":{"line":272,"column":27,"offset":11147},"end":{"line":272,"column":41,"offset":11161}}},{"type":"text","value":")","position":{"start":{"line":272,"column":41,"offset":11161},"end":{"line":272,"column":43,"offset":11163}}},{"type":"text","value":" =","position":{"start":{"line":272,"column":43,"offset":11163},"end":{"line":272,"column":45,"offset":11165}}},{"type":"text","value":">","position":{"start":{"line":272,"column":45,"offset":11165},"end":{"line":272,"column":49,"offset":11169}}},{"type":"text","value":" {","position":{"start":{"line":272,"column":49,"offset":11169},"end":{"line":272,"column":51,"offset":11171}}}],"position":{"start":{"line":272,"column":5,"offset":11125},"end":{"line":272,"column":51,"offset":11171}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let sum = param1 + param2;","position":{"start":{"line":274,"column":5,"offset":11177},"end":{"line":274,"column":31,"offset":11203}}}],"position":{"start":{"line":274,"column":5,"offset":11177},"end":{"line":274,"column":31,"offset":11203}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"return sum;","position":{"start":{"line":276,"column":5,"offset":11209},"end":{"line":276,"column":16,"offset":11220}}}],"position":{"start":{"line":276,"column":5,"offset":11209},"end":{"line":276,"column":16,"offset":11220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":278,"column":5,"offset":11226},"end":{"line":278,"column":6,"offset":11227}}}],"position":{"start":{"line":278,"column":5,"offset":11226},"end":{"line":278,"column":6,"offset":11227}}},{"type":"text","value":"\n"}],"position":{"start":{"line":268,"column":1,"offset":11069},"end":{"line":278,"column":6,"offset":11227}}},{"type":"text","value":"\n"}],"position":{"start":{"line":242,"column":1,"offset":8153},"end":{"line":278,"column":6,"offset":11227}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// with 1 param you can remove parens around parameters let arrowFunction = param =","position":{"start":{"line":280,"column":1,"offset":11229},"end":{"line":280,"column":84,"offset":11312}}},{"type":"text","value":">","position":{"start":{"line":280,"column":84,"offset":11312},"end":{"line":280,"column":88,"offset":11316}}},{"type":"text","value":" { param += 1; return param; }","position":{"start":{"line":280,"column":88,"offset":11316},"end":{"line":280,"column":118,"offset":11346}}}],"position":{"start":{"line":280,"column":1,"offset":11229},"end":{"line":280,"column":118,"offset":11346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// if your return statement is one line, you can use implied return let arrowFunction = param =","position":{"start":{"line":282,"column":1,"offset":11348},"end":{"line":282,"column":96,"offset":11443}}},{"type":"text","value":">","position":{"start":{"line":282,"column":96,"offset":11443},"end":{"line":282,"column":100,"offset":11447}}},{"type":"text","value":" param + 1;","position":{"start":{"line":282,"column":100,"offset":11447},"end":{"line":282,"column":111,"offset":11458}}}],"position":{"start":{"line":282,"column":1,"offset":11348},"end":{"line":282,"column":111,"offset":11458}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// you don't have to assign to variable, can be anonymous // if you never need to use it again param =","position":{"start":{"line":284,"column":1,"offset":11460},"end":{"line":284,"column":103,"offset":11562}}},{"type":"text","value":">","position":{"start":{"line":284,"column":103,"offset":11562},"end":{"line":284,"column":107,"offset":11566}}},{"type":"text","value":" param + 1;","position":{"start":{"line":284,"column":107,"offset":11566},"end":{"line":284,"column":118,"offset":11577}}}],"position":{"start":{"line":284,"column":1,"offset":11460},"end":{"line":284,"column":118,"offset":11577}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":286,"column":1,"offset":11579},"end":{"line":286,"column":3,"offset":11581}}},{"type":"text","value":"`","position":{"start":{"line":286,"column":3,"offset":11581},"end":{"line":286,"column":5,"offset":11583}}},{"type":"text","value":"`","position":{"start":{"line":286,"column":5,"offset":11583},"end":{"line":286,"column":7,"offset":11585}}}],"position":{"start":{"line":286,"column":1,"offset":11579},"end":{"line":286,"column":7,"offset":11585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given an arrow function, deduce the value of ","position":{"start":{"line":288,"column":5,"offset":11591},"end":{"line":288,"column":50,"offset":11636}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":288,"column":50,"offset":11636},"end":{"line":288,"column":56,"offset":11642}}},{"type":"text","value":" without executing the code","position":{"start":{"line":288,"column":56,"offset":11642},"end":{"line":288,"column":83,"offset":11669}}}],"position":{"start":{"line":288,"column":5,"offset":11591},"end":{"line":288,"column":83,"offset":11669}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"arrow functions are automatically bound to the context they were declared in","position":{"start":{"line":290,"column":9,"offset":11679},"end":{"line":290,"column":85,"offset":11755}}}],"position":{"start":{"line":290,"column":5,"offset":11675},"end":{"line":290,"column":85,"offset":11755}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"unlike regular function which use the context they are invoked in ","position":{"start":{"line":291,"column":9,"offset":11764},"end":{"line":291,"column":75,"offset":11830}}},{"type":"text","value":"(","position":{"start":{"line":291,"column":75,"offset":11830},"end":{"line":291,"column":77,"offset":11832}}},{"type":"text","value":"unless they have been bound using ","position":{"start":{"line":291,"column":77,"offset":11832},"end":{"line":291,"column":111,"offset":11866}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Function#bind"}],"position":{"start":{"line":291,"column":111,"offset":11866},"end":{"line":291,"column":126,"offset":11881}}},{"type":"text","value":")","position":{"start":{"line":291,"column":126,"offset":11881},"end":{"line":291,"column":128,"offset":11883}}}],"position":{"start":{"line":291,"column":5,"offset":11760},"end":{"line":291,"column":128,"offset":11883}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"if you implement an arrow function as a method in an object the context it will be bound to is NOT the object itself, but the global context","position":{"start":{"line":292,"column":9,"offset":11892},"end":{"line":292,"column":149,"offset":12032}}}],"position":{"start":{"line":292,"column":5,"offset":11888},"end":{"line":292,"column":149,"offset":12032}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"so you can't use an arrow function to define a method directly","position":{"start":{"line":293,"column":9,"offset":12041},"end":{"line":293,"column":71,"offset":12103}}}],"position":{"start":{"line":293,"column":9,"offset":12041},"end":{"line":293,"column":71,"offset":12103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":295,"column":9,"offset":12113},"end":{"line":295,"column":11,"offset":12115}}},{"type":"text","value":"`","position":{"start":{"line":295,"column":11,"offset":12115},"end":{"line":295,"column":13,"offset":12117}}},{"type":"text","value":"`","position":{"start":{"line":295,"column":13,"offset":12117},"end":{"line":295,"column":15,"offset":12119}}},{"type":"text","value":"javascript","position":{"start":{"line":295,"column":15,"offset":12119},"end":{"line":295,"column":25,"offset":12129}}}],"position":{"start":{"line":295,"column":9,"offset":12113},"end":{"line":295,"column":25,"offset":12129}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let obj = {","position":{"start":{"line":297,"column":9,"offset":12139},"end":{"line":297,"column":20,"offset":12150}}}],"position":{"start":{"line":297,"column":9,"offset":12139},"end":{"line":297,"column":20,"offset":12150}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"name: \"my object\",","position":{"start":{"line":299,"column":9,"offset":12160},"end":{"line":299,"column":27,"offset":12178}}}],"position":{"start":{"line":299,"column":9,"offset":12160},"end":{"line":299,"column":27,"offset":12178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"unboundFunc: function ","position":{"start":{"line":301,"column":9,"offset":12188},"end":{"line":301,"column":31,"offset":12210}}},{"type":"text","value":"(","position":{"start":{"line":301,"column":31,"offset":12210},"end":{"line":301,"column":33,"offset":12212}}},{"type":"text","value":")","position":{"start":{"line":301,"column":33,"offset":12212},"end":{"line":301,"column":35,"offset":12214}}},{"type":"text","value":" {","position":{"start":{"line":301,"column":35,"offset":12214},"end":{"line":301,"column":37,"offset":12216}}}],"position":{"start":{"line":301,"column":9,"offset":12188},"end":{"line":301,"column":37,"offset":12216}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"return this.name;","position":{"start":{"line":303,"column":9,"offset":12226},"end":{"line":303,"column":26,"offset":12243}}}],"position":{"start":{"line":303,"column":9,"offset":12226},"end":{"line":303,"column":26,"offset":12243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// this function will be able to be called on different objects","position":{"start":{"line":305,"column":9,"offset":12253},"end":{"line":305,"column":72,"offset":12316}}}],"position":{"start":{"line":305,"column":9,"offset":12253},"end":{"line":305,"column":72,"offset":12316}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":307,"column":9,"offset":12326},"end":{"line":307,"column":11,"offset":12328}}}],"position":{"start":{"line":307,"column":9,"offset":12326},"end":{"line":307,"column":11,"offset":12328}}},{"type":"text","value":"\n"}],"position":{"start":{"line":293,"column":5,"offset":12037},"end":{"line":307,"column":11,"offset":12328}}},{"type":"text","value":"\n"}],"position":{"start":{"line":290,"column":5,"offset":11675},"end":{"line":307,"column":11,"offset":12328}}},{"type":"text","value":"\n"}],"position":{"start":{"line":288,"column":1,"offset":11587},"end":{"line":307,"column":11,"offset":12328}}},{"type":"text","value":"\n"}],"position":{"start":{"line":288,"column":1,"offset":11587},"end":{"line":307,"column":11,"offset":12328}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":309,"column":1,"offset":12330},"end":{"line":309,"column":4,"offset":12333}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"boundToGlobal: ","position":{"start":{"line":311,"column":1,"offset":12335},"end":{"line":311,"column":16,"offset":12350}}},{"type":"text","value":"(","position":{"start":{"line":311,"column":16,"offset":12350},"end":{"line":311,"column":18,"offset":12352}}},{"type":"text","value":")","position":{"start":{"line":311,"column":18,"offset":12352},"end":{"line":311,"column":20,"offset":12354}}},{"type":"text","value":" =","position":{"start":{"line":311,"column":20,"offset":12354},"end":{"line":311,"column":22,"offset":12356}}},{"type":"text","value":">","position":{"start":{"line":311,"column":22,"offset":12356},"end":{"line":311,"column":26,"offset":12360}}},{"type":"text","value":" { return this.name; // this function, no matter how you call it, will be called // on the global object, and it cannot be rebound // this is because it was defined using arrow syntax },","position":{"start":{"line":311,"column":26,"offset":12360},"end":{"line":311,"column":212,"offset":12546}}}],"position":{"start":{"line":311,"column":1,"offset":12335},"end":{"line":311,"column":212,"offset":12546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"makeFuncBoundToObj: function () {\n    return () => {\n        return this.name;\n    }\n    // this function will return a function that will be bound\n    // to the object where we call the outer method\n    // because the arrow syntax is nested inside one of this\n    // function's methods, it cannot be rebound\n},\n\nmakeUnboundFunc: function () {\n    return function () {\n        return this.name;\n    }\n    //this function will return a function that will still be unbound\n},\n\nimmediatelyInvokedFunc: function () {\n    return this.name;\n}(), // this property will be set to the return value of this anonymous function,\n// which is invoked during the object definition;\n// basically, it's a way to check the context inside of an object, at this moment\n\ninnerObj: {\n    name: \"inner object\",\n    innerArrowFunc: () =>  {\n        return this.name;\n    } // the context inside a nested object is not the parent, it's still\n    // the global object. entering an object definition doesn't change the context\n},\n\n\nlet otherObj = { name: \"my other object\" }\n// call unboundFunc on obj, we get \"my object\" console.log(\"unboundFunc: \", obj.unboundFunc()); // => \"my object\" // assign unboundFunc to a variable and call it let newFunc = obj.unboundFunc; // this newFunc will default to being called on global object console.log(\"newFunc: \",newFunc()); // => undefined // but you could bind it directly to a different object if you wanted console.log(\"newFunc: \", newFunc.bind(otherObj)()); // \"my other object\"\n// meanwhile, obj.boundToGlobal will only ever be called on global object console.log(\"boundToGlobal: \", obj.boundToGlobal()); //=> undefined let newBoundFunc = obj.boundToGlobal; console.log(\"newBoundFunc: \", newBoundFunc()); // => undefined // even if you try to directly bind to another object, it won't work! console.log(\"newBoundFunc: \", newBoundFunc.bind(otherObj)()); // => undefined\n// let's make a new function that will always be bound to the context // where we call our function maker let boundFunc = obj.makeFuncBoundToObj();// note that we're invoking, not just assigning console.log(\"boundFunc: \", boundFunc()); // => \"my object\" // we can't rebind this function console.log(\"boundFunc: \", boundFunc.bind(otherObj)()) // =>\"my object\"\n// but if I call makeFuncBoundToObj on another context // the new bound function is stuck with that other context let boundToOther = obj.makeFuncBoundToObj.bind(otherObj)(); console.log(\"boundToOther: \", boundToOther()); // => \"my other object\" console.log(\"boundToOther: \", boundToOther.bind(obj)()) // \"my other object\"\n// the return value of my immediately invoked function // shows that the context inside of the object is the // global object, not the object itself // context only changes inside a function that is called // on an object console.log(\"immediatelyInvokedFunc: \", obj.immediatelyInvokedFunc); // => undefined\n// even though we're inside a nested object, the context is // still the same as it was outside the outer object // in this case, the global object console.log(\"innerArrowFunc: \", obj.innerObj.innerArrowFunc()); // => undefined\n"}],"position":{"start":{"line":313,"column":1,"offset":12548},"end":{"line":353,"column":4,"offset":15670}}}],"position":{"start":{"line":313,"column":1,"offset":12548},"end":{"line":353,"column":4,"offset":15670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"}","position":{"start":{"line":355,"column":1,"offset":15672},"end":{"line":355,"column":2,"offset":15673}}}],"position":{"start":{"line":355,"column":1,"offset":15672},"end":{"line":355,"column":2,"offset":15673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"- Implement a closure and explain how the closure effects scope\n   - a closure is \"the combination of a function and the lexical environment within which that function was declared\"\n      - alternatively, \"when an inner function uses or changes variables in an outer function\"\n   - closures have access to any variables within their own scope + scope of outer functions + global scope — the set of all these available variables is \"lexical environemnt\"\n   - closure keeps reference to all variables **even if the outer function has returned**\n      - each function has a private mutable state that cannot be accessed externally\n      - the inner function will maintain a reference to the scope in which it was declared. so it has access to variables that were initialized in any outer scope—even if that scope\n      - if a variable exists in the scope of what could have been accessed by a function (e.g. global scope, outer function, etc), does that variable wind up in the closure even if it never got accessed?\n      - if you change the value of a variable (e.g. i++) you will change the value of that variable in the scope that it was declared in\n\n\n```javascript\nfunction createCounter() {\n   // this function starts a counter at 0, then returns a\n   // new function that can access and change that counter\n   //\n   // each new counter you create will have a single internal\n   // state, that can be changed only by calling the function.\n   // you can't access that state from outside of the function,\n   // even though the count variable in question is initialized\n   // by the outer function, and it remains accessible to the\n   // inner function after the outer function returns.\n   let count = 0;\n   return function() {\n      count ++;\n      return count;\n   }\n}\n\nlet counter = createCounter();\nconsole.log(counter()); //=> 1\nconsole.log(counter()); //=> 2\n// so the closure here comes into play because\n// an inner function is accessing and changing\n// a variable from an outer function\n\n// the closure is the combination of the counter\n// function and the all the variables that existed\n// in the scope that it was declared in. because\n// inner blocks/functions have access to outer\n// scopes, that includes the scope of the outer\n// function.\n\n// so counter variable is a closure, in that\n// it contains the inner count value that was\n// initialized by the outer createCounter() function\n// count has been captured or closed over\n\n// this state is private, so if i run createCounter again\n// i get a totally separate count that doesn't interact\n// with the previous one and each of the new functions\n// will have their own internal state based on the\n// initial declaration in the now-closed outer function\n\nlet counter2 = createCounter();\nconsole.log(counter2()); // => 1\n\n// if i set a new function equal to my existing counter\n// the internal state is shared with the new function\nlet counter3 = counter2;\nconsole.log(counter3());\n"}],"position":{"start":{"line":357,"column":1,"offset":15675},"end":{"line":419,"column":5,"offset":18639}}}],"position":{"start":{"line":357,"column":1,"offset":15675},"end":{"line":419,"column":5,"offset":18639}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a method that references ","position":{"start":{"line":421,"column":5,"offset":18645},"end":{"line":421,"column":37,"offset":18677}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":421,"column":37,"offset":18677},"end":{"line":421,"column":43,"offset":18683}}},{"type":"text","value":" on an object literal","position":{"start":{"line":421,"column":43,"offset":18683},"end":{"line":421,"column":64,"offset":18704}}}],"position":{"start":{"line":421,"column":5,"offset":18645},"end":{"line":421,"column":64,"offset":18704}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"when we use ","position":{"start":{"line":422,"column":9,"offset":18713},"end":{"line":422,"column":21,"offset":18725}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":422,"column":21,"offset":18725},"end":{"line":422,"column":27,"offset":18731}}},{"type":"text","value":" in a method it refers to the object that the method is invoked on","position":{"start":{"line":422,"column":27,"offset":18731},"end":{"line":422,"column":93,"offset":18797}}}],"position":{"start":{"line":422,"column":9,"offset":18713},"end":{"line":422,"column":93,"offset":18797}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"it will let you access other pieces of information from within that object, or even other methods","position":{"start":{"line":423,"column":13,"offset":18810},"end":{"line":423,"column":110,"offset":18907}}}],"position":{"start":{"line":423,"column":9,"offset":18806},"end":{"line":423,"column":110,"offset":18907}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"method style invocation - ","position":{"start":{"line":424,"column":13,"offset":18920},"end":{"line":424,"column":39,"offset":18946}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"object.method(args)"}],"position":{"start":{"line":424,"column":39,"offset":18946},"end":{"line":424,"column":60,"offset":18967}}},{"type":"text","value":" ","position":{"start":{"line":424,"column":60,"offset":18967},"end":{"line":424,"column":61,"offset":18968}}},{"type":"text","value":"(","position":{"start":{"line":424,"column":61,"offset":18968},"end":{"line":424,"column":63,"offset":18970}}},{"type":"text","value":"e.g. built in examples like ","position":{"start":{"line":424,"column":63,"offset":18970},"end":{"line":424,"column":91,"offset":18998}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Array#push"}],"position":{"start":{"line":424,"column":91,"offset":18998},"end":{"line":424,"column":103,"offset":19010}}},{"type":"text","value":", or ","position":{"start":{"line":424,"column":103,"offset":19010},"end":{"line":424,"column":108,"offset":19015}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"String#toUpperCase"}],"position":{"start":{"line":424,"column":108,"offset":19015},"end":{"line":424,"column":128,"offset":19035}}},{"type":"text","value":")","position":{"start":{"line":424,"column":128,"offset":19035},"end":{"line":424,"column":130,"offset":19037}}}],"position":{"start":{"line":424,"column":9,"offset":18916},"end":{"line":424,"column":130,"offset":19037}}},{"type":"text","value":"\n"}],"position":{"start":{"line":423,"column":9,"offset":18806},"end":{"line":424,"column":130,"offset":19037}}},{"type":"text","value":"\n"}],"position":{"start":{"line":422,"column":5,"offset":18709},"end":{"line":424,"column":130,"offset":19037}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"context is set every time we invoke a function","position":{"start":{"line":425,"column":9,"offset":19046},"end":{"line":425,"column":55,"offset":19092}}}],"position":{"start":{"line":425,"column":5,"offset":19042},"end":{"line":425,"column":55,"offset":19092}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"function style invocation sets the context to the global object no matter what","position":{"start":{"line":426,"column":9,"offset":19101},"end":{"line":426,"column":87,"offset":19179}}}],"position":{"start":{"line":426,"column":5,"offset":19097},"end":{"line":426,"column":87,"offset":19179}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"being inside an object does not make the context that object! you still have to use method-style invocation","position":{"start":{"line":427,"column":9,"offset":19188},"end":{"line":427,"column":116,"offset":19295}}}],"position":{"start":{"line":427,"column":5,"offset":19184},"end":{"line":427,"column":116,"offset":19295}}},{"type":"text","value":"\n"}],"position":{"start":{"line":422,"column":5,"offset":18709},"end":{"line":427,"column":116,"offset":19295}}},{"type":"text","value":"\n"}],"position":{"start":{"line":421,"column":1,"offset":18641},"end":{"line":427,"column":116,"offset":19295}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Utilize the built in ","position":{"start":{"line":428,"column":5,"offset":19300},"end":{"line":428,"column":26,"offset":19321}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Function#bind"}],"position":{"start":{"line":428,"column":26,"offset":19321},"end":{"line":428,"column":41,"offset":19336}}},{"type":"text","value":" on a callback to maintain the context of this","position":{"start":{"line":428,"column":41,"offset":19336},"end":{"line":428,"column":87,"offset":19382}}}],"position":{"start":{"line":428,"column":5,"offset":19300},"end":{"line":428,"column":87,"offset":19382}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"when we call bind on a function, we get an exotic function back—so the context will always be the same for that new function","position":{"start":{"line":430,"column":9,"offset":19392},"end":{"line":430,"column":133,"offset":19516}}}],"position":{"start":{"line":430,"column":5,"offset":19388},"end":{"line":430,"column":133,"offset":19516}}},{"type":"text","value":"\n"}],"position":{"start":{"line":430,"column":5,"offset":19388},"end":{"line":430,"column":133,"offset":19516}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nlet sayMeow = cat.purrMore; console.log(sayMeow()); // TypeError: this.purr is not a function\n\n\n// we can use the built in Function.bind to ensure our context, our this, // is the cat object let boundCat = sayMeow.bind(cat);\nboundCat(); // prints \"meow\"\n"}],"position":{"start":{"line":432,"column":5,"offset":19522},"end":{"line":446,"column":8,"offset":19934}}}],"position":{"start":{"line":432,"column":5,"offset":19522},"end":{"line":446,"column":8,"offset":19934}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":448,"column":5,"offset":19940},"end":{"line":448,"column":7,"offset":19942}}},{"type":"text","value":"`","position":{"start":{"line":448,"column":7,"offset":19942},"end":{"line":448,"column":9,"offset":19944}}}],"position":{"start":{"line":448,"column":5,"offset":19940},"end":{"line":448,"column":9,"offset":19944}}},{"type":"text","value":"\n"}],"position":{"start":{"line":428,"column":1,"offset":19296},"end":{"line":448,"column":9,"offset":19944}}},{"type":"text","value":"\n"}],"position":{"start":{"line":421,"column":1,"offset":18641},"end":{"line":448,"column":9,"offset":19944}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":450,"column":1,"offset":19946},"end":{"line":450,"column":4,"offset":19949}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":452,"column":1,"offset":19951},"end":{"line":452,"column":4,"offset":19954}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```javascript\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n"}],"position":{"start":{"line":454,"column":1,"offset":19956},"end":{"line":481,"column":5,"offset":21914}}}],"position":{"start":{"line":454,"column":1,"offset":19956},"end":{"line":481,"column":5,"offset":21914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":483,"column":5,"offset":21920},"end":{"line":483,"column":60,"offset":21975}}}],"position":{"start":{"line":483,"column":5,"offset":21920},"end":{"line":483,"column":60,"offset":21975}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":484,"column":9,"offset":21984},"end":{"line":484,"column":105,"offset":22080}}}],"position":{"start":{"line":484,"column":5,"offset":21980},"end":{"line":484,"column":105,"offset":22080}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":485,"column":9,"offset":22089},"end":{"line":485,"column":105,"offset":22185}}}],"position":{"start":{"line":485,"column":5,"offset":22085},"end":{"line":485,"column":105,"offset":22185}}},{"type":"text","value":"\n"}],"position":{"start":{"line":484,"column":5,"offset":21980},"end":{"line":485,"column":105,"offset":22185}}},{"type":"text","value":"\n"}],"position":{"start":{"line":483,"column":1,"offset":21916},"end":{"line":485,"column":105,"offset":22185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":486,"column":5,"offset":22190},"end":{"line":486,"column":55,"offset":22240}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":486,"column":55,"offset":22240},"end":{"line":486,"column":61,"offset":22246}}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":486,"column":61,"offset":22246},"end":{"line":486,"column":183,"offset":22368}}}],"position":{"start":{"line":486,"column":5,"offset":22190},"end":{"line":486,"column":183,"offset":22368}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"let cat = {\npurr: function () {\nconsole.log(\"meow\");\n},\npurrMore: function () {\nthis.purr();\n},\n};\nglobal.setTimeout(cat.purrMore, 5000); // 5 seconds later: TypeError: this.purr is not a function\n"}],"position":{"start":{"line":488,"column":5,"offset":22374},"end":{"line":498,"column":8,"offset":22622}}}],"position":{"start":{"line":488,"column":5,"offset":22374},"end":{"line":498,"column":8,"offset":22622}}},{"type":"text","value":"\n"}],"position":{"start":{"line":486,"column":1,"offset":22186},"end":{"line":498,"column":8,"offset":22622}}},{"type":"text","value":"\n"}],"position":{"start":{"line":483,"column":1,"offset":21916},"end":{"line":498,"column":8,"offset":22622}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":500,"column":1,"offset":22624},"end":{"line":500,"column":29,"offset":22652}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"use strict\";"}],"position":{"start":{"line":500,"column":29,"offset":22652},"end":{"line":500,"column":44,"offset":22667}}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":500,"column":44,"offset":22667},"end":{"line":500,"column":105,"offset":22728}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":500,"column":105,"offset":22728},"end":{"line":500,"column":111,"offset":22734}}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":500,"column":111,"offset":22734},"end":{"line":500,"column":148,"offset":22771}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":500,"column":148,"offset":22771},"end":{"line":500,"column":154,"offset":22777}}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":500,"column":154,"offset":22777},"end":{"line":500,"column":274,"offset":22897}}}],"position":{"start":{"line":500,"column":1,"offset":22624},"end":{"line":500,"column":274,"offset":22897}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":502,"column":1,"offset":22899},"end":{"line":502,"column":4,"offset":22902}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let sayMeow = cat.purrMore; console.log","position":{"start":{"line":504,"column":1,"offset":22904},"end":{"line":504,"column":40,"offset":22943}}},{"type":"text","value":"(","position":{"start":{"line":504,"column":40,"offset":22943},"end":{"line":504,"column":42,"offset":22945}}},{"type":"text","value":"sayMeow","position":{"start":{"line":504,"column":42,"offset":22945},"end":{"line":504,"column":49,"offset":22952}}},{"type":"text","value":"(","position":{"start":{"line":504,"column":49,"offset":22952},"end":{"line":504,"column":51,"offset":22954}}},{"type":"text","value":")","position":{"start":{"line":504,"column":51,"offset":22954},"end":{"line":504,"column":53,"offset":22956}}},{"type":"text","value":")","position":{"start":{"line":504,"column":53,"offset":22956},"end":{"line":504,"column":55,"offset":22958}}},{"type":"text","value":"; // TypeError: this.purr is not a function","position":{"start":{"line":504,"column":55,"offset":22958},"end":{"line":504,"column":98,"offset":23001}}}],"position":{"start":{"line":504,"column":1,"offset":22904},"end":{"line":504,"column":98,"offset":23001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"// we can use the built in Function.bind to ensure our context, our ","position":{"start":{"line":506,"column":1,"offset":23003},"end":{"line":506,"column":69,"offset":23071}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":506,"column":69,"offset":23071},"end":{"line":506,"column":75,"offset":23077}}},{"type":"text","value":", // is the cat object let boundCat = sayMeow.bind","position":{"start":{"line":506,"column":75,"offset":23077},"end":{"line":506,"column":125,"offset":23127}}},{"type":"text","value":"(","position":{"start":{"line":506,"column":125,"offset":23127},"end":{"line":506,"column":127,"offset":23129}}},{"type":"text","value":"cat","position":{"start":{"line":506,"column":127,"offset":23129},"end":{"line":506,"column":130,"offset":23132}}},{"type":"text","value":")","position":{"start":{"line":506,"column":130,"offset":23132},"end":{"line":506,"column":132,"offset":23134}}},{"type":"text","value":";","position":{"start":{"line":506,"column":132,"offset":23134},"end":{"line":506,"column":133,"offset":23135}}}],"position":{"start":{"line":506,"column":1,"offset":23003},"end":{"line":506,"column":133,"offset":23135}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"boundCat","position":{"start":{"line":508,"column":1,"offset":23137},"end":{"line":508,"column":9,"offset":23145}}},{"type":"text","value":"(","position":{"start":{"line":508,"column":9,"offset":23145},"end":{"line":508,"column":11,"offset":23147}}},{"type":"text","value":")","position":{"start":{"line":508,"column":11,"offset":23147},"end":{"line":508,"column":13,"offset":23149}}},{"type":"text","value":"; // prints \"meow\"","position":{"start":{"line":508,"column":13,"offset":23149},"end":{"line":508,"column":31,"offset":23167}}}],"position":{"start":{"line":508,"column":1,"offset":23137},"end":{"line":508,"column":31,"offset":23167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-text"]},"children":[{"type":"text","value":"   - `bind` can also work with arguments, so you can have a version of a function with particular arguments and a particular context. the first arg will be the context aka the `this` you want it to use. the next arguments will be the functions arguments that you are binding\n      - if you just want to bind it to those arguments in particular, you can use `null` as the first argument, so the context won't be bound, just the arguments\n- Given a code snippet, identify what `this` refers to\n   - important to recognize the difference between scope and context\n      - scope works like a dictionary that has all the variables that are available within a given block, plus a pointer back the next outer scope (which itself has pointers to new scopes until you reach the global scope. so you can think about a whole given block's scope as a kind of linked list of dictionaries) (also, this is not to say that scope is actually implemented in this way, that is just the schema that i can use to understand it)\n      - context refers to the value of the `this` keyword\n   - the keyword `this` exists in every function and it evaluates to the object that is currently invoking that function\n   - so the context is fairly straightforward when we talk about methods being called on specific objects\n   - you could, however, call an object's method on something other than that object, and then this would refer to the context where/how it was called, e.g.\n```javascript\nlet dog = {\n   name: \"Bowser\",\n   changeName: function () {\n      this.name = \"Layla\";\n  },\n};\n\n// note this is **not invoked** - we are assigning the function itself\nlet change = dog.changeName;\nconsole.log(change()); // undefined\n\n// our dog still has the same name\nconsole.log(dog); // { name: 'Bowser', changeName: [Function: changeName] }\n\n// instead of changing the dog we changed the global name!!!\nconsole.log(this); // Object [global] {etc, etc, etc,  name: 'Layla'}\n"}],"position":{"start":{"line":510,"column":1,"offset":23169},"end":{"line":537,"column":5,"offset":25121}}}],"position":{"start":{"line":510,"column":1,"offset":23169},"end":{"line":537,"column":5,"offset":25121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"CALLING SOMETHING IN THE WRONG CONTEXT CAN MESS YOU UP!","position":{"start":{"line":539,"column":5,"offset":25127},"end":{"line":539,"column":60,"offset":25182}}}],"position":{"start":{"line":539,"column":5,"offset":25127},"end":{"line":539,"column":60,"offset":25182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"could throw an error if it expects this to have some other method or whatever that doesn't exist","position":{"start":{"line":540,"column":9,"offset":25191},"end":{"line":540,"column":105,"offset":25287}}}],"position":{"start":{"line":540,"column":5,"offset":25187},"end":{"line":540,"column":105,"offset":25287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"you could also overwrite values or assign values to exist in a space where they should not exist","position":{"start":{"line":541,"column":9,"offset":25296},"end":{"line":541,"column":105,"offset":25392}}}],"position":{"start":{"line":541,"column":5,"offset":25292},"end":{"line":541,"column":105,"offset":25392}}},{"type":"text","value":"\n"}],"position":{"start":{"line":540,"column":5,"offset":25187},"end":{"line":541,"column":105,"offset":25392}}},{"type":"text","value":"\n"}],"position":{"start":{"line":539,"column":1,"offset":25123},"end":{"line":541,"column":105,"offset":25392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"if you call a function as a callback, it will set ","position":{"start":{"line":542,"column":5,"offset":25397},"end":{"line":542,"column":55,"offset":25447}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":542,"column":55,"offset":25447},"end":{"line":542,"column":61,"offset":25453}}},{"type":"text","value":" to be the outer function itself, even if the function you were calling is a method that was called on a particular object","position":{"start":{"line":542,"column":61,"offset":25453},"end":{"line":542,"column":183,"offset":25575}}}],"position":{"start":{"line":542,"column":5,"offset":25397},"end":{"line":542,"column":183,"offset":25575}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":544,"column":5,"offset":25581},"end":{"line":544,"column":7,"offset":25583}}},{"type":"text","value":"`","position":{"start":{"line":544,"column":7,"offset":25583},"end":{"line":544,"column":9,"offset":25585}}},{"type":"text","value":"`","position":{"start":{"line":544,"column":9,"offset":25585},"end":{"line":544,"column":11,"offset":25587}}},{"type":"text","value":"javascript","position":{"start":{"line":544,"column":11,"offset":25587},"end":{"line":544,"column":21,"offset":25597}}}],"position":{"start":{"line":544,"column":5,"offset":25581},"end":{"line":544,"column":21,"offset":25597}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"let cat = {","position":{"start":{"line":546,"column":5,"offset":25603},"end":{"line":546,"column":16,"offset":25614}}}],"position":{"start":{"line":546,"column":5,"offset":25603},"end":{"line":546,"column":16,"offset":25614}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"purr: function ","position":{"start":{"line":548,"column":5,"offset":25620},"end":{"line":548,"column":20,"offset":25635}}},{"type":"text","value":"(","position":{"start":{"line":548,"column":20,"offset":25635},"end":{"line":548,"column":22,"offset":25637}}},{"type":"text","value":")","position":{"start":{"line":548,"column":22,"offset":25637},"end":{"line":548,"column":24,"offset":25639}}},{"type":"text","value":" {","position":{"start":{"line":548,"column":24,"offset":25639},"end":{"line":548,"column":26,"offset":25641}}}],"position":{"start":{"line":548,"column":5,"offset":25620},"end":{"line":548,"column":26,"offset":25641}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"console.log","position":{"start":{"line":550,"column":5,"offset":25647},"end":{"line":550,"column":16,"offset":25658}}},{"type":"text","value":"(","position":{"start":{"line":550,"column":16,"offset":25658},"end":{"line":550,"column":18,"offset":25660}}},{"type":"text","value":"\"meow\"","position":{"start":{"line":550,"column":18,"offset":25660},"end":{"line":550,"column":24,"offset":25666}}},{"type":"text","value":")","position":{"start":{"line":550,"column":24,"offset":25666},"end":{"line":550,"column":26,"offset":25668}}},{"type":"text","value":";","position":{"start":{"line":550,"column":26,"offset":25668},"end":{"line":550,"column":27,"offset":25669}}}],"position":{"start":{"line":550,"column":5,"offset":25647},"end":{"line":550,"column":27,"offset":25669}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":552,"column":5,"offset":25675},"end":{"line":552,"column":7,"offset":25677}}}],"position":{"start":{"line":552,"column":5,"offset":25675},"end":{"line":552,"column":7,"offset":25677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"purrMore: function ","position":{"start":{"line":554,"column":5,"offset":25683},"end":{"line":554,"column":24,"offset":25702}}},{"type":"text","value":"(","position":{"start":{"line":554,"column":24,"offset":25702},"end":{"line":554,"column":26,"offset":25704}}},{"type":"text","value":")","position":{"start":{"line":554,"column":26,"offset":25704},"end":{"line":554,"column":28,"offset":25706}}},{"type":"text","value":" {","position":{"start":{"line":554,"column":28,"offset":25706},"end":{"line":554,"column":30,"offset":25708}}}],"position":{"start":{"line":554,"column":5,"offset":25683},"end":{"line":554,"column":30,"offset":25708}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"this.purr","position":{"start":{"line":556,"column":5,"offset":25714},"end":{"line":556,"column":14,"offset":25723}}},{"type":"text","value":"(","position":{"start":{"line":556,"column":14,"offset":25723},"end":{"line":556,"column":16,"offset":25725}}},{"type":"text","value":")","position":{"start":{"line":556,"column":16,"offset":25725},"end":{"line":556,"column":18,"offset":25727}}},{"type":"text","value":";","position":{"start":{"line":556,"column":18,"offset":25727},"end":{"line":556,"column":19,"offset":25728}}}],"position":{"start":{"line":556,"column":5,"offset":25714},"end":{"line":556,"column":19,"offset":25728}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"},","position":{"start":{"line":558,"column":5,"offset":25734},"end":{"line":558,"column":7,"offset":25736}}}],"position":{"start":{"line":558,"column":5,"offset":25734},"end":{"line":558,"column":7,"offset":25736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"};","position":{"start":{"line":560,"column":5,"offset":25742},"end":{"line":560,"column":7,"offset":25744}}}],"position":{"start":{"line":560,"column":5,"offset":25742},"end":{"line":560,"column":7,"offset":25744}}},{"type":"text","value":"\n"}],"position":{"start":{"line":542,"column":1,"offset":25393},"end":{"line":560,"column":7,"offset":25744}}},{"type":"text","value":"\n"}],"position":{"start":{"line":539,"column":1,"offset":25123},"end":{"line":560,"column":7,"offset":25744}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"global.setTimeout","position":{"start":{"line":562,"column":1,"offset":25746},"end":{"line":562,"column":18,"offset":25763}}},{"type":"text","value":"(","position":{"start":{"line":562,"column":18,"offset":25763},"end":{"line":562,"column":20,"offset":25765}}},{"type":"text","value":"cat.purrMore, 5000","position":{"start":{"line":562,"column":20,"offset":25765},"end":{"line":562,"column":38,"offset":25783}}},{"type":"text","value":")","position":{"start":{"line":562,"column":38,"offset":25783},"end":{"line":562,"column":40,"offset":25785}}},{"type":"text","value":"; // 5 seconds later: TypeError: this.purr is not a function","position":{"start":{"line":562,"column":40,"offset":25785},"end":{"line":562,"column":100,"offset":25845}}}],"position":{"start":{"line":562,"column":1,"offset":25746},"end":{"line":562,"column":100,"offset":25845}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"`","position":{"start":{"line":564,"column":1,"offset":25847},"end":{"line":564,"column":3,"offset":25849}}},{"type":"text","value":"`","position":{"start":{"line":564,"column":3,"offset":25849},"end":{"line":564,"column":5,"offset":25851}}},{"type":"text","value":"`","position":{"start":{"line":564,"column":5,"offset":25851},"end":{"line":564,"column":7,"offset":25853}}}],"position":{"start":{"line":564,"column":1,"offset":25847},"end":{"line":564,"column":7,"offset":25853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"we can use strict mode with ","position":{"start":{"line":566,"column":5,"offset":25859},"end":{"line":566,"column":33,"offset":25887}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"use strict\";"}],"position":{"start":{"line":566,"column":33,"offset":25887},"end":{"line":566,"column":48,"offset":25902}}},{"type":"text","value":" this will prevent you from accessing the global object with ","position":{"start":{"line":566,"column":48,"offset":25902},"end":{"line":566,"column":109,"offset":25963}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":566,"column":109,"offset":25963},"end":{"line":566,"column":115,"offset":25969}}},{"type":"text","value":" in functions, so if you try to call ","position":{"start":{"line":566,"column":115,"offset":25969},"end":{"line":566,"column":152,"offset":26006}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":566,"column":152,"offset":26006},"end":{"line":566,"column":158,"offset":26012}}},{"type":"text","value":" in the global context and change a value, you will get a type error, and the things you try to access will be undefined","position":{"start":{"line":566,"column":158,"offset":26012},"end":{"line":566,"column":278,"offset":26132}}}],"position":{"start":{"line":566,"column":1,"offset":25855},"end":{"line":566,"column":278,"offset":26132}}},{"type":"text","value":"\n"}],"position":{"start":{"line":566,"column":1,"offset":25855},"end":{"line":566,"column":278,"offset":26132}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"POJOs","position":{"start":{"line":568,"column":5,"offset":26138},"end":{"line":568,"column":10,"offset":26143}}}],"position":{"start":{"line":568,"column":1,"offset":26134},"end":{"line":568,"column":10,"offset":26143}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"1. Label variables as either Primitive vs. Reference","position":{"start":{"line":570,"column":6,"offset":26150},"end":{"line":570,"column":58,"offset":26202}}}],"position":{"start":{"line":570,"column":1,"offset":26145},"end":{"line":570,"column":58,"offset":26202}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Javascript considers most data types to be 'primitive', these data types are immutable, and are passed by value. The more complex data types: Array and Object are mutable, are considered 'reference' data types, and are passed by reference.","position":{"start":{"line":572,"column":1,"offset":26204},"end":{"line":572,"column":240,"offset":26443}}}],"position":{"start":{"line":572,"column":1,"offset":26204},"end":{"line":572,"column":240,"offset":26443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Boolean - Primitive","position":{"start":{"line":574,"column":5,"offset":26449},"end":{"line":574,"column":24,"offset":26468}}}],"position":{"start":{"line":574,"column":1,"offset":26445},"end":{"line":574,"column":24,"offset":26468}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Null - Primitive","position":{"start":{"line":575,"column":5,"offset":26473},"end":{"line":575,"column":21,"offset":26489}}}],"position":{"start":{"line":575,"column":1,"offset":26469},"end":{"line":575,"column":21,"offset":26489}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Undefined - Primitive","position":{"start":{"line":576,"column":5,"offset":26494},"end":{"line":576,"column":26,"offset":26515}}}],"position":{"start":{"line":576,"column":1,"offset":26490},"end":{"line":576,"column":26,"offset":26515}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Number - Primitive","position":{"start":{"line":577,"column":5,"offset":26520},"end":{"line":577,"column":23,"offset":26538}}}],"position":{"start":{"line":577,"column":1,"offset":26516},"end":{"line":577,"column":23,"offset":26538}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"String - Primitive","position":{"start":{"line":578,"column":5,"offset":26543},"end":{"line":578,"column":23,"offset":26561}}}],"position":{"start":{"line":578,"column":1,"offset":26539},"end":{"line":578,"column":23,"offset":26561}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Array - Reference","position":{"start":{"line":579,"column":5,"offset":26566},"end":{"line":579,"column":22,"offset":26583}}}],"position":{"start":{"line":579,"column":1,"offset":26562},"end":{"line":579,"column":22,"offset":26583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Object - Reference","position":{"start":{"line":580,"column":5,"offset":26588},"end":{"line":580,"column":23,"offset":26606}}}],"position":{"start":{"line":580,"column":1,"offset":26584},"end":{"line":580,"column":23,"offset":26606}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Function - Reference","position":{"start":{"line":581,"column":5,"offset":26611},"end":{"line":581,"column":25,"offset":26631}}}],"position":{"start":{"line":581,"column":1,"offset":26607},"end":{"line":581,"column":25,"offset":26631}}},{"type":"text","value":"\n"}],"position":{"start":{"line":574,"column":1,"offset":26445},"end":{"line":581,"column":25,"offset":26631}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"2. Identify when to use . vs ","position":{"start":{"line":583,"column":6,"offset":26638},"end":{"line":583,"column":35,"offset":26667}}},{"type":"text","value":"[","position":{"start":{"line":583,"column":35,"offset":26667},"end":{"line":583,"column":37,"offset":26669}}},{"type":"text","value":"]","position":{"start":{"line":583,"column":37,"offset":26669},"end":{"line":583,"column":39,"offset":26671}}},{"type":"text","value":" when accessing values of an object","position":{"start":{"line":583,"column":39,"offset":26671},"end":{"line":583,"column":74,"offset":26706}}}],"position":{"start":{"line":583,"column":1,"offset":26633},"end":{"line":583,"column":74,"offset":26706}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let obj = { one: 1, two: 2 };\n\n// Choose the square brackets property accessor when the property name is determined at\n// runtime, or if the property name is not a valid identifier\nlet myKey = 'one';\nconsole.log(obj[myKey]);\n\n// Choose the dot property accessor when the property name is known ahead of time.\nconsole.log(obj.two);\n"}],"position":{"start":{"line":585,"column":1,"offset":26708},"end":{"line":595,"column":4,"offset":27056}}}],"position":{"start":{"line":585,"column":1,"offset":26708},"end":{"line":595,"column":4,"offset":27056}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"3. Write an object literal with a variable key using interpolation","position":{"start":{"line":597,"column":6,"offset":27063},"end":{"line":597,"column":72,"offset":27129}}}],"position":{"start":{"line":597,"column":1,"offset":27058},"end":{"line":597,"column":72,"offset":27129}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let keyName = 'two';\n\n// If the key is not known, you can use an alternative `[]` syntax for\n// object initialization only\nlet obj2 = { [keyName]: 2 };\nconsole.log(obj2);\n"}],"position":{"start":{"line":599,"column":1,"offset":27131},"end":{"line":606,"column":4,"offset":27319}}}],"position":{"start":{"line":599,"column":1,"offset":27131},"end":{"line":606,"column":4,"offset":27319}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"4. Use the obj","position":{"start":{"line":608,"column":6,"offset":27326},"end":{"line":608,"column":20,"offset":27340}}},{"type":"text","value":"[","position":{"start":{"line":608,"column":20,"offset":27340},"end":{"line":608,"column":22,"offset":27342}}},{"type":"text","value":"key","position":{"start":{"line":608,"column":22,"offset":27342},"end":{"line":608,"column":25,"offset":27345}}},{"type":"text","value":"]","position":{"start":{"line":608,"column":25,"offset":27345},"end":{"line":608,"column":27,"offset":27347}}},{"type":"text","value":" !== undefined pattern to check if a given variable that contains a key exists in an object","position":{"start":{"line":608,"column":27,"offset":27347},"end":{"line":608,"column":118,"offset":27438}}}],"position":{"start":{"line":608,"column":1,"offset":27321},"end":{"line":608,"column":118,"offset":27438}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function doesKeyExist(obj, key) {\n    // obj[key] !== undefined\n    // or:\n    return key in obj;\n}\n\nlet course = { bootcamp: 'Lambda', course: 'Bootcamp Prep' };\nconsole.log(doesKeyExist(course, 'course')); // => true\nconsole.log(doesKeyExist(course, 'name')); // => false\n"}],"position":{"start":{"line":610,"column":1,"offset":27440},"end":{"line":620,"column":4,"offset":27731}}}],"position":{"start":{"line":610,"column":1,"offset":27440},"end":{"line":620,"column":4,"offset":27731}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"5. Utilize Object.keys and Object.values in a function","position":{"start":{"line":622,"column":6,"offset":27738},"end":{"line":622,"column":60,"offset":27792}}}],"position":{"start":{"line":622,"column":1,"offset":27733},"end":{"line":622,"column":60,"offset":27792}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function printKeys(object) {\n    return Object.keys(object);\n}\n\nfunction printValues(object) {\n    return Object.values(object);\n}\n\nconsole.log(printKeys({ dog: 'Strelka', dog2: 'Belka' }));\nconsole.log(printValues({ dog: 'Strelka', dog2: 'Belka' }));\n"}],"position":{"start":{"line":624,"column":1,"offset":27794},"end":{"line":635,"column":4,"offset":28063}}}],"position":{"start":{"line":624,"column":1,"offset":27794},"end":{"line":635,"column":4,"offset":28063}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"6. Iterate through an object using a for in loop","position":{"start":{"line":637,"column":6,"offset":28070},"end":{"line":637,"column":54,"offset":28118}}}],"position":{"start":{"line":637,"column":1,"offset":28065},"end":{"line":637,"column":54,"offset":28118}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let player = { name: 'Sergey', skill: 'hockey' };\n\nfor (let key in player) {\n    console.log(key, player[key]);\n}\n\nconsole.log(Object.entries(player));\n"}],"position":{"start":{"line":639,"column":1,"offset":28120},"end":{"line":647,"column":4,"offset":28289}}}],"position":{"start":{"line":639,"column":1,"offset":28120},"end":{"line":647,"column":4,"offset":28289}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"7. Define a function that utilizes ...rest syntax to accept an arbitrary number of arguments","position":{"start":{"line":649,"column":6,"offset":28296},"end":{"line":649,"column":98,"offset":28388}}}],"position":{"start":{"line":649,"column":1,"offset":28291},"end":{"line":649,"column":98,"offset":28388}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function restSum(...otherNums) {\n    let sum = 0;\n    console.log(otherNums);\n    otherNums.forEach(function (num) {\n        sum += num;\n    });\n\n    return sum;\n}\n\nconsole.log(restSum(3, 5, 6)); // => 14\nconsole.log(restSum(1, 2, 3, 4, 5, 6, 7, 8, 9)); // => 45\nconsole.log(restSum(0)); // => 0\n"}],"position":{"start":{"line":651,"column":1,"offset":28390},"end":{"line":665,"column":4,"offset":28703}}}],"position":{"start":{"line":651,"column":1,"offset":28390},"end":{"line":665,"column":4,"offset":28703}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"8. Use ...spread syntax for Object literals and Array literals","position":{"start":{"line":667,"column":6,"offset":28710},"end":{"line":667,"column":68,"offset":28772}}}],"position":{"start":{"line":667,"column":1,"offset":28705},"end":{"line":667,"column":68,"offset":28772}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let numArray = [1, 2, 3];\nlet moreNums = [...numArray, 4, 5, 6];\n\nconsole.log(moreNums);\n\nlet shoe = { color: 'red', size: 10 };\nlet newShoe = { ...shoe, brand: 'Nike', size: 12 };\nconsole.log(newShoe);\nnewShoe.color = 'black';\nconsole.log(newShoe);\n\nconsole.log(shoe);\n"}],"position":{"start":{"line":669,"column":1,"offset":28774},"end":{"line":682,"column":4,"offset":29061}}}],"position":{"start":{"line":669,"column":1,"offset":28774},"end":{"line":682,"column":4,"offset":29061}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"9. Destructure an array to reference specific elements","position":{"start":{"line":684,"column":6,"offset":29068},"end":{"line":684,"column":60,"offset":29122}}}],"position":{"start":{"line":684,"column":1,"offset":29063},"end":{"line":684,"column":60,"offset":29122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let arr = ['one', 'two', 'three'];\n\nlet [first] = arr;\nconsole.log(first);\n"}],"position":{"start":{"line":686,"column":1,"offset":29124},"end":{"line":691,"column":4,"offset":29216}}}],"position":{"start":{"line":686,"column":1,"offset":29124},"end":{"line":691,"column":4,"offset":29216}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"10. Destructure an object to reference specific values","position":{"start":{"line":693,"column":6,"offset":29223},"end":{"line":693,"column":60,"offset":29277}}}],"position":{"start":{"line":693,"column":1,"offset":29218},"end":{"line":693,"column":60,"offset":29277}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let me = {\n    name: 'Ian',\n    instruments: ['bass', 'synth', 'guitar'],\n    siblings: {\n        brothers: ['Alistair'],\n        sisters: ['Meghan']\n    }\n};\n\nlet {\n    name,\n    instruments: musical_instruments,\n    siblings: { sisters }\n} = me;\n\nconsole.log(name);\nconsole.log(musical_instruments);\nconsole.log(sisters);\n"}],"position":{"start":{"line":695,"column":1,"offset":29279},"end":{"line":714,"column":4,"offset":29620}}}],"position":{"start":{"line":695,"column":1,"offset":29279},"end":{"line":714,"column":4,"offset":29620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"11. Write a function that accepts a string as an argument and returns an object representing the count of each character in the array","position":{"start":{"line":716,"column":6,"offset":29627},"end":{"line":716,"column":139,"offset":29760}}}],"position":{"start":{"line":716,"column":1,"offset":29622},"end":{"line":716,"column":139,"offset":29760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function charCount(inputString) {\n    let res = inputString.split('').reduce(function (accum, el) {\n        if (el in accum) {\n            accum[el] = accum[el] + 1;\n        } else {\n            accum[el] = 1;\n        }\n        return accum;\n    }, {});\n    return res;\n}\n\nconsole.log(charCount('aaabbbeebbcdkjfalksdfjlkasdfasdfiiidkkdingds'));\n"}],"position":{"start":{"line":718,"column":1,"offset":29762},"end":{"line":732,"column":4,"offset":30124}}}],"position":{"start":{"line":718,"column":1,"offset":29762},"end":{"line":732,"column":4,"offset":30124}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[],"position":{"start":{"line":734,"column":1,"offset":30126},"end":{"line":734,"column":4,"offset":30129}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Review of Concepts","position":{"start":{"line":736,"column":5,"offset":30135},"end":{"line":736,"column":23,"offset":30153}}}],"position":{"start":{"line":736,"column":1,"offset":30131},"end":{"line":736,"column":23,"offset":30153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"1. Identify the difference between const, let, and var declarations","position":{"start":{"line":738,"column":6,"offset":30160},"end":{"line":738,"column":73,"offset":30227}}}],"position":{"start":{"line":738,"column":1,"offset":30155},"end":{"line":738,"column":73,"offset":30227}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"2. Explain the difference between const, let, and var declarations","position":{"start":{"line":740,"column":6,"offset":30234},"end":{"line":740,"column":72,"offset":30300}}}],"position":{"start":{"line":740,"column":1,"offset":30229},"end":{"line":740,"column":72,"offset":30300}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"var a = 'a';\n"}],"position":{"start":{"line":742,"column":1,"offset":30302},"end":{"line":744,"column":4,"offset":30332}}}],"position":{"start":{"line":742,"column":1,"offset":30302},"end":{"line":744,"column":4,"offset":30332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":746,"column":5,"offset":30338},"end":{"line":746,"column":10,"offset":30343}}},{"type":"text","value":" is the historical keyword used for variable declaration.","position":{"start":{"line":746,"column":10,"offset":30343},"end":{"line":746,"column":67,"offset":30400}}}],"position":{"start":{"line":746,"column":1,"offset":30334},"end":{"line":746,"column":67,"offset":30400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":747,"column":5,"offset":30405},"end":{"line":747,"column":10,"offset":30410}}},{"type":"text","value":" declares variables in function scope, or global scope if not inside a function.","position":{"start":{"line":747,"column":10,"offset":30410},"end":{"line":747,"column":90,"offset":30490}}}],"position":{"start":{"line":747,"column":1,"offset":30401},"end":{"line":747,"column":90,"offset":30490}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"We consider ","position":{"start":{"line":748,"column":5,"offset":30495},"end":{"line":748,"column":17,"offset":30507}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"var"}],"position":{"start":{"line":748,"column":17,"offset":30507},"end":{"line":748,"column":22,"offset":30512}}},{"type":"text","value":" to be ","position":{"start":{"line":748,"column":22,"offset":30512},"end":{"line":748,"column":29,"offset":30519}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"deprecated","position":{"start":{"line":748,"column":30,"offset":30520},"end":{"line":748,"column":40,"offset":30530}}}],"position":{"start":{"line":748,"column":29,"offset":30519},"end":{"line":748,"column":41,"offset":30531}}},{"type":"text","value":" and it is never used in this course.","position":{"start":{"line":748,"column":41,"offset":30531},"end":{"line":748,"column":78,"offset":30568}}}],"position":{"start":{"line":748,"column":1,"offset":30491},"end":{"line":748,"column":78,"offset":30568}}},{"type":"text","value":"\n"}],"position":{"start":{"line":746,"column":1,"offset":30334},"end":{"line":748,"column":78,"offset":30568}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"let b = 'b';\n"}],"position":{"start":{"line":750,"column":1,"offset":30570},"end":{"line":752,"column":4,"offset":30600}}}],"position":{"start":{"line":750,"column":1,"offset":30570},"end":{"line":752,"column":4,"offset":30600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":754,"column":5,"offset":30606},"end":{"line":754,"column":10,"offset":30611}}},{"type":"text","value":" is the keyword we use most often for variable declaration.","position":{"start":{"line":754,"column":10,"offset":30611},"end":{"line":754,"column":69,"offset":30670}}}],"position":{"start":{"line":754,"column":1,"offset":30602},"end":{"line":754,"column":69,"offset":30670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":755,"column":5,"offset":30675},"end":{"line":755,"column":10,"offset":30680}}},{"type":"text","value":" declares variables in block scope.","position":{"start":{"line":755,"column":10,"offset":30680},"end":{"line":755,"column":45,"offset":30715}}}],"position":{"start":{"line":755,"column":1,"offset":30671},"end":{"line":755,"column":45,"offset":30715}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"variables declared with ","position":{"start":{"line":756,"column":5,"offset":30720},"end":{"line":756,"column":29,"offset":30744}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":756,"column":29,"offset":30744},"end":{"line":756,"column":34,"offset":30749}}},{"type":"text","value":" are re-assignable.","position":{"start":{"line":756,"column":34,"offset":30749},"end":{"line":756,"column":53,"offset":30768}}}],"position":{"start":{"line":756,"column":1,"offset":30716},"end":{"line":756,"column":53,"offset":30768}}},{"type":"text","value":"\n"}],"position":{"start":{"line":754,"column":1,"offset":30602},"end":{"line":756,"column":53,"offset":30768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const c = 'c';\n"}],"position":{"start":{"line":758,"column":1,"offset":30770},"end":{"line":760,"column":4,"offset":30802}}}],"position":{"start":{"line":758,"column":1,"offset":30770},"end":{"line":760,"column":4,"offset":30802}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":762,"column":5,"offset":30808},"end":{"line":762,"column":12,"offset":30815}}},{"type":"text","value":" is a specialized form of ","position":{"start":{"line":762,"column":12,"offset":30815},"end":{"line":762,"column":38,"offset":30841}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":762,"column":38,"offset":30841},"end":{"line":762,"column":43,"offset":30846}}},{"type":"text","value":" that can only be used to ","position":{"start":{"line":762,"column":43,"offset":30846},"end":{"line":762,"column":69,"offset":30872}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"initialize","position":{"start":{"line":762,"column":71,"offset":30874},"end":{"line":762,"column":81,"offset":30884}}}],"position":{"start":{"line":762,"column":69,"offset":30872},"end":{"line":762,"column":83,"offset":30886}}},{"type":"text","value":" a variable.","position":{"start":{"line":762,"column":83,"offset":30886},"end":{"line":762,"column":95,"offset":30898}}}],"position":{"start":{"line":762,"column":1,"offset":30804},"end":{"line":762,"column":95,"offset":30898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Except when it is declared, you cannot assign to a ","position":{"start":{"line":763,"column":5,"offset":30903},"end":{"line":763,"column":56,"offset":30954}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":763,"column":56,"offset":30954},"end":{"line":763,"column":63,"offset":30961}}},{"type":"text","value":" variable.","position":{"start":{"line":763,"column":63,"offset":30961},"end":{"line":763,"column":73,"offset":30971}}}],"position":{"start":{"line":763,"column":1,"offset":30899},"end":{"line":763,"column":73,"offset":30971}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"const"}],"position":{"start":{"line":764,"column":5,"offset":30976},"end":{"line":764,"column":12,"offset":30983}}},{"type":"text","value":" scopes variables the same way that ","position":{"start":{"line":764,"column":12,"offset":30983},"end":{"line":764,"column":48,"offset":31019}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"let"}],"position":{"start":{"line":764,"column":48,"offset":31019},"end":{"line":764,"column":53,"offset":31024}}},{"type":"text","value":" does.","position":{"start":{"line":764,"column":53,"offset":31024},"end":{"line":764,"column":59,"offset":31030}}}],"position":{"start":{"line":764,"column":1,"offset":30972},"end":{"line":764,"column":59,"offset":31030}}},{"type":"text","value":"\n"}],"position":{"start":{"line":762,"column":1,"offset":30804},"end":{"line":764,"column":59,"offset":31030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"3. Predict the evaluation of code that utilizes function scope, block scope, lexical scope, and scope chaining","position":{"start":{"line":766,"column":6,"offset":31037},"end":{"line":766,"column":116,"offset":31147}}}],"position":{"start":{"line":766,"column":1,"offset":31032},"end":{"line":766,"column":116,"offset":31147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":768,"column":1,"offset":31149},"end":{"line":768,"column":15,"offset":31163}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"run"}],"position":{"start":{"line":768,"column":15,"offset":31163},"end":{"line":768,"column":20,"offset":31168}}},{"type":"text","value":" function, inside which ","position":{"start":{"line":768,"column":20,"offset":31168},"end":{"line":768,"column":44,"offset":31192}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"foo"}],"position":{"start":{"line":768,"column":44,"offset":31192},"end":{"line":768,"column":49,"offset":31197}}},{"type":"text","value":" and ","position":{"start":{"line":768,"column":49,"offset":31197},"end":{"line":768,"column":54,"offset":31202}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"bar"}],"position":{"start":{"line":768,"column":54,"offset":31202},"end":{"line":768,"column":59,"offset":31207}}},{"type":"text","value":" have ","position":{"start":{"line":768,"column":59,"offset":31207},"end":{"line":768,"column":65,"offset":31213}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function scope"}],"position":{"start":{"line":768,"column":65,"offset":31213},"end":{"line":768,"column":81,"offset":31229}}},{"type":"text","value":". ","position":{"start":{"line":768,"column":81,"offset":31229},"end":{"line":768,"column":83,"offset":31231}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i"}],"position":{"start":{"line":768,"column":83,"offset":31231},"end":{"line":768,"column":86,"offset":31234}}},{"type":"text","value":" and ","position":{"start":{"line":768,"column":86,"offset":31234},"end":{"line":768,"column":91,"offset":31239}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"baz"}],"position":{"start":{"line":768,"column":91,"offset":31239},"end":{"line":768,"column":96,"offset":31244}}},{"type":"text","value":" are scoped to the block expression.","position":{"start":{"line":768,"column":96,"offset":31244},"end":{"line":768,"column":132,"offset":31280}}}],"position":{"start":{"line":768,"column":1,"offset":31149},"end":{"line":768,"column":132,"offset":31280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// function and block scope in this example\nfunction run() {\n    var foo = 'Foo';\n    let bar = 'Bar';\n\n    console.log(foo, bar);\n\n    {\n        console.log(foo);\n        let baz = 'Bazz';\n        console.log(baz);\n    }\n\n    console.log(baz); // ReferenceError\n}\n\nrun();\n"}],"position":{"start":{"line":770,"column":1,"offset":31282},"end":{"line":788,"column":4,"offset":31572}}}],"position":{"start":{"line":770,"column":1,"offset":31282},"end":{"line":788,"column":4,"offset":31572}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Notice that referencing ","position":{"start":{"line":790,"column":1,"offset":31574},"end":{"line":790,"column":25,"offset":31598}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"baz"}],"position":{"start":{"line":790,"column":25,"offset":31598},"end":{"line":790,"column":30,"offset":31603}}},{"type":"text","value":" from outside it's block results in JavaScript throwing a ReferenceError.","position":{"start":{"line":790,"column":30,"offset":31603},"end":{"line":790,"column":103,"offset":31676}}}],"position":{"start":{"line":790,"column":1,"offset":31574},"end":{"line":790,"column":103,"offset":31676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":792,"column":1,"offset":31678},"end":{"line":792,"column":15,"offset":31692}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"run"}],"position":{"start":{"line":792,"column":15,"offset":31692},"end":{"line":792,"column":20,"offset":31697}}},{"type":"text","value":" function, inside of which ","position":{"start":{"line":792,"column":20,"offset":31697},"end":{"line":792,"column":47,"offset":31724}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"foo"}],"position":{"start":{"line":792,"column":47,"offset":31724},"end":{"line":792,"column":52,"offset":31729}}},{"type":"text","value":" has ","position":{"start":{"line":792,"column":52,"offset":31729},"end":{"line":792,"column":57,"offset":31734}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"function scope"}],"position":{"start":{"line":792,"column":57,"offset":31734},"end":{"line":792,"column":73,"offset":31750}}},{"type":"text","value":".","position":{"start":{"line":792,"column":73,"offset":31750},"end":{"line":792,"column":74,"offset":31751}}}],"position":{"start":{"line":792,"column":1,"offset":31678},"end":{"line":792,"column":74,"offset":31751}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function run() {\n    console.log(foo); // undefined\n    var foo = 'Foo';\n    console.log(foo); // Foo\n}\n\nrun();\n"}],"position":{"start":{"line":794,"column":1,"offset":31753},"end":{"line":802,"column":4,"offset":31882}}}],"position":{"start":{"line":794,"column":1,"offset":31753},"end":{"line":802,"column":4,"offset":31882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Consider this ","position":{"start":{"line":804,"column":1,"offset":31884},"end":{"line":804,"column":15,"offset":31898}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"func1"}],"position":{"start":{"line":804,"column":15,"offset":31898},"end":{"line":804,"column":22,"offset":31905}}},{"type":"text","value":" function and it's nested scopes.","position":{"start":{"line":804,"column":22,"offset":31905},"end":{"line":804,"column":55,"offset":31938}}}],"position":{"start":{"line":804,"column":1,"offset":31884},"end":{"line":804,"column":55,"offset":31938}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"// global scope\nfunction func1(arg1) {\n    // func1 scope\n\n    return function func2(arg2) {\n        // func2 scope\n\n        return function func3(arg3) {\n            // func3 scope\n\n            console.log(arg1, arg2, arg3);\n        };\n    };\n}\n"}],"position":{"start":{"line":806,"column":1,"offset":31940},"end":{"line":821,"column":4,"offset":32203}}}],"position":{"start":{"line":806,"column":1,"offset":31940},"end":{"line":821,"column":4,"offset":32203}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"6. Implement a closure and explain how the closure effects scope","position":{"start":{"line":823,"column":6,"offset":32210},"end":{"line":823,"column":70,"offset":32274}}}],"position":{"start":{"line":823,"column":1,"offset":32205},"end":{"line":823,"column":70,"offset":32274}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const adder = (arg1) => {\n    return (arg2) => {\n        return arg1 + arg2;\n    };\n};\n\nconst func2 = adder(2);\nconst result = func2(2);\nconsole.log(result); // => 4;\n"}],"position":{"start":{"line":825,"column":1,"offset":32276},"end":{"line":835,"column":4,"offset":32460}}}],"position":{"start":{"line":825,"column":1,"offset":32276},"end":{"line":835,"column":4,"offset":32460}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"4. Define an arrow function","position":{"start":{"line":837,"column":6,"offset":32467},"end":{"line":837,"column":33,"offset":32494}}}],"position":{"start":{"line":837,"column":1,"offset":32462},"end":{"line":837,"column":33,"offset":32494}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const returnValue = (val) => val;\n"}],"position":{"start":{"line":839,"column":1,"offset":32496},"end":{"line":841,"column":4,"offset":32547}}}],"position":{"start":{"line":839,"column":1,"offset":32496},"end":{"line":841,"column":4,"offset":32547}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This simple construct will create a function that accepts ","position":{"start":{"line":843,"column":1,"offset":32549},"end":{"line":843,"column":59,"offset":32607}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"val"}],"position":{"start":{"line":843,"column":59,"offset":32607},"end":{"line":843,"column":64,"offset":32612}}},{"type":"text","value":" as a parameter, and returns ","position":{"start":{"line":843,"column":64,"offset":32612},"end":{"line":843,"column":93,"offset":32641}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"val"}],"position":{"start":{"line":843,"column":93,"offset":32641},"end":{"line":843,"column":98,"offset":32646}}},{"type":"text","value":" immediately. We do not need to type ","position":{"start":{"line":843,"column":98,"offset":32646},"end":{"line":843,"column":135,"offset":32683}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"return val"}],"position":{"start":{"line":843,"column":135,"offset":32683},"end":{"line":843,"column":147,"offset":32695}}},{"type":"text","value":", because this is a single-line function.","position":{"start":{"line":843,"column":147,"offset":32695},"end":{"line":843,"column":188,"offset":32736}}}],"position":{"start":{"line":843,"column":1,"offset":32549},"end":{"line":843,"column":188,"offset":32736}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Identically, we could write","position":{"start":{"line":845,"column":1,"offset":32738},"end":{"line":845,"column":28,"offset":32765}}}],"position":{"start":{"line":845,"column":1,"offset":32738},"end":{"line":845,"column":28,"offset":32765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const returnValue = (val) => {\n    return val;\n};\n"}],"position":{"start":{"line":847,"column":1,"offset":32767},"end":{"line":851,"column":4,"offset":32834}}}],"position":{"start":{"line":847,"column":1,"offset":32767},"end":{"line":851,"column":4,"offset":32834}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"5. Given an arrow function, deduce the value of ","position":{"start":{"line":853,"column":6,"offset":32841},"end":{"line":853,"column":54,"offset":32889}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":853,"column":54,"offset":32889},"end":{"line":853,"column":60,"offset":32895}}},{"type":"text","value":" without executing the code","position":{"start":{"line":853,"column":60,"offset":32895},"end":{"line":853,"column":87,"offset":32922}}}],"position":{"start":{"line":853,"column":1,"offset":32836},"end":{"line":853,"column":87,"offset":32922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function fDAdder(arr) {\n    console.log(this);\n\n    return arr.reduce((acc, ele) => {\n        return acc + ele;\n    });\n}\n\nfDAdder([1, 2, 4, 6]);\n"}],"position":{"start":{"line":855,"column":1,"offset":32924},"end":{"line":865,"column":4,"offset":33087}}}],"position":{"start":{"line":855,"column":1,"offset":32924},"end":{"line":865,"column":4,"offset":33087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If we use a ","position":{"start":{"line":867,"column":1,"offset":33089},"end":{"line":867,"column":13,"offset":33101}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"function declaration","position":{"start":{"line":867,"column":14,"offset":33102},"end":{"line":867,"column":34,"offset":33122}}}],"position":{"start":{"line":867,"column":13,"offset":33101},"end":{"line":867,"column":35,"offset":33123}}},{"type":"text","value":" style function, the ","position":{"start":{"line":867,"column":35,"offset":33123},"end":{"line":867,"column":56,"offset":33144}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":867,"column":56,"offset":33144},"end":{"line":867,"column":62,"offset":33150}}},{"type":"text","value":" variable is set to the ","position":{"start":{"line":867,"column":62,"offset":33150},"end":{"line":867,"column":86,"offset":33174}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"global"}],"position":{"start":{"line":867,"column":86,"offset":33174},"end":{"line":867,"column":94,"offset":33182}}},{"type":"text","value":" object ","position":{"start":{"line":867,"column":94,"offset":33182},"end":{"line":867,"column":102,"offset":33190}}},{"type":"text","value":"(","position":{"start":{"line":867,"column":102,"offset":33190},"end":{"line":867,"column":104,"offset":33192}}},{"type":"text","value":"i.e. ","position":{"start":{"line":867,"column":104,"offset":33192},"end":{"line":867,"column":109,"offset":33197}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Object [global]"}],"position":{"start":{"line":867,"column":109,"offset":33197},"end":{"line":867,"column":126,"offset":33214}}},{"type":"text","value":" in Node.JS and ","position":{"start":{"line":867,"column":126,"offset":33214},"end":{"line":867,"column":142,"offset":33230}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Window"}],"position":{"start":{"line":867,"column":142,"offset":33230},"end":{"line":867,"column":150,"offset":33238}}},{"type":"text","value":" in your browser","position":{"start":{"line":867,"column":150,"offset":33238},"end":{"line":867,"column":166,"offset":33254}}},{"type":"text","value":")","position":{"start":{"line":867,"column":166,"offset":33254},"end":{"line":867,"column":168,"offset":33256}}},{"type":"text","value":".","position":{"start":{"line":867,"column":168,"offset":33256},"end":{"line":867,"column":169,"offset":33257}}}],"position":{"start":{"line":867,"column":1,"offset":33089},"end":{"line":867,"column":169,"offset":33257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const adder = (arr) => {\n    console.log(this);\n    arr.reduce((acc, ele) => (sum += ele));\n};\nadder([1, 2, 4, 6]);\n"}],"position":{"start":{"line":869,"column":1,"offset":33259},"end":{"line":875,"column":4,"offset":33392}}}],"position":{"start":{"line":869,"column":1,"offset":33259},"end":{"line":875,"column":4,"offset":33392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In this example, we use a ","position":{"start":{"line":877,"column":1,"offset":33394},"end":{"line":877,"column":27,"offset":33420}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"fat arrow","position":{"start":{"line":877,"column":28,"offset":33421},"end":{"line":877,"column":37,"offset":33430}}}],"position":{"start":{"line":877,"column":27,"offset":33420},"end":{"line":877,"column":38,"offset":33431}}},{"type":"text","value":" style function. Note that when we declare a funciton like this ","position":{"start":{"line":877,"column":38,"offset":33431},"end":{"line":877,"column":102,"offset":33495}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":877,"column":102,"offset":33495},"end":{"line":877,"column":108,"offset":33501}}},{"type":"text","value":" becomes","position":{"start":{"line":877,"column":108,"offset":33501},"end":{"line":877,"column":116,"offset":33509}}}],"position":{"start":{"line":877,"column":1,"offset":33394},"end":{"line":877,"column":116,"offset":33509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"7. Define a method that references this on an object literal","position":{"start":{"line":879,"column":6,"offset":33516},"end":{"line":879,"column":66,"offset":33576}}}],"position":{"start":{"line":879,"column":1,"offset":33511},"end":{"line":879,"column":66,"offset":33576}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconsole.log(pokemon.getPokeName());\n"}],"position":{"start":{"line":881,"column":1,"offset":33578},"end":{"line":892,"column":4,"offset":33822}}}],"position":{"start":{"line":881,"column":1,"offset":33578},"end":{"line":892,"column":4,"offset":33822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"8. Utilize the built in Function","position":{"start":{"line":894,"column":6,"offset":33829},"end":{"line":894,"column":38,"offset":33861}}},{"type":"text","value":"#","position":{"start":{"line":894,"column":38,"offset":33861},"end":{"line":894,"column":40,"offset":33863}}},{"type":"text","value":"bind on a callback to maintain the context of ","position":{"start":{"line":894,"column":40,"offset":33863},"end":{"line":894,"column":86,"offset":33909}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":894,"column":86,"offset":33909},"end":{"line":894,"column":92,"offset":33915}}}],"position":{"start":{"line":894,"column":1,"offset":33824},"end":{"line":894,"column":92,"offset":33915}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"const pokemon = {\n    firstname: 'Pika',\n    lastname: 'Chu',\n    getPokeName: function () {\n        const fullname = `${this.firstname} ${this.lastname}`;\n        return fullname;\n    }\n};\n\nconst logPokemon = pokemon.getPokename.bind(pokemon);\n\nlogPokemon('sushi', 'algorithms'); // Pika Chu loves sushi and algorithms\n"}],"position":{"start":{"line":896,"column":1,"offset":33917},"end":{"line":909,"column":4,"offset":34254}}}],"position":{"start":{"line":896,"column":1,"offset":33917},"end":{"line":909,"column":4,"offset":34254}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"9. Given a code snippet, identify what ","position":{"start":{"line":911,"column":6,"offset":34261},"end":{"line":911,"column":45,"offset":34300}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"this"}],"position":{"start":{"line":911,"column":45,"offset":34300},"end":{"line":911,"column":51,"offset":34306}}},{"type":"text","value":" refers to","position":{"start":{"line":911,"column":51,"offset":34306},"end":{"line":911,"column":61,"offset":34316}}}],"position":{"start":{"line":911,"column":1,"offset":34256},"end":{"line":911,"column":61,"offset":34316}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"function Person(name) {\n    // this.name = name;\n    // let that = this;\n\n    setTimeout(function () {\n        // console.log(this); // => Window\n        // console.log(that); // => [Function] => Person\n        // this.sayName(); // => no method error\n        that.sayName();\n    }, 1000);\n}\n\nPerson.prototype.sayName = function () {\n    console.log(this.name);\n};\n\nconst jane = new Person('Jane');\n"}],"position":{"start":{"line":913,"column":1,"offset":34318},"end":{"line":931,"column":4,"offset":34734}}}],"position":{"start":{"line":913,"column":1,"offset":34318},"end":{"line":931,"column":4,"offset":34734}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":932,"column":1,"offset":34735}}}}