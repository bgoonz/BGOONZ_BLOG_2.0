{"expireTime":9007200881132593000,"key":"transformer-remark-markdown-html-ast-e6a92c44c06ba94802d5c8af6bb75c69--","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Data Structures & Algorithms","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":32,"offset":32}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":32,"offset":32}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://github.com/bgoonz/Data-Structures-Algos-Codebase"},"children":[{"type":"text","value":"DS Algo Codebase","position":{"start":{"line":4,"column":2,"offset":35},"end":{"line":4,"column":18,"offset":51}}}],"position":{"start":{"line":4,"column":1,"offset":34},"end":{"line":4,"column":77,"offset":110}}}],"position":{"start":{"line":4,"column":1,"offset":34},"end":{"line":4,"column":77,"offset":110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#115-distinct-subsequenceshttpsleetcodecomproblemsdistinct-subsequencesdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":6,"column":2,"offset":113},"end":{"line":6,"column":142,"offset":253}}}],"position":{"start":{"line":6,"column":1,"offset":112},"end":{"line":6,"column":227,"offset":338}}}],"position":{"start":{"line":6,"column":1,"offset":112},"end":{"line":6,"column":227,"offset":338}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":8,"column":4,"offset":343},"end":{"line":8,"column":6,"offset":345}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/distinct-subsequences/description/"},"children":[{"type":"text","value":"115. Distinct Subsequences","position":{"start":{"line":8,"column":7,"offset":346},"end":{"line":8,"column":33,"offset":372}}}],"position":{"start":{"line":8,"column":6,"offset":345},"end":{"line":8,"column":100,"offset":439}}}],"position":{"start":{"line":8,"column":1,"offset":340},"end":{"line":8,"column":100,"offset":439}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":10,"column":5,"offset":445},"end":{"line":10,"column":13,"offset":453}}}],"position":{"start":{"line":10,"column":1,"offset":441},"end":{"line":10,"column":13,"offset":453}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a string ","position":{"start":{"line":12,"column":1,"offset":455},"end":{"line":12,"column":16,"offset":470}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"S","position":{"start":{"line":12,"column":18,"offset":472},"end":{"line":12,"column":19,"offset":473}}}],"position":{"start":{"line":12,"column":16,"offset":470},"end":{"line":12,"column":21,"offset":475}}},{"type":"text","value":" and a string ","position":{"start":{"line":12,"column":21,"offset":475},"end":{"line":12,"column":35,"offset":489}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"T","position":{"start":{"line":12,"column":37,"offset":491},"end":{"line":12,"column":38,"offset":492}}}],"position":{"start":{"line":12,"column":35,"offset":489},"end":{"line":12,"column":40,"offset":494}}},{"type":"text","value":", count the number of distinct subsequences of ","position":{"start":{"line":12,"column":40,"offset":494},"end":{"line":12,"column":87,"offset":541}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"S","position":{"start":{"line":12,"column":89,"offset":543},"end":{"line":12,"column":90,"offset":544}}}],"position":{"start":{"line":12,"column":87,"offset":541},"end":{"line":12,"column":92,"offset":546}}},{"type":"text","value":" which equals ","position":{"start":{"line":12,"column":92,"offset":546},"end":{"line":12,"column":106,"offset":560}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"T","position":{"start":{"line":12,"column":108,"offset":562},"end":{"line":12,"column":109,"offset":563}}}],"position":{"start":{"line":12,"column":106,"offset":560},"end":{"line":12,"column":111,"offset":565}}},{"type":"text","value":".","position":{"start":{"line":12,"column":111,"offset":565},"end":{"line":12,"column":112,"offset":566}}}],"position":{"start":{"line":12,"column":1,"offset":455},"end":{"line":12,"column":112,"offset":566}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, ","position":{"start":{"line":14,"column":1,"offset":568},"end":{"line":14,"column":209,"offset":776}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"ACE\""}],"position":{"start":{"line":14,"column":209,"offset":776},"end":{"line":14,"column":216,"offset":783}}},{"type":"text","value":" is a subsequence of ","position":{"start":{"line":14,"column":216,"offset":783},"end":{"line":14,"column":237,"offset":804}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"ABCDE\""}],"position":{"start":{"line":14,"column":237,"offset":804},"end":{"line":14,"column":246,"offset":813}}},{"type":"text","value":" while ","position":{"start":{"line":14,"column":246,"offset":813},"end":{"line":14,"column":253,"offset":820}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"\"AEC\""}],"position":{"start":{"line":14,"column":253,"offset":820},"end":{"line":14,"column":260,"offset":827}}},{"type":"text","value":" is not).","position":{"start":{"line":14,"column":260,"offset":827},"end":{"line":14,"column":269,"offset":836}}}],"position":{"start":{"line":14,"column":1,"offset":568},"end":{"line":14,"column":269,"offset":836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":16,"column":3,"offset":840},"end":{"line":16,"column":13,"offset":850}}}],"position":{"start":{"line":16,"column":1,"offset":838},"end":{"line":16,"column":15,"offset":852}}}],"position":{"start":{"line":16,"column":1,"offset":838},"end":{"line":16,"column":15,"offset":852}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: S = \"rabbbit\", T = \"rabbit\"\nOutput: 3\nExplanation:\n\nAs shown below, there are 3 ways you can generate \"rabbit\" from S.\n(The caret symbol ^ means the chosen letters)\n\nrabbbit\n^^^^ ^^\nrabbbit\n^^ ^^^^\nrabbbit\n^^^ ^^^\n"}],"position":{"start":{"line":18,"column":1,"offset":854},"end":{"line":32,"column":4,"offset":1082}}}],"position":{"start":{"line":18,"column":1,"offset":854},"end":{"line":32,"column":4,"offset":1082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":34,"column":3,"offset":1086},"end":{"line":34,"column":13,"offset":1096}}}],"position":{"start":{"line":34,"column":1,"offset":1084},"end":{"line":34,"column":15,"offset":1098}}}],"position":{"start":{"line":34,"column":1,"offset":1084},"end":{"line":34,"column":15,"offset":1098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: S = \"babgbag\", T = \"bag\"\nOutput: 5\nExplanation:\n\nAs shown below, there are 5 ways you can generate \"bag\" from S.\n(The caret symbol ^ means the chosen letters)\n\nbabgbag\n^^ ^\nbabgbag\n^^    ^\nbabgbag\n^    ^^\nbabgbag\n  ^  ^^\nbabgbag\n    ^^^\n"}],"position":{"start":{"line":36,"column":1,"offset":1100},"end":{"line":54,"column":4,"offset":1351}}}],"position":{"start":{"line":36,"column":1,"offset":1100},"end":{"line":54,"column":4,"offset":1351}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":56,"column":5,"offset":1357},"end":{"line":56,"column":14,"offset":1366}}}],"position":{"start":{"line":56,"column":1,"offset":1353},"end":{"line":56,"column":14,"offset":1366}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":58,"column":1,"offset":1368},"end":{"line":58,"column":8,"offset":1375}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, j)"}],"position":{"start":{"line":58,"column":8,"offset":1375},"end":{"line":58,"column":17,"offset":1384}}},{"type":"text","value":" to be the number of ways that generate ","position":{"start":{"line":58,"column":17,"offset":1384},"end":{"line":58,"column":57,"offset":1424}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"T[0...j)"}],"position":{"start":{"line":58,"column":57,"offset":1424},"end":{"line":58,"column":67,"offset":1434}}},{"type":"text","value":" from ","position":{"start":{"line":58,"column":67,"offset":1434},"end":{"line":58,"column":73,"offset":1440}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S[0...i)"}],"position":{"start":{"line":58,"column":73,"offset":1440},"end":{"line":58,"column":83,"offset":1450}}},{"type":"text","value":".","position":{"start":{"line":58,"column":83,"offset":1450},"end":{"line":58,"column":84,"offset":1451}}}],"position":{"start":{"line":58,"column":1,"offset":1368},"end":{"line":58,"column":84,"offset":1451}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For ","position":{"start":{"line":60,"column":1,"offset":1453},"end":{"line":60,"column":5,"offset":1457}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, j)"}],"position":{"start":{"line":60,"column":5,"offset":1457},"end":{"line":60,"column":14,"offset":1466}}},{"type":"text","value":" you can always skip ","position":{"start":{"line":60,"column":14,"offset":1466},"end":{"line":60,"column":35,"offset":1487}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S[i-1]"}],"position":{"start":{"line":60,"column":35,"offset":1487},"end":{"line":60,"column":43,"offset":1495}}},{"type":"text","value":", but can only take it when ","position":{"start":{"line":60,"column":43,"offset":1495},"end":{"line":60,"column":71,"offset":1523}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"S[i-1] === T[j-1]"}],"position":{"start":{"line":60,"column":71,"offset":1523},"end":{"line":60,"column":90,"offset":1542}}},{"type":"text","value":".","position":{"start":{"line":60,"column":90,"offset":1542},"end":{"line":60,"column":91,"offset":1543}}}],"position":{"start":{"line":60,"column":1,"offset":1453},"end":{"line":60,"column":91,"offset":1543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"f(0, j) = 0, j > 0 // nothing to delete\nf(i, 0) = 1 // delete all\nf(i, j) = f(i-1, j) + (S[i-1] === T[j-1] ? f(i-1, j-1) : 0)\n"}],"position":{"start":{"line":62,"column":1,"offset":1545},"end":{"line":66,"column":4,"offset":1688}}}],"position":{"start":{"line":62,"column":1,"offset":1545},"end":{"line":66,"column":4,"offset":1688}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":68,"column":1,"offset":1690},"end":{"line":68,"column":27,"offset":1716}}}],"position":{"start":{"line":68,"column":1,"offset":1690},"end":{"line":68,"column":27,"offset":1716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {string} s\n * @param {string} t\n * @return {number}\n */\nlet numDistinct = function (s, t) {\n    const lens = s.length;\n    const lent = t.length;\n    const dp = new Array(lent + 1).fill(0);\n    dp[0] = 1;\n    for (let i = 1; i <= lens; i++) {\n        for (let j = lent; j >= 1; j--) {\n            if (s[i - 1] === t[j - 1]) {\n                dp[j] += dp[j - 1];\n            }\n        }\n    }\n    return dp[lent];\n};\n"}],"position":{"start":{"line":70,"column":1,"offset":1718},"end":{"line":90,"column":4,"offset":2165}}}],"position":{"start":{"line":70,"column":1,"offset":1718},"end":{"line":90,"column":4,"offset":2165}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":92,"column":1,"offset":2167},"end":{"line":92,"column":4,"offset":2170}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":94,"column":1,"offset":2172},"end":{"line":96,"column":9,"offset":2215}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":96,"column":9,"offset":2215},"end":{"line":96,"column":38,"offset":2244}}}],"position":{"start":{"line":96,"column":9,"offset":2215},"end":{"line":96,"column":38,"offset":2244}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":96,"column":38,"offset":2244},"end":{"line":97,"column":23,"offset":2267}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":97,"column":23,"offset":2267},"end":{"line":97,"column":66,"offset":2310}}}],"position":{"start":{"line":97,"column":23,"offset":2267},"end":{"line":97,"column":66,"offset":2310}}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node II\": ","position":{"start":{"line":97,"column":66,"offset":2310},"end":{"line":99,"column":51,"offset":2380}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii","position":{"start":{"line":99,"column":51,"offset":2380},"end":{"line":99,"column":127,"offset":2456}}}],"position":{"start":{"line":99,"column":51,"offset":2380},"end":{"line":99,"column":127,"offset":2456}}},{"type":"text","value":"\n\"Binary Tree Right Side View\": ","position":{"start":{"line":99,"column":127,"offset":2456},"end":{"line":100,"column":32,"offset":2488}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-right-side-view"},"children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-right-side-view","position":{"start":{"line":100,"column":32,"offset":2488},"end":{"line":100,"column":89,"offset":2545}}}],"position":{"start":{"line":100,"column":32,"offset":2488},"end":{"line":100,"column":89,"offset":2545}}}],"position":{"start":{"line":94,"column":1,"offset":2172},"end":{"line":100,"column":89,"offset":2545}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":102,"column":1,"offset":2547},"end":{"line":102,"column":4,"offset":2550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#116-populating-next-right-pointers-in-each-nodehttpsleetcodecomproblemspopulating-next-right-pointers-in-each-nodedescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":104,"column":2,"offset":2553},"end":{"line":104,"column":142,"offset":2693}}}],"position":{"start":{"line":104,"column":1,"offset":2552},"end":{"line":104,"column":271,"offset":2822}}}],"position":{"start":{"line":104,"column":1,"offset":2552},"end":{"line":104,"column":271,"offset":2822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":106,"column":4,"offset":2827},"end":{"line":106,"column":6,"offset":2829}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node/description/"},"children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":106,"column":7,"offset":2830},"end":{"line":106,"column":55,"offset":2878}}}],"position":{"start":{"line":106,"column":6,"offset":2829},"end":{"line":106,"column":144,"offset":2967}}}],"position":{"start":{"line":106,"column":1,"offset":2824},"end":{"line":106,"column":144,"offset":2967}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":108,"column":5,"offset":2973},"end":{"line":108,"column":13,"offset":2981}}}],"position":{"start":{"line":108,"column":1,"offset":2969},"end":{"line":108,"column":13,"offset":2981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":110,"column":1,"offset":2983},"end":{"line":110,"column":20,"offset":3002}}}],"position":{"start":{"line":110,"column":1,"offset":2983},"end":{"line":110,"column":20,"offset":3002}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}\n"}],"position":{"start":{"line":112,"column":1,"offset":3004},"end":{"line":119,"column":4,"offset":3103}}}],"position":{"start":{"line":112,"column":1,"offset":3004},"end":{"line":119,"column":4,"offset":3103}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":121,"column":1,"offset":3105},"end":{"line":121,"column":127,"offset":3231}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":121,"column":127,"offset":3231},"end":{"line":121,"column":133,"offset":3237}}},{"type":"text","value":".","position":{"start":{"line":121,"column":133,"offset":3237},"end":{"line":121,"column":134,"offset":3238}}}],"position":{"start":{"line":121,"column":1,"offset":3105},"end":{"line":121,"column":134,"offset":3238}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":123,"column":1,"offset":3240},"end":{"line":123,"column":41,"offset":3280}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":123,"column":41,"offset":3280},"end":{"line":123,"column":47,"offset":3286}}},{"type":"text","value":".","position":{"start":{"line":123,"column":47,"offset":3286},"end":{"line":123,"column":48,"offset":3287}}}],"position":{"start":{"line":123,"column":1,"offset":3240},"end":{"line":123,"column":48,"offset":3287}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":125,"column":3,"offset":3291},"end":{"line":125,"column":8,"offset":3296}}}],"position":{"start":{"line":125,"column":1,"offset":3289},"end":{"line":125,"column":10,"offset":3298}}}],"position":{"start":{"line":125,"column":1,"offset":3289},"end":{"line":125,"column":10,"offset":3298}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":127,"column":5,"offset":3304},"end":{"line":127,"column":43,"offset":3342}}}],"position":{"start":{"line":127,"column":1,"offset":3300},"end":{"line":127,"column":43,"offset":3342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":128,"column":5,"offset":3347},"end":{"line":128,"column":101,"offset":3443}}}],"position":{"start":{"line":128,"column":1,"offset":3343},"end":{"line":128,"column":101,"offset":3443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).","position":{"start":{"line":129,"column":5,"offset":3448},"end":{"line":129,"column":127,"offset":3570}}}],"position":{"start":{"line":129,"column":1,"offset":3444},"end":{"line":129,"column":127,"offset":3570}}},{"type":"text","value":"\n"}],"position":{"start":{"line":127,"column":1,"offset":3300},"end":{"line":129,"column":127,"offset":3570}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":131,"column":3,"offset":3574},"end":{"line":131,"column":11,"offset":3582}}}],"position":{"start":{"line":131,"column":1,"offset":3572},"end":{"line":131,"column":13,"offset":3584}}}],"position":{"start":{"line":131,"column":1,"offset":3572},"end":{"line":131,"column":13,"offset":3584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the following perfect binary tree,","position":{"start":{"line":133,"column":1,"offset":3586},"end":{"line":133,"column":41,"offset":3626}}}],"position":{"start":{"line":133,"column":1,"offset":3586},"end":{"line":133,"column":41,"offset":3626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1\n   /  \\\n  2    3\n / \\  / \\\n4  5  6  7\n"}],"position":{"start":{"line":135,"column":1,"offset":3628},"end":{"line":142,"column":4,"offset":3681}}}],"position":{"start":{"line":135,"column":1,"offset":3628},"end":{"line":142,"column":4,"offset":3681}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":144,"column":1,"offset":3683},"end":{"line":144,"column":56,"offset":3738}}}],"position":{"start":{"line":144,"column":1,"offset":3683},"end":{"line":144,"column":56,"offset":3738}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\  / \\\n4->5->6->7 -> NULL\n"}],"position":{"start":{"line":146,"column":1,"offset":3740},"end":{"line":153,"column":4,"offset":3817}}}],"position":{"start":{"line":146,"column":1,"offset":3740},"end":{"line":153,"column":4,"offset":3817}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":155,"column":5,"offset":3823},"end":{"line":155,"column":14,"offset":3832}}}],"position":{"start":{"line":155,"column":1,"offset":3819},"end":{"line":155,"column":14,"offset":3832}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":157,"column":6,"offset":3839},"end":{"line":157,"column":9,"offset":3842}}}],"position":{"start":{"line":157,"column":1,"offset":3834},"end":{"line":157,"column":9,"offset":3842}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursive.","position":{"start":{"line":159,"column":1,"offset":3844},"end":{"line":159,"column":11,"offset":3854}}}],"position":{"start":{"line":159,"column":1,"offset":3844},"end":{"line":159,"column":11,"offset":3854}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For every ","position":{"start":{"line":161,"column":1,"offset":3856},"end":{"line":161,"column":11,"offset":3866}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node"}],"position":{"start":{"line":161,"column":11,"offset":3866},"end":{"line":161,"column":17,"offset":3872}}},{"type":"text","value":":","position":{"start":{"line":161,"column":17,"offset":3872},"end":{"line":161,"column":18,"offset":3873}}}],"position":{"start":{"line":161,"column":1,"offset":3856},"end":{"line":161,"column":18,"offset":3873}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Left child: points to ","position":{"start":{"line":163,"column":5,"offset":3879},"end":{"line":163,"column":27,"offset":3901}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.right"}],"position":{"start":{"line":163,"column":27,"offset":3901},"end":{"line":163,"column":39,"offset":3913}}},{"type":"text","value":".","position":{"start":{"line":163,"column":39,"offset":3913},"end":{"line":163,"column":40,"offset":3914}}}],"position":{"start":{"line":163,"column":1,"offset":3875},"end":{"line":163,"column":40,"offset":3914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Right child: points to ","position":{"start":{"line":164,"column":5,"offset":3919},"end":{"line":164,"column":28,"offset":3942}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.next.left"}],"position":{"start":{"line":164,"column":28,"offset":3942},"end":{"line":164,"column":44,"offset":3958}}},{"type":"text","value":" if ","position":{"start":{"line":164,"column":44,"offset":3958},"end":{"line":164,"column":48,"offset":3962}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.next"}],"position":{"start":{"line":164,"column":48,"offset":3962},"end":{"line":164,"column":59,"offset":3973}}},{"type":"text","value":" exists.","position":{"start":{"line":164,"column":59,"offset":3973},"end":{"line":164,"column":67,"offset":3981}}}],"position":{"start":{"line":164,"column":1,"offset":3915},"end":{"line":164,"column":67,"offset":3981}}},{"type":"text","value":"\n"}],"position":{"start":{"line":163,"column":1,"offset":3875},"end":{"line":164,"column":67,"offset":3981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right;\n        connect(root.left);\n    }\n    if (root.right !== null) {\n        if (root.next !== null) {\n            root.right.next = root.next.left;\n        }\n        connect(root.right);\n    }\n};\n"}],"position":{"start":{"line":166,"column":1,"offset":3983},"end":{"line":194,"column":4,"offset":4609}}}],"position":{"start":{"line":166,"column":1,"offset":3983},"end":{"line":194,"column":4,"offset":4609}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":196,"column":6,"offset":4616},"end":{"line":196,"column":9,"offset":4619}}}],"position":{"start":{"line":196,"column":1,"offset":4611},"end":{"line":196,"column":9,"offset":4619}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level order traversal.","position":{"start":{"line":198,"column":1,"offset":4621},"end":{"line":198,"column":23,"offset":4643}}}],"position":{"start":{"line":198,"column":1,"offset":4621},"end":{"line":198,"column":23,"offset":4643}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};\n"}],"position":{"start":{"line":200,"column":1,"offset":4645},"end":{"line":236,"column":4,"offset":5509}}}],"position":{"start":{"line":200,"column":1,"offset":4645},"end":{"line":236,"column":4,"offset":5509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":238,"column":1,"offset":5511},"end":{"line":238,"column":4,"offset":5514}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":240,"column":1,"offset":5516},"end":{"line":242,"column":9,"offset":5559}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":242,"column":9,"offset":5559},"end":{"line":242,"column":38,"offset":5588}}}],"position":{"start":{"line":242,"column":9,"offset":5559},"end":{"line":242,"column":38,"offset":5588}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":242,"column":38,"offset":5588},"end":{"line":243,"column":23,"offset":5611}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":243,"column":23,"offset":5611},"end":{"line":243,"column":66,"offset":5654}}}],"position":{"start":{"line":243,"column":23,"offset":5611},"end":{"line":243,"column":66,"offset":5654}}},{"type":"text","value":"\nSimilar Questions:\n\"Populating Next Right Pointers in Each Node\": ","position":{"start":{"line":243,"column":66,"offset":5654},"end":{"line":245,"column":48,"offset":5721}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node"},"children":[{"type":"text","value":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node","position":{"start":{"line":245,"column":48,"offset":5721},"end":{"line":245,"column":121,"offset":5794}}}],"position":{"start":{"line":245,"column":48,"offset":5721},"end":{"line":245,"column":121,"offset":5794}}}],"position":{"start":{"line":240,"column":1,"offset":5516},"end":{"line":245,"column":121,"offset":5794}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":247,"column":1,"offset":5796},"end":{"line":247,"column":4,"offset":5799}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#117-populating-next-right-pointers-in-each-node-iihttpsleetcodecomproblemspopulating-next-right-pointers-in-each-node-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":249,"column":2,"offset":5802},"end":{"line":249,"column":142,"offset":5942}}}],"position":{"start":{"line":249,"column":1,"offset":5801},"end":{"line":249,"column":277,"offset":6077}}}],"position":{"start":{"line":249,"column":1,"offset":5801},"end":{"line":249,"column":277,"offset":6077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":251,"column":4,"offset":6082},"end":{"line":251,"column":6,"offset":6084}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii/description/"},"children":[{"type":"text","value":"117. Populating Next Right Pointers in Each Node II","position":{"start":{"line":251,"column":7,"offset":6085},"end":{"line":251,"column":58,"offset":6136}}}],"position":{"start":{"line":251,"column":6,"offset":6084},"end":{"line":251,"column":150,"offset":6228}}}],"position":{"start":{"line":251,"column":1,"offset":6079},"end":{"line":251,"column":150,"offset":6228}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":253,"column":5,"offset":6234},"end":{"line":253,"column":13,"offset":6242}}}],"position":{"start":{"line":253,"column":1,"offset":6230},"end":{"line":253,"column":13,"offset":6242}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree","position":{"start":{"line":255,"column":1,"offset":6244},"end":{"line":255,"column":20,"offset":6263}}}],"position":{"start":{"line":255,"column":1,"offset":6244},"end":{"line":255,"column":20,"offset":6263}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"struct TreeLinkNode {\n  TreeLinkNode *left;\n  TreeLinkNode *right;\n  TreeLinkNode *next;\n}\n"}],"position":{"start":{"line":257,"column":1,"offset":6265},"end":{"line":264,"column":4,"offset":6364}}}],"position":{"start":{"line":257,"column":1,"offset":6265},"end":{"line":264,"column":4,"offset":6364}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to ","position":{"start":{"line":266,"column":1,"offset":6366},"end":{"line":266,"column":127,"offset":6492}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":266,"column":127,"offset":6492},"end":{"line":266,"column":133,"offset":6498}}},{"type":"text","value":".","position":{"start":{"line":266,"column":133,"offset":6498},"end":{"line":266,"column":134,"offset":6499}}}],"position":{"start":{"line":266,"column":1,"offset":6366},"end":{"line":266,"column":134,"offset":6499}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Initially, all next pointers are set to ","position":{"start":{"line":268,"column":1,"offset":6501},"end":{"line":268,"column":41,"offset":6541}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"NULL"}],"position":{"start":{"line":268,"column":41,"offset":6541},"end":{"line":268,"column":47,"offset":6547}}},{"type":"text","value":".","position":{"start":{"line":268,"column":47,"offset":6547},"end":{"line":268,"column":48,"offset":6548}}}],"position":{"start":{"line":268,"column":1,"offset":6501},"end":{"line":268,"column":48,"offset":6548}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":270,"column":3,"offset":6552},"end":{"line":270,"column":8,"offset":6557}}}],"position":{"start":{"line":270,"column":1,"offset":6550},"end":{"line":270,"column":10,"offset":6559}}}],"position":{"start":{"line":270,"column":1,"offset":6550},"end":{"line":270,"column":10,"offset":6559}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may only use constant extra space.","position":{"start":{"line":272,"column":5,"offset":6565},"end":{"line":272,"column":43,"offset":6603}}}],"position":{"start":{"line":272,"column":1,"offset":6561},"end":{"line":272,"column":43,"offset":6603}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Recursive approach is fine, implicit stack space does not count as extra space for this problem.","position":{"start":{"line":273,"column":5,"offset":6608},"end":{"line":273,"column":101,"offset":6704}}}],"position":{"start":{"line":273,"column":1,"offset":6604},"end":{"line":273,"column":101,"offset":6704}}},{"type":"text","value":"\n"}],"position":{"start":{"line":272,"column":1,"offset":6561},"end":{"line":273,"column":101,"offset":6704}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":275,"column":3,"offset":6708},"end":{"line":275,"column":11,"offset":6716}}}],"position":{"start":{"line":275,"column":1,"offset":6706},"end":{"line":275,"column":13,"offset":6718}}}],"position":{"start":{"line":275,"column":1,"offset":6706},"end":{"line":275,"column":13,"offset":6718}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the following binary tree,","position":{"start":{"line":277,"column":1,"offset":6720},"end":{"line":277,"column":33,"offset":6752}}}],"position":{"start":{"line":277,"column":1,"offset":6720},"end":{"line":277,"column":33,"offset":6752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1\n   /  \\\n  2    3\n / \\    \\\n4   5    7\n"}],"position":{"start":{"line":279,"column":1,"offset":6754},"end":{"line":286,"column":4,"offset":6807}}}],"position":{"start":{"line":279,"column":1,"offset":6754},"end":{"line":286,"column":4,"offset":6807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After calling your function, the tree should look like:","position":{"start":{"line":288,"column":1,"offset":6809},"end":{"line":288,"column":56,"offset":6864}}}],"position":{"start":{"line":288,"column":1,"offset":6809},"end":{"line":288,"column":56,"offset":6864}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"     1 -> NULL\n   /  \\\n  2 -> 3 -> NULL\n / \\    \\\n4-> 5 -> 7 -> NULL\n"}],"position":{"start":{"line":290,"column":1,"offset":6866},"end":{"line":297,"column":4,"offset":6943}}}],"position":{"start":{"line":290,"column":1,"offset":6866},"end":{"line":297,"column":4,"offset":6943}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":299,"column":5,"offset":6949},"end":{"line":299,"column":14,"offset":6958}}}],"position":{"start":{"line":299,"column":1,"offset":6945},"end":{"line":299,"column":14,"offset":6958}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":301,"column":6,"offset":6965},"end":{"line":301,"column":9,"offset":6968}}}],"position":{"start":{"line":301,"column":1,"offset":6960},"end":{"line":301,"column":9,"offset":6968}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Recursive. See ","position":{"start":{"line":303,"column":1,"offset":6970},"end":{"line":303,"column":16,"offset":6985}}},{"type":"element","tagName":"a","properties":{"href":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md"},"children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":303,"column":17,"offset":6986},"end":{"line":303,"column":65,"offset":7034}}}],"position":{"start":{"line":303,"column":16,"offset":6985},"end":{"line":303,"column":135,"offset":7104}}},{"type":"text","value":".","position":{"start":{"line":303,"column":135,"offset":7104},"end":{"line":303,"column":136,"offset":7105}}}],"position":{"start":{"line":303,"column":1,"offset":6970},"end":{"line":303,"column":136,"offset":7105}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The tree may not be perfect now. So keep finding ","position":{"start":{"line":305,"column":1,"offset":7107},"end":{"line":305,"column":50,"offset":7156}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"next"}],"position":{"start":{"line":305,"column":50,"offset":7156},"end":{"line":305,"column":56,"offset":7162}}},{"type":"text","value":" until there is a node with children, or ","position":{"start":{"line":305,"column":56,"offset":7162},"end":{"line":305,"column":97,"offset":7203}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"null"}],"position":{"start":{"line":305,"column":97,"offset":7203},"end":{"line":305,"column":103,"offset":7209}}},{"type":"text","value":".","position":{"start":{"line":305,"column":103,"offset":7209},"end":{"line":305,"column":104,"offset":7210}}}],"position":{"start":{"line":305,"column":1,"offset":7107},"end":{"line":305,"column":104,"offset":7210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This also means post-order traversal is required.","position":{"start":{"line":307,"column":1,"offset":7212},"end":{"line":307,"column":50,"offset":7261}}}],"position":{"start":{"line":307,"column":1,"offset":7212},"end":{"line":307,"column":50,"offset":7261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n    let next = null;\n    for (let node = root.next; node !== null; node = node.next) {\n        if (node.left !== null) {\n            next = node.left;\n            break;\n        }\n        if (node.right !== null) {\n            next = node.right;\n            break;\n        }\n    }\n    if (root.right !== null) {\n        root.right.next = next;\n    }\n    if (root.left !== null) {\n        root.left.next = root.right || next;\n    }\n    connect(root.right);\n    connect(root.left);\n};\n"}],"position":{"start":{"line":309,"column":1,"offset":7263},"end":{"line":346,"column":4,"offset":8112}}}],"position":{"start":{"line":309,"column":1,"offset":7263},"end":{"line":346,"column":4,"offset":8112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":348,"column":6,"offset":8119},"end":{"line":348,"column":9,"offset":8122}}}],"position":{"start":{"line":348,"column":1,"offset":8114},"end":{"line":348,"column":9,"offset":8122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level order traversal. Exact same as ","position":{"start":{"line":350,"column":1,"offset":8124},"end":{"line":350,"column":38,"offset":8161}}},{"type":"element","tagName":"a","properties":{"href":"./116.%20Populating%20Next%20Right%20Pointers%20in%20Each%20Node.md"},"children":[{"type":"text","value":"116. Populating Next Right Pointers in Each Node","position":{"start":{"line":350,"column":39,"offset":8162},"end":{"line":350,"column":87,"offset":8210}}}],"position":{"start":{"line":350,"column":38,"offset":8161},"end":{"line":350,"column":157,"offset":8280}}},{"type":"text","value":".","position":{"start":{"line":350,"column":157,"offset":8280},"end":{"line":350,"column":158,"offset":8281}}}],"position":{"start":{"line":350,"column":1,"offset":8124},"end":{"line":350,"column":158,"offset":8281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * Definition for binary tree with next pointer.\n * function TreeLinkNode(val) {\n *     this.val = val;\n *     this.left = this.right = this.next = null;\n * }\n */\n\n/**\n * @param {TreeLinkNode} root\n * @return {void} Do not return anything, modify tree in-place instead.\n */\nlet connect = function (root) {\n    if (!root) {\n        return;\n    }\n\n    const queue = [NaN, root];\n    while (queue.length > 1) {\n        const node = queue.shift();\n        if (node !== node) {\n            for (let i = 0; i < queue.length; i++) {\n                queue[i].next = queue[i + 1] || null;\n            }\n            queue.push(NaN);\n        } else {\n            if (node.left !== null) {\n                queue.push(node.left);\n            }\n            if (node.right !== null) {\n                queue.push(node.right);\n            }\n        }\n    }\n};\n"}],"position":{"start":{"line":352,"column":1,"offset":8283},"end":{"line":388,"column":4,"offset":9147}}}],"position":{"start":{"line":352,"column":1,"offset":8283},"end":{"line":388,"column":4,"offset":9147}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":390,"column":1,"offset":9149},"end":{"line":390,"column":4,"offset":9152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":392,"column":1,"offset":9154},"end":{"line":394,"column":10,"offset":9196}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":394,"column":10,"offset":9196},"end":{"line":394,"column":40,"offset":9226}}}],"position":{"start":{"line":394,"column":10,"offset":9196},"end":{"line":394,"column":40,"offset":9226}}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle II\": ","position":{"start":{"line":394,"column":40,"offset":9226},"end":{"line":396,"column":25,"offset":9270}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle-ii","position":{"start":{"line":396,"column":25,"offset":9270},"end":{"line":396,"column":74,"offset":9319}}}],"position":{"start":{"line":396,"column":25,"offset":9270},"end":{"line":396,"column":74,"offset":9319}}}],"position":{"start":{"line":392,"column":1,"offset":9154},"end":{"line":396,"column":74,"offset":9319}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":398,"column":1,"offset":9321},"end":{"line":398,"column":4,"offset":9324}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#118-pascals-trianglehttpsleetcodecomproblemspascals-triangledescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":400,"column":2,"offset":9327},"end":{"line":400,"column":142,"offset":9467}}}],"position":{"start":{"line":400,"column":1,"offset":9326},"end":{"line":400,"column":217,"offset":9542}}}],"position":{"start":{"line":400,"column":1,"offset":9326},"end":{"line":400,"column":217,"offset":9542}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":402,"column":4,"offset":9547},"end":{"line":402,"column":6,"offset":9549}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle/description/"},"children":[{"type":"text","value":"118. Pascal's Triangle","position":{"start":{"line":402,"column":7,"offset":9550},"end":{"line":402,"column":29,"offset":9572}}}],"position":{"start":{"line":402,"column":6,"offset":9549},"end":{"line":402,"column":91,"offset":9634}}}],"position":{"start":{"line":402,"column":1,"offset":9544},"end":{"line":402,"column":91,"offset":9634}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":404,"column":5,"offset":9640},"end":{"line":404,"column":13,"offset":9648}}}],"position":{"start":{"line":404,"column":1,"offset":9636},"end":{"line":404,"column":13,"offset":9648}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a non-negative integer ","position":{"start":{"line":406,"column":1,"offset":9650},"end":{"line":406,"column":30,"offset":9679}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"numRows","position":{"start":{"line":406,"column":31,"offset":9680},"end":{"line":406,"column":38,"offset":9687}}}],"position":{"start":{"line":406,"column":30,"offset":9679},"end":{"line":406,"column":39,"offset":9688}}},{"type":"text","value":", generate the first ","position":{"start":{"line":406,"column":39,"offset":9688},"end":{"line":406,"column":60,"offset":9709}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"numRows","position":{"start":{"line":406,"column":61,"offset":9710},"end":{"line":406,"column":68,"offset":9717}}}],"position":{"start":{"line":406,"column":60,"offset":9709},"end":{"line":406,"column":69,"offset":9718}}},{"type":"text","value":" of Pascal's triangle.","position":{"start":{"line":406,"column":69,"offset":9718},"end":{"line":406,"column":91,"offset":9740}}}],"position":{"start":{"line":406,"column":1,"offset":9650},"end":{"line":406,"column":91,"offset":9740}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif"},"children":[],"position":{"start":{"line":408,"column":1,"offset":9742},"end":{"line":408,"column":112,"offset":9853}}}],"position":{"start":{"line":408,"column":1,"offset":9742},"end":{"line":408,"column":112,"offset":9853}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":410,"column":1,"offset":9855},"end":{"line":410,"column":83,"offset":9937}}}],"position":{"start":{"line":410,"column":1,"offset":9855},"end":{"line":410,"column":83,"offset":9937}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":412,"column":3,"offset":9941},"end":{"line":412,"column":11,"offset":9949}}}],"position":{"start":{"line":412,"column":1,"offset":9939},"end":{"line":412,"column":13,"offset":9951}}}],"position":{"start":{"line":412,"column":1,"offset":9939},"end":{"line":412,"column":13,"offset":9951}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: 5\nOutput:\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n"}],"position":{"start":{"line":414,"column":1,"offset":9953},"end":{"line":425,"column":4,"offset":10041}}}],"position":{"start":{"line":414,"column":1,"offset":9953},"end":{"line":425,"column":4,"offset":10041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":427,"column":5,"offset":10047},"end":{"line":427,"column":14,"offset":10056}}}],"position":{"start":{"line":427,"column":1,"offset":10043},"end":{"line":427,"column":14,"offset":10056}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic Programming 101.","position":{"start":{"line":429,"column":1,"offset":10058},"end":{"line":429,"column":25,"offset":10082}}}],"position":{"start":{"line":429,"column":1,"offset":10058},"end":{"line":429,"column":25,"offset":10082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {number} numRows\n * @return {number[][]}\n */\nlet generate = function (numRows) {\n    if (numRows <= 0) {\n        return [];\n    }\n\n    const result = [[1]];\n    for (let i = 1; i < numRows; i++) {\n        const lastRow = result[i - 1];\n        const row = [1];\n        for (let j = 1; j < i; j++) {\n            row[j] = lastRow[j] + lastRow[j - 1];\n        }\n        row.push(1);\n        result.push(row);\n    }\n\n    return result;\n};\n"}],"position":{"start":{"line":431,"column":1,"offset":10084},"end":{"line":454,"column":4,"offset":10550}}}],"position":{"start":{"line":431,"column":1,"offset":10084},"end":{"line":454,"column":4,"offset":10550}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":456,"column":1,"offset":10552},"end":{"line":456,"column":4,"offset":10555}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":458,"column":1,"offset":10557},"end":{"line":460,"column":10,"offset":10599}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":460,"column":10,"offset":10599},"end":{"line":460,"column":40,"offset":10629}}}],"position":{"start":{"line":460,"column":10,"offset":10599},"end":{"line":460,"column":40,"offset":10629}}},{"type":"text","value":"\nSimilar Questions:\n\"Pascal's Triangle\": ","position":{"start":{"line":460,"column":40,"offset":10629},"end":{"line":462,"column":22,"offset":10670}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle"},"children":[{"type":"text","value":"https://leetcode.com/problems/pascals-triangle","position":{"start":{"line":462,"column":22,"offset":10670},"end":{"line":462,"column":68,"offset":10716}}}],"position":{"start":{"line":462,"column":22,"offset":10670},"end":{"line":462,"column":68,"offset":10716}}}],"position":{"start":{"line":458,"column":1,"offset":10557},"end":{"line":462,"column":68,"offset":10716}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":464,"column":1,"offset":10718},"end":{"line":464,"column":4,"offset":10721}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#119-pascals-triangle-iihttpsleetcodecomproblemspascals-triangle-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":466,"column":2,"offset":10724},"end":{"line":466,"column":142,"offset":10864}}}],"position":{"start":{"line":466,"column":1,"offset":10723},"end":{"line":466,"column":223,"offset":10945}}}],"position":{"start":{"line":466,"column":1,"offset":10723},"end":{"line":466,"column":223,"offset":10945}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":468,"column":4,"offset":10950},"end":{"line":468,"column":6,"offset":10952}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/pascals-triangle-ii/description/"},"children":[{"type":"text","value":"119. Pascal's Triangle II","position":{"start":{"line":468,"column":7,"offset":10953},"end":{"line":468,"column":32,"offset":10978}}}],"position":{"start":{"line":468,"column":6,"offset":10952},"end":{"line":468,"column":97,"offset":11043}}}],"position":{"start":{"line":468,"column":1,"offset":10947},"end":{"line":468,"column":97,"offset":11043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":470,"column":5,"offset":11049},"end":{"line":470,"column":13,"offset":11057}}}],"position":{"start":{"line":470,"column":1,"offset":11045},"end":{"line":470,"column":13,"offset":11057}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a non-negative index ","position":{"start":{"line":472,"column":1,"offset":11059},"end":{"line":472,"column":28,"offset":11086}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":472,"column":29,"offset":11087},"end":{"line":472,"column":30,"offset":11088}}}],"position":{"start":{"line":472,"column":28,"offset":11086},"end":{"line":472,"column":31,"offset":11089}}},{"type":"text","value":" where ","position":{"start":{"line":472,"column":31,"offset":11089},"end":{"line":472,"column":38,"offset":11096}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":472,"column":39,"offset":11097},"end":{"line":472,"column":40,"offset":11098}}}],"position":{"start":{"line":472,"column":38,"offset":11096},"end":{"line":472,"column":41,"offset":11099}}},{"type":"text","value":" â‰¤ 33, return the ","position":{"start":{"line":472,"column":41,"offset":11099},"end":{"line":472,"column":59,"offset":11117}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":472,"column":60,"offset":11118},"end":{"line":472,"column":61,"offset":11119}}}],"position":{"start":{"line":472,"column":59,"offset":11117},"end":{"line":472,"column":62,"offset":11120}}},{"type":"text","value":"th index row of the Pascal's triangle.","position":{"start":{"line":472,"column":62,"offset":11120},"end":{"line":472,"column":100,"offset":11158}}}],"position":{"start":{"line":472,"column":1,"offset":11059},"end":{"line":472,"column":100,"offset":11158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that the row index starts from 0.","position":{"start":{"line":474,"column":1,"offset":11160},"end":{"line":474,"column":39,"offset":11198}}}],"position":{"start":{"line":474,"column":1,"offset":11160},"end":{"line":474,"column":39,"offset":11198}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://upload.wikimedia.org/wikipedia/commons/0/0d/PascalTriangleAnimated2.gif","alt":"PascalTriangleAnimated2.gif"},"children":[],"position":{"start":{"line":476,"column":1,"offset":11200},"end":{"line":476,"column":112,"offset":11311}}}],"position":{"start":{"line":476,"column":1,"offset":11200},"end":{"line":476,"column":112,"offset":11311}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"In Pascal's triangle, each number is the sum of the two numbers directly above it.","position":{"start":{"line":478,"column":1,"offset":11313},"end":{"line":478,"column":83,"offset":11395}}}],"position":{"start":{"line":478,"column":1,"offset":11313},"end":{"line":478,"column":83,"offset":11395}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":480,"column":3,"offset":11399},"end":{"line":480,"column":11,"offset":11407}}}],"position":{"start":{"line":480,"column":1,"offset":11397},"end":{"line":480,"column":13,"offset":11409}}}],"position":{"start":{"line":480,"column":1,"offset":11397},"end":{"line":480,"column":13,"offset":11409}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: 3\nOutput: [1,3,3,1]\n"}],"position":{"start":{"line":482,"column":1,"offset":11411},"end":{"line":486,"column":4,"offset":11446}}}],"position":{"start":{"line":482,"column":1,"offset":11411},"end":{"line":486,"column":4,"offset":11446}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Follow up:","position":{"start":{"line":488,"column":3,"offset":11450},"end":{"line":488,"column":13,"offset":11460}}}],"position":{"start":{"line":488,"column":1,"offset":11448},"end":{"line":488,"column":15,"offset":11462}}}],"position":{"start":{"line":488,"column":1,"offset":11448},"end":{"line":488,"column":15,"offset":11462}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Could you optimize your algorithm to use only ","position":{"start":{"line":490,"column":1,"offset":11464},"end":{"line":490,"column":47,"offset":11510}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"O","position":{"start":{"line":490,"column":48,"offset":11511},"end":{"line":490,"column":49,"offset":11512}}}],"position":{"start":{"line":490,"column":47,"offset":11510},"end":{"line":490,"column":50,"offset":11513}}},{"type":"text","value":"(","position":{"start":{"line":490,"column":50,"offset":11513},"end":{"line":490,"column":51,"offset":11514}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"k","position":{"start":{"line":490,"column":52,"offset":11515},"end":{"line":490,"column":53,"offset":11516}}}],"position":{"start":{"line":490,"column":51,"offset":11514},"end":{"line":490,"column":54,"offset":11517}}},{"type":"text","value":") extra space?","position":{"start":{"line":490,"column":54,"offset":11517},"end":{"line":490,"column":68,"offset":11531}}}],"position":{"start":{"line":490,"column":1,"offset":11464},"end":{"line":490,"column":68,"offset":11531}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":492,"column":5,"offset":11537},"end":{"line":492,"column":14,"offset":11546}}}],"position":{"start":{"line":492,"column":1,"offset":11533},"end":{"line":492,"column":14,"offset":11546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic Programming 101 with dynamic array.","position":{"start":{"line":494,"column":1,"offset":11548},"end":{"line":494,"column":44,"offset":11591}}}],"position":{"start":{"line":494,"column":1,"offset":11548},"end":{"line":494,"column":44,"offset":11591}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"State ","position":{"start":{"line":496,"column":1,"offset":11593},"end":{"line":496,"column":7,"offset":11599}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i, j)"}],"position":{"start":{"line":496,"column":7,"offset":11599},"end":{"line":496,"column":15,"offset":11607}}},{"type":"text","value":" depends on ","position":{"start":{"line":496,"column":15,"offset":11607},"end":{"line":496,"column":27,"offset":11619}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i-1, j)"}],"position":{"start":{"line":496,"column":27,"offset":11619},"end":{"line":496,"column":37,"offset":11629}}},{"type":"text","value":" and ","position":{"start":{"line":496,"column":37,"offset":11629},"end":{"line":496,"column":42,"offset":11634}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i-1, j-1)"}],"position":{"start":{"line":496,"column":42,"offset":11634},"end":{"line":496,"column":54,"offset":11646}}},{"type":"text","value":". So to access ","position":{"start":{"line":496,"column":54,"offset":11646},"end":{"line":496,"column":69,"offset":11661}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"(i-1, j-1)"}],"position":{"start":{"line":496,"column":69,"offset":11661},"end":{"line":496,"column":81,"offset":11673}}},{"type":"text","value":" iteration must be from right to left.","position":{"start":{"line":496,"column":81,"offset":11673},"end":{"line":496,"column":119,"offset":11711}}}],"position":{"start":{"line":496,"column":1,"offset":11593},"end":{"line":496,"column":119,"offset":11711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {number} rowIndex\n * @return {number[]}\n */\nlet getRow = function (rowIndex) {\n    if (rowIndex < 0) {\n        return [];\n    }\n\n    const row = [1];\n    for (let i = 1; i <= rowIndex; i++) {\n        for (let j = i - 1; j > 0; j--) {\n            row[j] += row[j - 1];\n        }\n        row.push(1);\n    }\n\n    return row;\n};\n"}],"position":{"start":{"line":498,"column":1,"offset":11713},"end":{"line":518,"column":4,"offset":12069}}}],"position":{"start":{"line":498,"column":1,"offset":11713},"end":{"line":518,"column":4,"offset":12069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":520,"column":1,"offset":12071},"end":{"line":520,"column":4,"offset":12074}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Array\": ","position":{"start":{"line":522,"column":1,"offset":12076},"end":{"line":524,"column":10,"offset":12120}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":524,"column":10,"offset":12120},"end":{"line":524,"column":40,"offset":12150}}}],"position":{"start":{"line":524,"column":10,"offset":12120},"end":{"line":524,"column":40,"offset":12150}}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":524,"column":40,"offset":12150},"end":{"line":525,"column":24,"offset":12174}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/dynamic-programming"},"children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":525,"column":24,"offset":12174},"end":{"line":525,"column":68,"offset":12218}}}],"position":{"start":{"line":525,"column":24,"offset":12174},"end":{"line":525,"column":68,"offset":12218}}}],"position":{"start":{"line":522,"column":1,"offset":12076},"end":{"line":525,"column":68,"offset":12218}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":527,"column":1,"offset":12220},"end":{"line":527,"column":4,"offset":12223}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#120-trianglehttpsleetcodecomproblemstriangledescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":529,"column":2,"offset":12226},"end":{"line":529,"column":142,"offset":12366}}}],"position":{"start":{"line":529,"column":1,"offset":12225},"end":{"line":529,"column":201,"offset":12425}}}],"position":{"start":{"line":529,"column":1,"offset":12225},"end":{"line":529,"column":201,"offset":12425}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":531,"column":4,"offset":12430},"end":{"line":531,"column":6,"offset":12432}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/triangle/description/"},"children":[{"type":"text","value":"120. Triangle","position":{"start":{"line":531,"column":7,"offset":12433},"end":{"line":531,"column":20,"offset":12446}}}],"position":{"start":{"line":531,"column":6,"offset":12432},"end":{"line":531,"column":74,"offset":12500}}}],"position":{"start":{"line":531,"column":1,"offset":12427},"end":{"line":531,"column":74,"offset":12500}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":533,"column":5,"offset":12506},"end":{"line":533,"column":13,"offset":12514}}}],"position":{"start":{"line":533,"column":1,"offset":12502},"end":{"line":533,"column":13,"offset":12514}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.","position":{"start":{"line":535,"column":1,"offset":12516},"end":{"line":535,"column":125,"offset":12640}}}],"position":{"start":{"line":535,"column":1,"offset":12516},"end":{"line":535,"column":125,"offset":12640}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For example, given the following triangle","position":{"start":{"line":537,"column":1,"offset":12642},"end":{"line":537,"column":42,"offset":12683}}}],"position":{"start":{"line":537,"column":1,"offset":12642},"end":{"line":537,"column":42,"offset":12683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[\n     [2],\n    [3,4],\n   [6,5,7],\n  [4,1,8,3]\n]\n"}],"position":{"start":{"line":539,"column":1,"offset":12685},"end":{"line":547,"column":4,"offset":12742}}}],"position":{"start":{"line":539,"column":1,"offset":12685},"end":{"line":547,"column":4,"offset":12742}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The minimum path sum from top to bottom is ","position":{"start":{"line":549,"column":1,"offset":12744},"end":{"line":549,"column":44,"offset":12787}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"11"}],"position":{"start":{"line":549,"column":44,"offset":12787},"end":{"line":549,"column":48,"offset":12791}}},{"type":"text","value":" (i.e., ","position":{"start":{"line":549,"column":48,"offset":12791},"end":{"line":549,"column":56,"offset":12799}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"2","position":{"start":{"line":549,"column":58,"offset":12801},"end":{"line":549,"column":59,"offset":12802}}}],"position":{"start":{"line":549,"column":56,"offset":12799},"end":{"line":549,"column":61,"offset":12804}}},{"type":"text","value":" + ","position":{"start":{"line":549,"column":61,"offset":12804},"end":{"line":549,"column":64,"offset":12807}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"3","position":{"start":{"line":549,"column":66,"offset":12809},"end":{"line":549,"column":67,"offset":12810}}}],"position":{"start":{"line":549,"column":64,"offset":12807},"end":{"line":549,"column":69,"offset":12812}}},{"type":"text","value":" + ","position":{"start":{"line":549,"column":69,"offset":12812},"end":{"line":549,"column":72,"offset":12815}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"5","position":{"start":{"line":549,"column":74,"offset":12817},"end":{"line":549,"column":75,"offset":12818}}}],"position":{"start":{"line":549,"column":72,"offset":12815},"end":{"line":549,"column":77,"offset":12820}}},{"type":"text","value":" + ","position":{"start":{"line":549,"column":77,"offset":12820},"end":{"line":549,"column":80,"offset":12823}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"1","position":{"start":{"line":549,"column":82,"offset":12825},"end":{"line":549,"column":83,"offset":12826}}}],"position":{"start":{"line":549,"column":80,"offset":12823},"end":{"line":549,"column":85,"offset":12828}}},{"type":"text","value":" = 11).","position":{"start":{"line":549,"column":85,"offset":12828},"end":{"line":549,"column":92,"offset":12835}}}],"position":{"start":{"line":549,"column":1,"offset":12744},"end":{"line":549,"column":92,"offset":12835}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":551,"column":3,"offset":12839},"end":{"line":551,"column":8,"offset":12844}}}],"position":{"start":{"line":551,"column":1,"offset":12837},"end":{"line":551,"column":10,"offset":12846}}}],"position":{"start":{"line":551,"column":1,"offset":12837},"end":{"line":551,"column":10,"offset":12846}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Bonus point if you are able to do this using only ","position":{"start":{"line":553,"column":1,"offset":12848},"end":{"line":553,"column":51,"offset":12898}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"O","position":{"start":{"line":553,"column":52,"offset":12899},"end":{"line":553,"column":53,"offset":12900}}}],"position":{"start":{"line":553,"column":51,"offset":12898},"end":{"line":553,"column":54,"offset":12901}}},{"type":"text","value":"(","position":{"start":{"line":553,"column":54,"offset":12901},"end":{"line":553,"column":55,"offset":12902}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"n","position":{"start":{"line":553,"column":56,"offset":12903},"end":{"line":553,"column":57,"offset":12904}}}],"position":{"start":{"line":553,"column":55,"offset":12902},"end":{"line":553,"column":58,"offset":12905}}},{"type":"text","value":") extra space, where ","position":{"start":{"line":553,"column":58,"offset":12905},"end":{"line":553,"column":79,"offset":12926}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"n","position":{"start":{"line":553,"column":80,"offset":12927},"end":{"line":553,"column":81,"offset":12928}}}],"position":{"start":{"line":553,"column":79,"offset":12926},"end":{"line":553,"column":82,"offset":12929}}},{"type":"text","value":" is the total number of rows in the triangle.","position":{"start":{"line":553,"column":82,"offset":12929},"end":{"line":553,"column":127,"offset":12974}}}],"position":{"start":{"line":553,"column":1,"offset":12848},"end":{"line":553,"column":127,"offset":12974}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":555,"column":5,"offset":12980},"end":{"line":555,"column":14,"offset":12989}}}],"position":{"start":{"line":555,"column":1,"offset":12976},"end":{"line":555,"column":14,"offset":12989}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":557,"column":1,"offset":12991},"end":{"line":557,"column":8,"offset":12998}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, j)"}],"position":{"start":{"line":557,"column":8,"offset":12998},"end":{"line":557,"column":17,"offset":13007}}},{"type":"text","value":" to be the minimum path sum from ","position":{"start":{"line":557,"column":17,"offset":13007},"end":{"line":557,"column":50,"offset":13040}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"triangle[0][0]"}],"position":{"start":{"line":557,"column":50,"offset":13040},"end":{"line":557,"column":66,"offset":13056}}},{"type":"text","value":" to ","position":{"start":{"line":557,"column":66,"offset":13056},"end":{"line":557,"column":70,"offset":13060}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"triangle[i][j]"}],"position":{"start":{"line":557,"column":70,"offset":13060},"end":{"line":557,"column":86,"offset":13076}}},{"type":"text","value":".","position":{"start":{"line":557,"column":86,"offset":13076},"end":{"line":557,"column":87,"offset":13077}}}],"position":{"start":{"line":557,"column":1,"offset":12991},"end":{"line":557,"column":87,"offset":13077}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(i, 0) = f(i-1, j) + triangle[i][0]\nf(i, j) = min( f(i-1, j-1), f(i-1, j) ) + triangle[i][j], 0 < j < i\nf(i, i) = f(i-1, i-1) + triangle[i][i], i > 0\n"}],"position":{"start":{"line":559,"column":1,"offset":13079},"end":{"line":563,"column":4,"offset":13237}}}],"position":{"start":{"line":559,"column":1,"offset":13079},"end":{"line":563,"column":4,"offset":13237}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Dynamic array can be used.","position":{"start":{"line":565,"column":1,"offset":13239},"end":{"line":565,"column":27,"offset":13265}}}],"position":{"start":{"line":565,"column":1,"offset":13239},"end":{"line":565,"column":27,"offset":13265}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {number[][]} triangle\n * @return {number}\n */\nlet minimumTotal = function (triangle) {\n    if (triangle.length <= 0) {\n        return 0;\n    }\n\n    const dp = [triangle[0][0]];\n    for (let i = 1; i < triangle.length; i++) {\n        dp[i] = dp[i - 1] + triangle[i][i];\n        for (let j = i - 1; j >= 1; j--) {\n            dp[j] = Math.min(dp[j], dp[j - 1]) + triangle[i][j];\n        }\n        dp[0] += triangle[i][0];\n    }\n    return Math.min(...dp);\n};\n"}],"position":{"start":{"line":567,"column":1,"offset":13267},"end":{"line":587,"column":4,"offset":13755}}}],"position":{"start":{"line":567,"column":1,"offset":13267},"end":{"line":587,"column":4,"offset":13755}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":589,"column":1,"offset":13757},"end":{"line":589,"column":4,"offset":13760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":591,"column":1,"offset":13762},"end":{"line":593,"column":10,"offset":13804}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":593,"column":10,"offset":13804},"end":{"line":593,"column":40,"offset":13834}}}],"position":{"start":{"line":593,"column":10,"offset":13804},"end":{"line":593,"column":40,"offset":13834}}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":593,"column":40,"offset":13834},"end":{"line":594,"column":24,"offset":13858}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/dynamic-programming"},"children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":594,"column":24,"offset":13858},"end":{"line":594,"column":68,"offset":13902}}}],"position":{"start":{"line":594,"column":24,"offset":13858},"end":{"line":594,"column":68,"offset":13902}}},{"type":"text","value":"\nSimilar Questions:\n\"Maximum Subarray\": ","position":{"start":{"line":594,"column":68,"offset":13902},"end":{"line":596,"column":21,"offset":13942}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/maximum-subarray"},"children":[{"type":"text","value":"https://leetcode.com/problems/maximum-subarray","position":{"start":{"line":596,"column":21,"offset":13942},"end":{"line":596,"column":67,"offset":13988}}}],"position":{"start":{"line":596,"column":21,"offset":13942},"end":{"line":596,"column":67,"offset":13988}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":596,"column":67,"offset":13988},"end":{"line":597,"column":39,"offset":14027}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":597,"column":39,"offset":14027},"end":{"line":597,"column":103,"offset":14091}}}],"position":{"start":{"line":597,"column":39,"offset":14027},"end":{"line":597,"column":103,"offset":14091}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":597,"column":103,"offset":14091},"end":{"line":598,"column":40,"offset":14131}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":598,"column":40,"offset":14131},"end":{"line":598,"column":105,"offset":14196}}}],"position":{"start":{"line":598,"column":40,"offset":14131},"end":{"line":598,"column":105,"offset":14196}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":598,"column":105,"offset":14196},"end":{"line":599,"column":39,"offset":14235}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":599,"column":39,"offset":14235},"end":{"line":599,"column":103,"offset":14299}}}],"position":{"start":{"line":599,"column":39,"offset":14235},"end":{"line":599,"column":103,"offset":14299}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":599,"column":103,"offset":14299},"end":{"line":600,"column":50,"offset":14349}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":600,"column":50,"offset":14349},"end":{"line":600,"column":125,"offset":14424}}}],"position":{"start":{"line":600,"column":50,"offset":14349},"end":{"line":600,"column":125,"offset":14424}}}],"position":{"start":{"line":591,"column":1,"offset":13762},"end":{"line":600,"column":125,"offset":14424}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":602,"column":1,"offset":14426},"end":{"line":602,"column":4,"offset":14429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#121-best-time-to-buy-and-sell-stockhttpsleetcodecomproblemsbest-time-to-buy-and-sell-stockdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":604,"column":2,"offset":14432},"end":{"line":604,"column":142,"offset":14572}}}],"position":{"start":{"line":604,"column":1,"offset":14431},"end":{"line":604,"column":247,"offset":14677}}}],"position":{"start":{"line":604,"column":1,"offset":14431},"end":{"line":604,"column":247,"offset":14677}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":606,"column":4,"offset":14682},"end":{"line":606,"column":6,"offset":14684}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/"},"children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":606,"column":7,"offset":14685},"end":{"line":606,"column":43,"offset":14721}}}],"position":{"start":{"line":606,"column":6,"offset":14684},"end":{"line":606,"column":120,"offset":14798}}}],"position":{"start":{"line":606,"column":1,"offset":14679},"end":{"line":606,"column":120,"offset":14798}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":608,"column":5,"offset":14804},"end":{"line":608,"column":13,"offset":14812}}}],"position":{"start":{"line":608,"column":1,"offset":14800},"end":{"line":608,"column":13,"offset":14812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":610,"column":1,"offset":14814},"end":{"line":610,"column":37,"offset":14850}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":610,"column":38,"offset":14851},"end":{"line":610,"column":39,"offset":14852}}}],"position":{"start":{"line":610,"column":37,"offset":14850},"end":{"line":610,"column":40,"offset":14853}}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":610,"column":40,"offset":14853},"end":{"line":610,"column":88,"offset":14901}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":610,"column":89,"offset":14902},"end":{"line":610,"column":90,"offset":14903}}}],"position":{"start":{"line":610,"column":88,"offset":14901},"end":{"line":610,"column":91,"offset":14904}}},{"type":"text","value":".","position":{"start":{"line":610,"column":91,"offset":14904},"end":{"line":610,"column":92,"offset":14905}}}],"position":{"start":{"line":610,"column":1,"offset":14814},"end":{"line":610,"column":92,"offset":14905}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.","position":{"start":{"line":612,"column":1,"offset":14907},"end":{"line":612,"column":160,"offset":15066}}}],"position":{"start":{"line":612,"column":1,"offset":14907},"end":{"line":612,"column":160,"offset":15066}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Note that you cannot sell a stock before you buy one.","position":{"start":{"line":614,"column":1,"offset":15068},"end":{"line":614,"column":54,"offset":15121}}}],"position":{"start":{"line":614,"column":1,"offset":15068},"end":{"line":614,"column":54,"offset":15121}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":616,"column":3,"offset":15125},"end":{"line":616,"column":13,"offset":15135}}}],"position":{"start":{"line":616,"column":1,"offset":15123},"end":{"line":616,"column":15,"offset":15137}}}],"position":{"start":{"line":616,"column":1,"offset":15123},"end":{"line":616,"column":15,"offset":15137}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,1,5,3,6,4]\nOutput: 5\nExplanation: Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n             Not 7-1 = 6, as selling price needs to be larger than buying price.\n"}],"position":{"start":{"line":618,"column":1,"offset":15139},"end":{"line":624,"column":4,"offset":15346}}}],"position":{"start":{"line":618,"column":1,"offset":15139},"end":{"line":624,"column":4,"offset":15346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":626,"column":3,"offset":15350},"end":{"line":626,"column":13,"offset":15360}}}],"position":{"start":{"line":626,"column":1,"offset":15348},"end":{"line":626,"column":15,"offset":15362}}}],"position":{"start":{"line":626,"column":1,"offset":15348},"end":{"line":626,"column":15,"offset":15362}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n"}],"position":{"start":{"line":628,"column":1,"offset":15364},"end":{"line":633,"column":4,"offset":15473}}}],"position":{"start":{"line":628,"column":1,"offset":15364},"end":{"line":633,"column":4,"offset":15473}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":635,"column":5,"offset":15479},"end":{"line":635,"column":14,"offset":15488}}}],"position":{"start":{"line":635,"column":1,"offset":15475},"end":{"line":635,"column":14,"offset":15488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Only care about positive profits. Take the frist item as base and scan to the right. If we encounter an item ","position":{"start":{"line":637,"column":1,"offset":15490},"end":{"line":637,"column":110,"offset":15599}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j"}],"position":{"start":{"line":637,"column":110,"offset":15599},"end":{"line":637,"column":113,"offset":15602}}},{"type":"text","value":" whose price ","position":{"start":{"line":637,"column":113,"offset":15602},"end":{"line":637,"column":126,"offset":15615}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"price[j]"}],"position":{"start":{"line":637,"column":126,"offset":15615},"end":{"line":637,"column":136,"offset":15625}}},{"type":"text","value":" is lower than the base (which means if we sell now the profit would be negative), we sell ","position":{"start":{"line":637,"column":136,"offset":15625},"end":{"line":637,"column":227,"offset":15716}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j-1"}],"position":{"start":{"line":637,"column":227,"offset":15716},"end":{"line":637,"column":232,"offset":15721}}},{"type":"text","value":" instead and make ","position":{"start":{"line":637,"column":232,"offset":15721},"end":{"line":637,"column":250,"offset":15739}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j"}],"position":{"start":{"line":637,"column":250,"offset":15739},"end":{"line":637,"column":253,"offset":15742}}},{"type":"text","value":" the new base.","position":{"start":{"line":637,"column":253,"offset":15742},"end":{"line":637,"column":267,"offset":15756}}}],"position":{"start":{"line":637,"column":1,"offset":15490},"end":{"line":637,"column":267,"offset":15756}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Because ","position":{"start":{"line":639,"column":1,"offset":15758},"end":{"line":639,"column":9,"offset":15766}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"price[j]"}],"position":{"start":{"line":639,"column":9,"offset":15766},"end":{"line":639,"column":19,"offset":15776}}},{"type":"text","value":" is lower that the base, using ","position":{"start":{"line":639,"column":19,"offset":15776},"end":{"line":639,"column":50,"offset":15807}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"j"}],"position":{"start":{"line":639,"column":50,"offset":15807},"end":{"line":639,"column":53,"offset":15810}}},{"type":"text","value":" as new base is guaranteed to gain more profit comparing to the old one.","position":{"start":{"line":639,"column":53,"offset":15810},"end":{"line":639,"column":125,"offset":15882}}}],"position":{"start":{"line":639,"column":1,"offset":15758},"end":{"line":639,"column":125,"offset":15882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    let base = prices[0];\n    for (let i = 1; i < prices.length; i++) {\n        const profit = prices[i] - base;\n        if (profit > max) {\n            max = profit;\n        } else if (profit < 0) {\n            base = prices[i];\n        }\n    }\n    return max;\n};\n"}],"position":{"start":{"line":641,"column":1,"offset":15884},"end":{"line":659,"column":4,"offset":16275}}}],"position":{"start":{"line":641,"column":1,"offset":15884},"end":{"line":659,"column":4,"offset":16275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":661,"column":1,"offset":16277},"end":{"line":661,"column":4,"offset":16280}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Array\": ","position":{"start":{"line":663,"column":1,"offset":16282},"end":{"line":665,"column":10,"offset":16324}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":665,"column":10,"offset":16324},"end":{"line":665,"column":40,"offset":16354}}}],"position":{"start":{"line":665,"column":10,"offset":16324},"end":{"line":665,"column":40,"offset":16354}}},{"type":"text","value":"\n\"Greedy\": ","position":{"start":{"line":665,"column":40,"offset":16354},"end":{"line":666,"column":11,"offset":16365}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/greedy"},"children":[{"type":"text","value":"https://leetcode.com/tag/greedy","position":{"start":{"line":666,"column":11,"offset":16365},"end":{"line":666,"column":42,"offset":16396}}}],"position":{"start":{"line":666,"column":11,"offset":16365},"end":{"line":666,"column":42,"offset":16396}}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":666,"column":42,"offset":16396},"end":{"line":668,"column":36,"offset":16451}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":668,"column":36,"offset":16451},"end":{"line":668,"column":97,"offset":16512}}}],"position":{"start":{"line":668,"column":36,"offset":16451},"end":{"line":668,"column":97,"offset":16512}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock III\": ","position":{"start":{"line":668,"column":97,"offset":16512},"end":{"line":669,"column":40,"offset":16552}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii","position":{"start":{"line":669,"column":40,"offset":16552},"end":{"line":669,"column":105,"offset":16617}}}],"position":{"start":{"line":669,"column":40,"offset":16552},"end":{"line":669,"column":105,"offset":16617}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":669,"column":105,"offset":16617},"end":{"line":670,"column":39,"offset":16656}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":670,"column":39,"offset":16656},"end":{"line":670,"column":103,"offset":16720}}}],"position":{"start":{"line":670,"column":39,"offset":16656},"end":{"line":670,"column":103,"offset":16720}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Cooldown\": ","position":{"start":{"line":670,"column":103,"offset":16720},"end":{"line":671,"column":50,"offset":16770}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown","position":{"start":{"line":671,"column":50,"offset":16770},"end":{"line":671,"column":125,"offset":16845}}}],"position":{"start":{"line":671,"column":50,"offset":16770},"end":{"line":671,"column":125,"offset":16845}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock with Transaction Fee\": ","position":{"start":{"line":671,"column":125,"offset":16845},"end":{"line":672,"column":57,"offset":16902}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee","position":{"start":{"line":672,"column":57,"offset":16902},"end":{"line":672,"column":139,"offset":16984}}}],"position":{"start":{"line":672,"column":57,"offset":16902},"end":{"line":672,"column":139,"offset":16984}}}],"position":{"start":{"line":663,"column":1,"offset":16282},"end":{"line":672,"column":139,"offset":16984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":674,"column":1,"offset":16986},"end":{"line":674,"column":4,"offset":16989}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#122-best-time-to-buy-and-sell-stock-iihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":676,"column":2,"offset":16992},"end":{"line":676,"column":142,"offset":17132}}}],"position":{"start":{"line":676,"column":1,"offset":16991},"end":{"line":676,"column":253,"offset":17243}}}],"position":{"start":{"line":676,"column":1,"offset":16991},"end":{"line":676,"column":253,"offset":17243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":678,"column":4,"offset":17248},"end":{"line":678,"column":6,"offset":17250}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/"},"children":[{"type":"text","value":"122. Best Time to Buy and Sell Stock II","position":{"start":{"line":678,"column":7,"offset":17251},"end":{"line":678,"column":46,"offset":17290}}}],"position":{"start":{"line":678,"column":6,"offset":17250},"end":{"line":678,"column":126,"offset":17370}}}],"position":{"start":{"line":678,"column":1,"offset":17245},"end":{"line":678,"column":126,"offset":17370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":680,"column":5,"offset":17376},"end":{"line":680,"column":13,"offset":17384}}}],"position":{"start":{"line":680,"column":1,"offset":17372},"end":{"line":680,"column":13,"offset":17384}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":682,"column":1,"offset":17386},"end":{"line":682,"column":37,"offset":17422}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":682,"column":38,"offset":17423},"end":{"line":682,"column":39,"offset":17424}}}],"position":{"start":{"line":682,"column":37,"offset":17422},"end":{"line":682,"column":40,"offset":17425}}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":682,"column":40,"offset":17425},"end":{"line":682,"column":88,"offset":17473}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":682,"column":89,"offset":17474},"end":{"line":682,"column":90,"offset":17475}}}],"position":{"start":{"line":682,"column":88,"offset":17473},"end":{"line":682,"column":91,"offset":17476}}},{"type":"text","value":".","position":{"start":{"line":682,"column":91,"offset":17476},"end":{"line":682,"column":92,"offset":17477}}}],"position":{"start":{"line":682,"column":1,"offset":17386},"end":{"line":682,"column":92,"offset":17477}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).","position":{"start":{"line":684,"column":1,"offset":17479},"end":{"line":684,"column":162,"offset":17640}}}],"position":{"start":{"line":684,"column":1,"offset":17479},"end":{"line":684,"column":162,"offset":17640}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":686,"column":3,"offset":17644},"end":{"line":686,"column":8,"offset":17649}}}],"position":{"start":{"line":686,"column":1,"offset":17642},"end":{"line":686,"column":10,"offset":17651}}},{"type":"text","value":" You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":686,"column":10,"offset":17651},"end":{"line":686,"column":125,"offset":17766}}}],"position":{"start":{"line":686,"column":1,"offset":17642},"end":{"line":686,"column":125,"offset":17766}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":688,"column":3,"offset":17770},"end":{"line":688,"column":13,"offset":17780}}}],"position":{"start":{"line":688,"column":1,"offset":17768},"end":{"line":688,"column":15,"offset":17782}}}],"position":{"start":{"line":688,"column":1,"offset":17768},"end":{"line":688,"column":15,"offset":17782}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,1,5,3,6,4]\nOutput: 7\nExplanation: Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n             Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\n"}],"position":{"start":{"line":690,"column":1,"offset":17784},"end":{"line":696,"column":4,"offset":18002}}}],"position":{"start":{"line":690,"column":1,"offset":17784},"end":{"line":696,"column":4,"offset":18002}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":698,"column":3,"offset":18006},"end":{"line":698,"column":13,"offset":18016}}}],"position":{"start":{"line":698,"column":1,"offset":18004},"end":{"line":698,"column":15,"offset":18018}}}],"position":{"start":{"line":698,"column":1,"offset":18004},"end":{"line":698,"column":15,"offset":18018}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\n"}],"position":{"start":{"line":700,"column":1,"offset":18020},"end":{"line":707,"column":4,"offset":18334}}}],"position":{"start":{"line":700,"column":1,"offset":18020},"end":{"line":707,"column":4,"offset":18334}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":709,"column":3,"offset":18338},"end":{"line":709,"column":13,"offset":18348}}}],"position":{"start":{"line":709,"column":1,"offset":18336},"end":{"line":709,"column":15,"offset":18350}}}],"position":{"start":{"line":709,"column":1,"offset":18336},"end":{"line":709,"column":15,"offset":18350}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n"}],"position":{"start":{"line":711,"column":1,"offset":18352},"end":{"line":715,"column":4,"offset":18460}}}],"position":{"start":{"line":711,"column":1,"offset":18352},"end":{"line":715,"column":4,"offset":18460}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":717,"column":5,"offset":18466},"end":{"line":717,"column":14,"offset":18475}}}],"position":{"start":{"line":717,"column":1,"offset":18462},"end":{"line":717,"column":14,"offset":18475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Sell immediately after the price drops. Or in other perspective, it is the sum of all the incremental pairs (buy in then immediately sell out).","position":{"start":{"line":719,"column":1,"offset":18477},"end":{"line":719,"column":144,"offset":18620}}}],"position":{"start":{"line":719,"column":1,"offset":18477},"end":{"line":719,"column":144,"offset":18620}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    let max = 0;\n    for (let i = 1; i < prices.length; i++) {\n        if (prices[i] > prices[i - 1]) {\n            max += prices[i] - prices[i - 1];\n        }\n    }\n    return max;\n};\n"}],"position":{"start":{"line":721,"column":1,"offset":18622},"end":{"line":735,"column":4,"offset":18916}}}],"position":{"start":{"line":721,"column":1,"offset":18622},"end":{"line":735,"column":4,"offset":18916}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":737,"column":1,"offset":18918},"end":{"line":737,"column":4,"offset":18921}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":739,"column":1,"offset":18923},"end":{"line":741,"column":10,"offset":18965}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":741,"column":10,"offset":18965},"end":{"line":741,"column":40,"offset":18995}}}],"position":{"start":{"line":741,"column":10,"offset":18965},"end":{"line":741,"column":40,"offset":18995}}},{"type":"text","value":"\n\"Dynamic Programming\": ","position":{"start":{"line":741,"column":40,"offset":18995},"end":{"line":742,"column":24,"offset":19019}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/dynamic-programming"},"children":[{"type":"text","value":"https://leetcode.com/tag/dynamic-programming","position":{"start":{"line":742,"column":24,"offset":19019},"end":{"line":742,"column":68,"offset":19063}}}],"position":{"start":{"line":742,"column":24,"offset":19019},"end":{"line":742,"column":68,"offset":19063}}},{"type":"text","value":"\nSimilar Questions:\n\"Best Time to Buy and Sell Stock\": ","position":{"start":{"line":742,"column":68,"offset":19063},"end":{"line":744,"column":36,"offset":19118}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock","position":{"start":{"line":744,"column":36,"offset":19118},"end":{"line":744,"column":97,"offset":19179}}}],"position":{"start":{"line":744,"column":36,"offset":19118},"end":{"line":744,"column":97,"offset":19179}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock II\": ","position":{"start":{"line":744,"column":97,"offset":19179},"end":{"line":745,"column":39,"offset":19218}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii","position":{"start":{"line":745,"column":39,"offset":19218},"end":{"line":745,"column":103,"offset":19282}}}],"position":{"start":{"line":745,"column":39,"offset":19218},"end":{"line":745,"column":103,"offset":19282}}},{"type":"text","value":"\n\"Best Time to Buy and Sell Stock IV\": ","position":{"start":{"line":745,"column":103,"offset":19282},"end":{"line":746,"column":39,"offset":19321}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv","position":{"start":{"line":746,"column":39,"offset":19321},"end":{"line":746,"column":103,"offset":19385}}}],"position":{"start":{"line":746,"column":39,"offset":19321},"end":{"line":746,"column":103,"offset":19385}}},{"type":"text","value":"\n\"Maximum Sum of 3 Non-Overlapping Subarrays\": ","position":{"start":{"line":746,"column":103,"offset":19385},"end":{"line":747,"column":47,"offset":19432}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays"},"children":[{"type":"text","value":"https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays","position":{"start":{"line":747,"column":47,"offset":19432},"end":{"line":747,"column":119,"offset":19504}}}],"position":{"start":{"line":747,"column":47,"offset":19432},"end":{"line":747,"column":119,"offset":19504}}}],"position":{"start":{"line":739,"column":1,"offset":18923},"end":{"line":747,"column":119,"offset":19504}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":749,"column":1,"offset":19506},"end":{"line":749,"column":4,"offset":19509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#123-best-time-to-buy-and-sell-stock-iiihttpsleetcodecomproblemsbest-time-to-buy-and-sell-stock-iiidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":751,"column":2,"offset":19512},"end":{"line":751,"column":142,"offset":19652}}}],"position":{"start":{"line":751,"column":1,"offset":19511},"end":{"line":751,"column":255,"offset":19765}}}],"position":{"start":{"line":751,"column":1,"offset":19511},"end":{"line":751,"column":255,"offset":19765}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":753,"column":4,"offset":19770},"end":{"line":753,"column":6,"offset":19772}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/"},"children":[{"type":"text","value":"123. Best Time to Buy and Sell Stock III","position":{"start":{"line":753,"column":7,"offset":19773},"end":{"line":753,"column":47,"offset":19813}}}],"position":{"start":{"line":753,"column":6,"offset":19772},"end":{"line":753,"column":128,"offset":19894}}}],"position":{"start":{"line":753,"column":1,"offset":19767},"end":{"line":753,"column":128,"offset":19894}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":755,"column":5,"offset":19900},"end":{"line":755,"column":13,"offset":19908}}}],"position":{"start":{"line":755,"column":1,"offset":19896},"end":{"line":755,"column":13,"offset":19908}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Say you have an array for which the ","position":{"start":{"line":757,"column":1,"offset":19910},"end":{"line":757,"column":37,"offset":19946}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":757,"column":38,"offset":19947},"end":{"line":757,"column":39,"offset":19948}}}],"position":{"start":{"line":757,"column":37,"offset":19946},"end":{"line":757,"column":40,"offset":19949}}},{"type":"text","value":"th element is the price of a given stock on day ","position":{"start":{"line":757,"column":40,"offset":19949},"end":{"line":757,"column":88,"offset":19997}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"i","position":{"start":{"line":757,"column":89,"offset":19998},"end":{"line":757,"column":90,"offset":19999}}}],"position":{"start":{"line":757,"column":88,"offset":19997},"end":{"line":757,"column":91,"offset":20000}}},{"type":"text","value":".","position":{"start":{"line":757,"column":91,"offset":20000},"end":{"line":757,"column":92,"offset":20001}}}],"position":{"start":{"line":757,"column":1,"offset":19910},"end":{"line":757,"column":92,"offset":20001}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Design an algorithm to find the maximum profit. You may complete at most ","position":{"start":{"line":759,"column":1,"offset":20003},"end":{"line":759,"column":74,"offset":20076}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"two","position":{"start":{"line":759,"column":75,"offset":20077},"end":{"line":759,"column":78,"offset":20080}}}],"position":{"start":{"line":759,"column":74,"offset":20076},"end":{"line":759,"column":79,"offset":20081}}},{"type":"text","value":" transactions.","position":{"start":{"line":759,"column":79,"offset":20081},"end":{"line":759,"column":93,"offset":20095}}}],"position":{"start":{"line":759,"column":1,"offset":20003},"end":{"line":759,"column":93,"offset":20095}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":761,"column":3,"offset":20099},"end":{"line":761,"column":8,"offset":20104}}}],"position":{"start":{"line":761,"column":1,"offset":20097},"end":{"line":761,"column":10,"offset":20106}}},{"type":"text","value":"You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).","position":{"start":{"line":761,"column":10,"offset":20106},"end":{"line":761,"column":124,"offset":20220}}}],"position":{"start":{"line":761,"column":1,"offset":20097},"end":{"line":761,"column":124,"offset":20220}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":763,"column":3,"offset":20224},"end":{"line":763,"column":13,"offset":20234}}}],"position":{"start":{"line":763,"column":1,"offset":20222},"end":{"line":763,"column":15,"offset":20236}}}],"position":{"start":{"line":763,"column":1,"offset":20222},"end":{"line":763,"column":15,"offset":20236}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [3,3,5,0,0,3,1,4]\nOutput: 6\nExplanation: Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n             Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.\n"}],"position":{"start":{"line":765,"column":1,"offset":20238},"end":{"line":770,"column":4,"offset":20459}}}],"position":{"start":{"line":765,"column":1,"offset":20238},"end":{"line":770,"column":4,"offset":20459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":772,"column":3,"offset":20463},"end":{"line":772,"column":13,"offset":20473}}}],"position":{"start":{"line":772,"column":1,"offset":20461},"end":{"line":772,"column":15,"offset":20475}}}],"position":{"start":{"line":772,"column":1,"offset":20461},"end":{"line":772,"column":15,"offset":20475}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3,4,5]\nOutput: 4\nExplanation: Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n             Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n             engaging multiple transactions at the same time. You must sell before buying again.\n"}],"position":{"start":{"line":774,"column":1,"offset":20477},"end":{"line":781,"column":4,"offset":20791}}}],"position":{"start":{"line":774,"column":1,"offset":20477},"end":{"line":781,"column":4,"offset":20791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":783,"column":3,"offset":20795},"end":{"line":783,"column":13,"offset":20805}}}],"position":{"start":{"line":783,"column":1,"offset":20793},"end":{"line":783,"column":15,"offset":20807}}}],"position":{"start":{"line":783,"column":1,"offset":20793},"end":{"line":783,"column":15,"offset":20807}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [7,6,4,3,1]\nOutput: 0\nExplanation: In this case, no transaction is done, i.e. max profit = 0.\n"}],"position":{"start":{"line":785,"column":1,"offset":20809},"end":{"line":789,"column":4,"offset":20917}}}],"position":{"start":{"line":785,"column":1,"offset":20809},"end":{"line":789,"column":4,"offset":20917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":791,"column":5,"offset":20923},"end":{"line":791,"column":14,"offset":20932}}}],"position":{"start":{"line":791,"column":1,"offset":20919},"end":{"line":791,"column":14,"offset":20932}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Multiple transactions may not be engaged in at the same time. That means if we view the days that involed in the same transaction as a group, there won't be any intersection. We may complete at most ","position":{"start":{"line":793,"column":1,"offset":20934},"end":{"line":793,"column":200,"offset":21133}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"two","position":{"start":{"line":793,"column":201,"offset":21134},"end":{"line":793,"column":204,"offset":21137}}}],"position":{"start":{"line":793,"column":200,"offset":21133},"end":{"line":793,"column":205,"offset":21138}}},{"type":"text","value":" transactions, so divide the days into two groups, ","position":{"start":{"line":793,"column":205,"offset":21138},"end":{"line":793,"column":256,"offset":21189}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0...k]"}],"position":{"start":{"line":793,"column":256,"offset":21189},"end":{"line":793,"column":265,"offset":21198}}},{"type":"text","value":" and ","position":{"start":{"line":793,"column":265,"offset":21198},"end":{"line":793,"column":270,"offset":21203}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[k...n-1]"}],"position":{"start":{"line":793,"column":270,"offset":21203},"end":{"line":793,"column":281,"offset":21214}}},{"type":"text","value":". Notice ","position":{"start":{"line":793,"column":281,"offset":21214},"end":{"line":793,"column":290,"offset":21223}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"k"}],"position":{"start":{"line":793,"column":290,"offset":21223},"end":{"line":793,"column":293,"offset":21226}}},{"type":"text","value":" exists in both groups because technically we can sell out then immediately buy in at the same day.","position":{"start":{"line":793,"column":293,"offset":21226},"end":{"line":793,"column":392,"offset":21325}}}],"position":{"start":{"line":793,"column":1,"offset":20934},"end":{"line":793,"column":392,"offset":21325}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":795,"column":1,"offset":21327},"end":{"line":795,"column":8,"offset":21334}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1(i)"}],"position":{"start":{"line":795,"column":8,"offset":21334},"end":{"line":795,"column":15,"offset":21341}}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":795,"column":15,"offset":21341},"end":{"line":795,"column":44,"offset":21370}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0...i]"}],"position":{"start":{"line":795,"column":44,"offset":21370},"end":{"line":795,"column":53,"offset":21379}}},{"type":"text","value":". This is just like the problem of ","position":{"start":{"line":795,"column":53,"offset":21379},"end":{"line":795,"column":88,"offset":21414}}},{"type":"element","tagName":"a","properties":{"href":"./121.%20Best%20Time%20to%20Buy%20and%20Sell%20Stock.md"},"children":[{"type":"text","value":"121. Best Time to Buy and Sell Stock","position":{"start":{"line":795,"column":89,"offset":21415},"end":{"line":795,"column":125,"offset":21451}}}],"position":{"start":{"line":795,"column":88,"offset":21414},"end":{"line":795,"column":183,"offset":21509}}},{"type":"text","value":".","position":{"start":{"line":795,"column":183,"offset":21509},"end":{"line":795,"column":184,"offset":21510}}}],"position":{"start":{"line":795,"column":1,"offset":21327},"end":{"line":795,"column":184,"offset":21510}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1(0) = 0\np1(i) = max( p1(i-1), prices[i] - min(prices[0], ..., prices[i-1]) ), 0 < i <= n-1\n"}],"position":{"start":{"line":797,"column":1,"offset":21512},"end":{"line":800,"column":4,"offset":21612}}}],"position":{"start":{"line":797,"column":1,"offset":21512},"end":{"line":800,"column":4,"offset":21612}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":802,"column":1,"offset":21614},"end":{"line":802,"column":8,"offset":21621}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p2(i)"}],"position":{"start":{"line":802,"column":8,"offset":21621},"end":{"line":802,"column":15,"offset":21628}}},{"type":"text","value":" to be the max profit of day ","position":{"start":{"line":802,"column":15,"offset":21628},"end":{"line":802,"column":44,"offset":21657}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[i...n-1]"}],"position":{"start":{"line":802,"column":44,"offset":21657},"end":{"line":802,"column":55,"offset":21668}}},{"type":"text","value":". This is the mirror of ","position":{"start":{"line":802,"column":55,"offset":21668},"end":{"line":802,"column":79,"offset":21692}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1"}],"position":{"start":{"line":802,"column":79,"offset":21692},"end":{"line":802,"column":83,"offset":21696}}},{"type":"text","value":".","position":{"start":{"line":802,"column":83,"offset":21696},"end":{"line":802,"column":84,"offset":21697}}}],"position":{"start":{"line":802,"column":1,"offset":21614},"end":{"line":802,"column":84,"offset":21697}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p2(n-1) = 0\np2(i) = max( p2(i+1), max(prices[i], ..., prices[n-1]) - prices[i] ), n-1 > i >= 0\n"}],"position":{"start":{"line":804,"column":1,"offset":21699},"end":{"line":807,"column":4,"offset":21801}}}],"position":{"start":{"line":804,"column":1,"offset":21699},"end":{"line":807,"column":4,"offset":21801}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define ","position":{"start":{"line":809,"column":1,"offset":21803},"end":{"line":809,"column":8,"offset":21810}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"f(k)"}],"position":{"start":{"line":809,"column":8,"offset":21810},"end":{"line":809,"column":14,"offset":21816}}},{"type":"text","value":" to be ","position":{"start":{"line":809,"column":14,"offset":21816},"end":{"line":809,"column":21,"offset":21823}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"p1(k) + p2(k)"}],"position":{"start":{"line":809,"column":21,"offset":21823},"end":{"line":809,"column":36,"offset":21838}}},{"type":"text","value":". We need to get ","position":{"start":{"line":809,"column":36,"offset":21838},"end":{"line":809,"column":53,"offset":21855}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"max( f(0), ..., f(n-1) )"}],"position":{"start":{"line":809,"column":53,"offset":21855},"end":{"line":809,"column":79,"offset":21881}}},{"type":"text","value":".","position":{"start":{"line":809,"column":79,"offset":21881},"end":{"line":809,"column":80,"offset":21882}}}],"position":{"start":{"line":809,"column":1,"offset":21803},"end":{"line":809,"column":80,"offset":21882}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {number[]} prices\n * @return {number}\n */\nlet maxProfit = function (prices) {\n    const len = prices.length;\n    if (len <= 1) {\n        return 0;\n    }\n\n    const dp = [0];\n\n    let min = prices[0];\n    for (let i = 1; i < len; i++) {\n        dp[i] = Math.max(dp[i - 1], prices[i] - min);\n        min = Math.min(prices[i], min);\n    }\n\n    let p2 = 0;\n    let max = prices[len - 1];\n    for (let i = len - 2; i >= 0; i--) {\n        max = Math.max(prices[i], max);\n        p2 = Math.max(p2, max - prices[i]);\n        dp[i] += p2;\n    }\n\n    return Math.max(...dp);\n};\n"}],"position":{"start":{"line":811,"column":1,"offset":21884},"end":{"line":840,"column":4,"offset":22483}}}],"position":{"start":{"line":811,"column":1,"offset":21884},"end":{"line":840,"column":4,"offset":22483}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":842,"column":1,"offset":22485},"end":{"line":842,"column":4,"offset":22488}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":844,"column":1,"offset":22490},"end":{"line":846,"column":9,"offset":22531}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":846,"column":9,"offset":22531},"end":{"line":846,"column":38,"offset":22560}}}],"position":{"start":{"line":846,"column":9,"offset":22531},"end":{"line":846,"column":38,"offset":22560}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":846,"column":38,"offset":22560},"end":{"line":847,"column":23,"offset":22583}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":847,"column":23,"offset":22583},"end":{"line":847,"column":66,"offset":22626}}}],"position":{"start":{"line":847,"column":23,"offset":22583},"end":{"line":847,"column":66,"offset":22626}}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":847,"column":66,"offset":22626},"end":{"line":849,"column":13,"offset":22658}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/path-sum"},"children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":849,"column":13,"offset":22658},"end":{"line":849,"column":51,"offset":22696}}}],"position":{"start":{"line":849,"column":13,"offset":22658},"end":{"line":849,"column":51,"offset":22696}}},{"type":"text","value":"\n\"Sum Root to Leaf Numbers\": ","position":{"start":{"line":849,"column":51,"offset":22696},"end":{"line":850,"column":29,"offset":22725}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/sum-root-to-leaf-numbers"},"children":[{"type":"text","value":"https://leetcode.com/problems/sum-root-to-leaf-numbers","position":{"start":{"line":850,"column":29,"offset":22725},"end":{"line":850,"column":83,"offset":22779}}}],"position":{"start":{"line":850,"column":29,"offset":22725},"end":{"line":850,"column":83,"offset":22779}}},{"type":"text","value":"\n\"Path Sum IV\": ","position":{"start":{"line":850,"column":83,"offset":22779},"end":{"line":851,"column":16,"offset":22795}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/path-sum-iv"},"children":[{"type":"text","value":"https://leetcode.com/problems/path-sum-iv","position":{"start":{"line":851,"column":16,"offset":22795},"end":{"line":851,"column":57,"offset":22836}}}],"position":{"start":{"line":851,"column":16,"offset":22795},"end":{"line":851,"column":57,"offset":22836}}},{"type":"text","value":"\n\"Longest Univalue Path\": ","position":{"start":{"line":851,"column":57,"offset":22836},"end":{"line":852,"column":26,"offset":22862}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/longest-univalue-path"},"children":[{"type":"text","value":"https://leetcode.com/problems/longest-univalue-path","position":{"start":{"line":852,"column":26,"offset":22862},"end":{"line":852,"column":77,"offset":22913}}}],"position":{"start":{"line":852,"column":26,"offset":22862},"end":{"line":852,"column":77,"offset":22913}}}],"position":{"start":{"line":844,"column":1,"offset":22490},"end":{"line":852,"column":77,"offset":22913}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":854,"column":1,"offset":22915},"end":{"line":854,"column":4,"offset":22918}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#124-binary-tree-maximum-path-sumhttpsleetcodecomproblemsbinary-tree-maximum-path-sumdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":856,"column":2,"offset":22921},"end":{"line":856,"column":142,"offset":23061}}}],"position":{"start":{"line":856,"column":1,"offset":22920},"end":{"line":856,"column":241,"offset":23160}}}],"position":{"start":{"line":856,"column":1,"offset":22920},"end":{"line":856,"column":241,"offset":23160}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":858,"column":4,"offset":23165},"end":{"line":858,"column":6,"offset":23167}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-maximum-path-sum/description/"},"children":[{"type":"text","value":"124. Binary Tree Maximum Path Sum","position":{"start":{"line":858,"column":7,"offset":23168},"end":{"line":858,"column":40,"offset":23201}}}],"position":{"start":{"line":858,"column":6,"offset":23167},"end":{"line":858,"column":114,"offset":23275}}}],"position":{"start":{"line":858,"column":1,"offset":23162},"end":{"line":858,"column":114,"offset":23275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":860,"column":5,"offset":23281},"end":{"line":860,"column":13,"offset":23289}}}],"position":{"start":{"line":860,"column":1,"offset":23277},"end":{"line":860,"column":13,"offset":23289}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a ","position":{"start":{"line":862,"column":1,"offset":23291},"end":{"line":862,"column":9,"offset":23299}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"non-empty","position":{"start":{"line":862,"column":11,"offset":23301},"end":{"line":862,"column":20,"offset":23310}}}],"position":{"start":{"line":862,"column":9,"offset":23299},"end":{"line":862,"column":22,"offset":23312}}},{"type":"text","value":" binary tree, find the maximum path sum.","position":{"start":{"line":862,"column":22,"offset":23312},"end":{"line":862,"column":62,"offset":23352}}}],"position":{"start":{"line":862,"column":1,"offset":23291},"end":{"line":862,"column":62,"offset":23352}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain ","position":{"start":{"line":864,"column":1,"offset":23354},"end":{"line":864,"column":168,"offset":23521}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"at least one node","position":{"start":{"line":864,"column":170,"offset":23523},"end":{"line":864,"column":187,"offset":23540}}}],"position":{"start":{"line":864,"column":168,"offset":23521},"end":{"line":864,"column":189,"offset":23542}}},{"type":"text","value":" and does not need to go through the root.","position":{"start":{"line":864,"column":189,"offset":23542},"end":{"line":864,"column":231,"offset":23584}}}],"position":{"start":{"line":864,"column":1,"offset":23354},"end":{"line":864,"column":231,"offset":23584}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":866,"column":3,"offset":23588},"end":{"line":866,"column":13,"offset":23598}}}],"position":{"start":{"line":866,"column":1,"offset":23586},"end":{"line":866,"column":15,"offset":23600}}}],"position":{"start":{"line":866,"column":1,"offset":23586},"end":{"line":866,"column":15,"offset":23600}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3]\n\n       1\n      / \\\n     2   3\n\nOutput: 6\n"}],"position":{"start":{"line":868,"column":1,"offset":23602},"end":{"line":877,"column":4,"offset":23667}}}],"position":{"start":{"line":868,"column":1,"offset":23602},"end":{"line":877,"column":4,"offset":23667}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":879,"column":3,"offset":23671},"end":{"line":879,"column":13,"offset":23681}}}],"position":{"start":{"line":879,"column":1,"offset":23669},"end":{"line":879,"column":15,"offset":23683}}}],"position":{"start":{"line":879,"column":1,"offset":23669},"end":{"line":879,"column":15,"offset":23683}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [-10,9,20,null,null,15,7]\n\n   -10\n   / \\\n  9  20\n    /  \\\n   15   7\n\nOutput: 42\n"}],"position":{"start":{"line":881,"column":1,"offset":23685},"end":{"line":892,"column":4,"offset":23780}}}],"position":{"start":{"line":881,"column":1,"offset":23685},"end":{"line":892,"column":4,"offset":23780}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":894,"column":5,"offset":23786},"end":{"line":894,"column":14,"offset":23795}}}],"position":{"start":{"line":894,"column":1,"offset":23782},"end":{"line":894,"column":14,"offset":23795}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For every ","position":{"start":{"line":896,"column":1,"offset":23797},"end":{"line":896,"column":11,"offset":23807}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node"}],"position":{"start":{"line":896,"column":11,"offset":23807},"end":{"line":896,"column":17,"offset":23813}}},{"type":"text","value":", there are six possible ways to get the max path sum:","position":{"start":{"line":896,"column":17,"offset":23813},"end":{"line":896,"column":71,"offset":23867}}}],"position":{"start":{"line":896,"column":1,"offset":23797},"end":{"line":896,"column":71,"offset":23867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"With ","position":{"start":{"line":898,"column":5,"offset":23873},"end":{"line":898,"column":10,"offset":23878}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":898,"column":10,"offset":23878},"end":{"line":898,"column":20,"offset":23888}}}],"position":{"start":{"line":898,"column":5,"offset":23873},"end":{"line":898,"column":20,"offset":23888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":899,"column":8,"offset":23896},"end":{"line":899,"column":18,"offset":23906}}},{"type":"text","value":" plus the max sum of a path that ends with ","position":{"start":{"line":899,"column":18,"offset":23906},"end":{"line":899,"column":61,"offset":23949}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.left"}],"position":{"start":{"line":899,"column":61,"offset":23949},"end":{"line":899,"column":72,"offset":23960}}},{"type":"text","value":".","position":{"start":{"line":899,"column":72,"offset":23960},"end":{"line":899,"column":73,"offset":23961}}}],"position":{"start":{"line":899,"column":5,"offset":23893},"end":{"line":899,"column":73,"offset":23961}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":900,"column":8,"offset":23969},"end":{"line":900,"column":18,"offset":23979}}},{"type":"text","value":" plus the max sum of a path that starts with ","position":{"start":{"line":900,"column":18,"offset":23979},"end":{"line":900,"column":63,"offset":24024}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.right"}],"position":{"start":{"line":900,"column":63,"offset":24024},"end":{"line":900,"column":75,"offset":24036}}},{"type":"text","value":".","position":{"start":{"line":900,"column":75,"offset":24036},"end":{"line":900,"column":76,"offset":24037}}}],"position":{"start":{"line":900,"column":5,"offset":23966},"end":{"line":900,"column":76,"offset":24037}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":901,"column":8,"offset":24045},"end":{"line":901,"column":18,"offset":24055}}},{"type":"text","value":" plus the max sum of both paths.","position":{"start":{"line":901,"column":18,"offset":24055},"end":{"line":901,"column":50,"offset":24087}}}],"position":{"start":{"line":901,"column":5,"offset":24042},"end":{"line":901,"column":50,"offset":24087}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Just ","position":{"start":{"line":902,"column":8,"offset":24095},"end":{"line":902,"column":13,"offset":24100}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":902,"column":13,"offset":24100},"end":{"line":902,"column":23,"offset":24110}}},{"type":"text","value":" (the max sum of both paths are negative).","position":{"start":{"line":902,"column":23,"offset":24110},"end":{"line":902,"column":65,"offset":24152}}}],"position":{"start":{"line":902,"column":5,"offset":24092},"end":{"line":902,"column":65,"offset":24152}}},{"type":"text","value":"\n"}],"position":{"start":{"line":899,"column":5,"offset":23893},"end":{"line":902,"column":65,"offset":24152}}},{"type":"text","value":"\n"}],"position":{"start":{"line":898,"column":1,"offset":23869},"end":{"line":902,"column":65,"offset":24152}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Without","position":{"start":{"line":903,"column":5,"offset":24157},"end":{"line":903,"column":12,"offset":24164}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.val"}],"position":{"start":{"line":903,"column":12,"offset":24164},"end":{"line":903,"column":22,"offset":24174}}},{"type":"text","value":" (disconnected)","position":{"start":{"line":903,"column":22,"offset":24174},"end":{"line":903,"column":37,"offset":24189}}}],"position":{"start":{"line":903,"column":5,"offset":24157},"end":{"line":903,"column":37,"offset":24189}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":904,"column":8,"offset":24197},"end":{"line":904,"column":48,"offset":24237}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.left"}],"position":{"start":{"line":904,"column":48,"offset":24237},"end":{"line":904,"column":59,"offset":24248}}},{"type":"text","value":" subtree.","position":{"start":{"line":904,"column":59,"offset":24248},"end":{"line":904,"column":68,"offset":24257}}}],"position":{"start":{"line":904,"column":5,"offset":24194},"end":{"line":904,"column":68,"offset":24257}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The max-sum path is somewhere under the ","position":{"start":{"line":905,"column":8,"offset":24265},"end":{"line":905,"column":48,"offset":24305}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"node.right"}],"position":{"start":{"line":905,"column":48,"offset":24305},"end":{"line":905,"column":60,"offset":24317}}},{"type":"text","value":" subtree.","position":{"start":{"line":905,"column":60,"offset":24317},"end":{"line":905,"column":69,"offset":24326}}}],"position":{"start":{"line":905,"column":5,"offset":24262},"end":{"line":905,"column":69,"offset":24326}}},{"type":"text","value":"\n"}],"position":{"start":{"line":904,"column":5,"offset":24194},"end":{"line":905,"column":69,"offset":24326}}},{"type":"text","value":"\n"}],"position":{"start":{"line":903,"column":1,"offset":24153},"end":{"line":905,"column":69,"offset":24326}}},{"type":"text","value":"\n"}],"position":{"start":{"line":898,"column":1,"offset":23869},"end":{"line":905,"column":69,"offset":24326}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"There are two ways to implement this.","position":{"start":{"line":907,"column":1,"offset":24328},"end":{"line":907,"column":38,"offset":24365}}}],"position":{"start":{"line":907,"column":1,"offset":24328},"end":{"line":907,"column":38,"offset":24365}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":909,"column":6,"offset":24372},"end":{"line":909,"column":9,"offset":24375}}}],"position":{"start":{"line":909,"column":1,"offset":24367},"end":{"line":909,"column":9,"offset":24375}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Define a function that returns two values. The max sum of a path that may or may not end with ","position":{"start":{"line":911,"column":1,"offset":24377},"end":{"line":911,"column":95,"offset":24471}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":911,"column":95,"offset":24471},"end":{"line":911,"column":101,"offset":24477}}},{"type":"text","value":" node, and the max sum of the path that ends with ","position":{"start":{"line":911,"column":101,"offset":24477},"end":{"line":911,"column":151,"offset":24527}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":911,"column":151,"offset":24527},"end":{"line":911,"column":157,"offset":24533}}},{"type":"text","value":" node.","position":{"start":{"line":911,"column":157,"offset":24533},"end":{"line":911,"column":163,"offset":24539}}}],"position":{"start":{"line":911,"column":1,"offset":24377},"end":{"line":911,"column":163,"offset":24539}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    return Math.max(..._maxPathSum(root));\n};\n\n/**\n * @param {TreeNode} root\n * @return {number[]}\n */\nfunction _maxPathSum(root) {\n    if (!root) {\n        return [-Infinity, -Infinity];\n    }\n\n    const left = _maxPathSum(root.left);\n    const right = _maxPathSum(root.right);\n    return [Math.max(left[0], right[0], root.val + Math.max(0, left[1], right[1], left[1] + right[1])), Math.max(left[1], right[1], 0) + root.val];\n}\n"}],"position":{"start":{"line":913,"column":1,"offset":24541},"end":{"line":942,"column":4,"offset":25216}}}],"position":{"start":{"line":913,"column":1,"offset":24541},"end":{"line":942,"column":4,"offset":25216}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":944,"column":6,"offset":25223},"end":{"line":944,"column":9,"offset":25226}}}],"position":{"start":{"line":944,"column":1,"offset":25218},"end":{"line":944,"column":9,"offset":25226}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Just return the later (max sum of a path that ends with ","position":{"start":{"line":946,"column":1,"offset":25228},"end":{"line":946,"column":57,"offset":25284}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":946,"column":57,"offset":25284},"end":{"line":946,"column":63,"offset":25290}}},{"type":"text","value":"). Maintain a global variable to store the disconnected max sum.","position":{"start":{"line":946,"column":63,"offset":25290},"end":{"line":946,"column":127,"offset":25354}}}],"position":{"start":{"line":946,"column":1,"offset":25228},"end":{"line":946,"column":127,"offset":25354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet maxPathSum = function (root) {\n    const global = { max: -Infinity };\n    _maxPathSum(root, global);\n    return global.max;\n};\n\n/**\n * @param {TreeNode} root\n * @param {object} global\n * @param {number} global.max\n * @return {number[]}\n */\nfunction _maxPathSum(root, global) {\n    if (!root) {\n        return -Infinity;\n    }\n\n    const left = _maxPathSum(root.left, global);\n    const right = _maxPathSum(root.right, global);\n    const localMax = Math.max(left, right, 0) + root.val;\n    global.max = Math.max(global.max, localMax, root.val + left + right);\n    return localMax;\n}\n"}],"position":{"start":{"line":948,"column":1,"offset":25356},"end":{"line":983,"column":4,"offset":26153}}}],"position":{"start":{"line":948,"column":1,"offset":25356},"end":{"line":983,"column":4,"offset":26153}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":985,"column":1,"offset":26155},"end":{"line":985,"column":4,"offset":26158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Easy\nRelated Topics:\n\"Two Pointers\": ","position":{"start":{"line":987,"column":1,"offset":26160},"end":{"line":989,"column":17,"offset":26209}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/two-pointers"},"children":[{"type":"text","value":"https://leetcode.com/tag/two-pointers","position":{"start":{"line":989,"column":17,"offset":26209},"end":{"line":989,"column":54,"offset":26246}}}],"position":{"start":{"line":989,"column":17,"offset":26209},"end":{"line":989,"column":54,"offset":26246}}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":989,"column":54,"offset":26246},"end":{"line":990,"column":11,"offset":26257}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/string"},"children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":990,"column":11,"offset":26257},"end":{"line":990,"column":42,"offset":26288}}}],"position":{"start":{"line":990,"column":11,"offset":26257},"end":{"line":990,"column":42,"offset":26288}}},{"type":"text","value":"\nSimilar Questions:\n\"Palindrome Linked List\": ","position":{"start":{"line":990,"column":42,"offset":26288},"end":{"line":992,"column":27,"offset":26334}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/palindrome-linked-list"},"children":[{"type":"text","value":"https://leetcode.com/problems/palindrome-linked-list","position":{"start":{"line":992,"column":27,"offset":26334},"end":{"line":992,"column":79,"offset":26386}}}],"position":{"start":{"line":992,"column":27,"offset":26334},"end":{"line":992,"column":79,"offset":26386}}},{"type":"text","value":"\n\"Valid Palindrome II\": ","position":{"start":{"line":992,"column":79,"offset":26386},"end":{"line":993,"column":24,"offset":26410}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/valid-palindrome-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/valid-palindrome-ii","position":{"start":{"line":993,"column":24,"offset":26410},"end":{"line":993,"column":73,"offset":26459}}}],"position":{"start":{"line":993,"column":24,"offset":26410},"end":{"line":993,"column":73,"offset":26459}}}],"position":{"start":{"line":987,"column":1,"offset":26160},"end":{"line":993,"column":73,"offset":26459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":995,"column":1,"offset":26461},"end":{"line":995,"column":4,"offset":26464}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#125-valid-palindromehttpsleetcodecomproblemsvalid-palindromedescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":997,"column":2,"offset":26467},"end":{"line":997,"column":142,"offset":26607}}}],"position":{"start":{"line":997,"column":1,"offset":26466},"end":{"line":997,"column":217,"offset":26682}}}],"position":{"start":{"line":997,"column":1,"offset":26466},"end":{"line":997,"column":217,"offset":26682}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":999,"column":4,"offset":26687},"end":{"line":999,"column":6,"offset":26689}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/valid-palindrome/description/"},"children":[{"type":"text","value":"125. Valid Palindrome","position":{"start":{"line":999,"column":7,"offset":26690},"end":{"line":999,"column":28,"offset":26711}}}],"position":{"start":{"line":999,"column":6,"offset":26689},"end":{"line":999,"column":90,"offset":26773}}}],"position":{"start":{"line":999,"column":1,"offset":26684},"end":{"line":999,"column":90,"offset":26773}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1001,"column":5,"offset":26779},"end":{"line":1001,"column":13,"offset":26787}}}],"position":{"start":{"line":1001,"column":1,"offset":26775},"end":{"line":1001,"column":13,"offset":26787}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.","position":{"start":{"line":1003,"column":1,"offset":26789},"end":{"line":1003,"column":110,"offset":26898}}}],"position":{"start":{"line":1003,"column":1,"offset":26789},"end":{"line":1003,"column":110,"offset":26898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1005,"column":3,"offset":26902},"end":{"line":1005,"column":8,"offset":26907}}}],"position":{"start":{"line":1005,"column":1,"offset":26900},"end":{"line":1005,"column":10,"offset":26909}}},{"type":"text","value":" For the purpose of this problem, we define empty string as valid palindrome.","position":{"start":{"line":1005,"column":10,"offset":26909},"end":{"line":1005,"column":87,"offset":26986}}}],"position":{"start":{"line":1005,"column":1,"offset":26900},"end":{"line":1005,"column":87,"offset":26986}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1007,"column":3,"offset":26990},"end":{"line":1007,"column":13,"offset":27000}}}],"position":{"start":{"line":1007,"column":1,"offset":26988},"end":{"line":1007,"column":15,"offset":27002}}}],"position":{"start":{"line":1007,"column":1,"offset":26988},"end":{"line":1007,"column":15,"offset":27002}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: \"A man, a plan, a canal: Panama\"\nOutput: true\n"}],"position":{"start":{"line":1009,"column":1,"offset":27004},"end":{"line":1013,"column":4,"offset":27065}}}],"position":{"start":{"line":1009,"column":1,"offset":27004},"end":{"line":1013,"column":4,"offset":27065}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1015,"column":3,"offset":27069},"end":{"line":1015,"column":13,"offset":27079}}}],"position":{"start":{"line":1015,"column":1,"offset":27067},"end":{"line":1015,"column":15,"offset":27081}}}],"position":{"start":{"line":1015,"column":1,"offset":27067},"end":{"line":1015,"column":15,"offset":27081}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: \"race a car\"\nOutput: false\n"}],"position":{"start":{"line":1017,"column":1,"offset":27083},"end":{"line":1021,"column":4,"offset":27125}}}],"position":{"start":{"line":1017,"column":1,"offset":27083},"end":{"line":1021,"column":4,"offset":27125}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1023,"column":5,"offset":27131},"end":{"line":1023,"column":14,"offset":27140}}}],"position":{"start":{"line":1023,"column":1,"offset":27127},"end":{"line":1023,"column":14,"offset":27140}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"ONE","position":{"start":{"line":1025,"column":6,"offset":27147},"end":{"line":1025,"column":9,"offset":27150}}}],"position":{"start":{"line":1025,"column":1,"offset":27142},"end":{"line":1025,"column":9,"offset":27150}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.toLowerCase().split(/[^a-z0-9]*/);\n    return clean.join('') === clean.reverse().join('');\n};\n"}],"position":{"start":{"line":1027,"column":1,"offset":27152},"end":{"line":1036,"column":4,"offset":27367}}}],"position":{"start":{"line":1027,"column":1,"offset":27152},"end":{"line":1036,"column":4,"offset":27367}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"TWO","position":{"start":{"line":1038,"column":6,"offset":27374},"end":{"line":1038,"column":9,"offset":27377}}}],"position":{"start":{"line":1038,"column":1,"offset":27369},"end":{"line":1038,"column":9,"offset":27377}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Remove non-alphanumeric characters then compare.","position":{"start":{"line":1040,"column":1,"offset":27379},"end":{"line":1040,"column":49,"offset":27427}}}],"position":{"start":{"line":1040,"column":1,"offset":27379},"end":{"line":1040,"column":49,"offset":27427}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    const clean = s.replace(/[^a-zA-Z0-9]/g, '').toLowerCase();\n    for (let i = 0, j = clean.length - 1; i < j; i++, j--) {\n        if (clean[i] !== clean[j]) {\n            return false;\n        }\n    }\n    return true;\n};\n"}],"position":{"start":{"line":1042,"column":1,"offset":27429},"end":{"line":1056,"column":4,"offset":27754}}}],"position":{"start":{"line":1042,"column":1,"offset":27429},"end":{"line":1056,"column":4,"offset":27754}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h4","properties":{},"children":[{"type":"text","value":"THREE","position":{"start":{"line":1058,"column":6,"offset":27761},"end":{"line":1058,"column":11,"offset":27766}}}],"position":{"start":{"line":1058,"column":1,"offset":27756},"end":{"line":1058,"column":11,"offset":27766}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Compare the char codes.","position":{"start":{"line":1060,"column":1,"offset":27768},"end":{"line":1060,"column":24,"offset":27791}}}],"position":{"start":{"line":1060,"column":1,"offset":27768},"end":{"line":1060,"column":24,"offset":27791}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {string} s\n * @return {boolean}\n */\nlet isPalindrome = function (s) {\n    for (let i = 0, j = s.length - 1; i < j; i++, j--) {\n        let left = s.charCodeAt(i);\n        while (i < j && (left < 48 || (left > 57 && left < 65) || (left > 90 && left < 97) || left > 122)) {\n            left = s.charCodeAt(++i);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (left >= 65 && left <= 90) {\n            left += 32;\n        }\n\n        let right = s.charCodeAt(j);\n        while (i < j && (right < 48 || (right > 57 && right < 65) || (right > 90 && right < 97) || right > 122)) {\n            right = s.charCodeAt(--j);\n        }\n        if (i >= j) {\n            return true;\n        }\n        if (right >= 65 && right <= 90) {\n            right += 32;\n        }\n\n        if (left !== right) {\n            return false;\n        }\n    }\n\n    return true;\n};\n"}],"position":{"start":{"line":1062,"column":1,"offset":27793},"end":{"line":1098,"column":4,"offset":28705}}}],"position":{"start":{"line":1062,"column":1,"offset":27793},"end":{"line":1098,"column":4,"offset":28705}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1100,"column":1,"offset":28707},"end":{"line":1100,"column":4,"offset":28710}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1102,"column":1,"offset":28712},"end":{"line":1104,"column":10,"offset":28754}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1104,"column":10,"offset":28754},"end":{"line":1104,"column":40,"offset":28784}}}],"position":{"start":{"line":1104,"column":10,"offset":28754},"end":{"line":1104,"column":40,"offset":28784}}},{"type":"text","value":"\n\"String\": ","position":{"start":{"line":1104,"column":40,"offset":28784},"end":{"line":1105,"column":11,"offset":28795}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/string"},"children":[{"type":"text","value":"https://leetcode.com/tag/string","position":{"start":{"line":1105,"column":11,"offset":28795},"end":{"line":1105,"column":42,"offset":28826}}}],"position":{"start":{"line":1105,"column":11,"offset":28795},"end":{"line":1105,"column":42,"offset":28826}}},{"type":"text","value":"\n\"Backtracking\": ","position":{"start":{"line":1105,"column":42,"offset":28826},"end":{"line":1106,"column":17,"offset":28843}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/backtracking"},"children":[{"type":"text","value":"https://leetcode.com/tag/backtracking","position":{"start":{"line":1106,"column":17,"offset":28843},"end":{"line":1106,"column":54,"offset":28880}}}],"position":{"start":{"line":1106,"column":17,"offset":28843},"end":{"line":1106,"column":54,"offset":28880}}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1106,"column":54,"offset":28880},"end":{"line":1107,"column":25,"offset":28905}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1107,"column":25,"offset":28905},"end":{"line":1107,"column":70,"offset":28950}}}],"position":{"start":{"line":1107,"column":25,"offset":28905},"end":{"line":1107,"column":70,"offset":28950}}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder\": ","position":{"start":{"line":1107,"column":70,"offset":28950},"end":{"line":1109,"column":16,"offset":28985}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder"},"children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder","position":{"start":{"line":1109,"column":16,"offset":28985},"end":{"line":1109,"column":57,"offset":29026}}}],"position":{"start":{"line":1109,"column":16,"offset":28985},"end":{"line":1109,"column":57,"offset":29026}}}],"position":{"start":{"line":1102,"column":1,"offset":28712},"end":{"line":1109,"column":57,"offset":29026}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1111,"column":1,"offset":29028},"end":{"line":1111,"column":4,"offset":29031}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#126-word-ladder-iihttpsleetcodecomproblemsword-ladder-iidescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1113,"column":2,"offset":29034},"end":{"line":1113,"column":142,"offset":29174}}}],"position":{"start":{"line":1113,"column":1,"offset":29033},"end":{"line":1113,"column":213,"offset":29245}}}],"position":{"start":{"line":1113,"column":1,"offset":29033},"end":{"line":1113,"column":213,"offset":29245}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1115,"column":4,"offset":29250},"end":{"line":1115,"column":6,"offset":29252}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder-ii/description/"},"children":[{"type":"text","value":"126. Word Ladder II","position":{"start":{"line":1115,"column":7,"offset":29253},"end":{"line":1115,"column":26,"offset":29272}}}],"position":{"start":{"line":1115,"column":6,"offset":29252},"end":{"line":1115,"column":86,"offset":29332}}}],"position":{"start":{"line":1115,"column":1,"offset":29247},"end":{"line":1115,"column":86,"offset":29332}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1117,"column":5,"offset":29338},"end":{"line":1117,"column":13,"offset":29346}}}],"position":{"start":{"line":1117,"column":1,"offset":29334},"end":{"line":1117,"column":13,"offset":29346}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1119,"column":1,"offset":29348},"end":{"line":1119,"column":18,"offset":29365}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1119,"column":19,"offset":29366},"end":{"line":1119,"column":28,"offset":29375}}}],"position":{"start":{"line":1119,"column":18,"offset":29365},"end":{"line":1119,"column":29,"offset":29376}}},{"type":"text","value":" and ","position":{"start":{"line":1119,"column":29,"offset":29376},"end":{"line":1119,"column":34,"offset":29381}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1119,"column":35,"offset":29382},"end":{"line":1119,"column":42,"offset":29389}}}],"position":{"start":{"line":1119,"column":34,"offset":29381},"end":{"line":1119,"column":43,"offset":29390}}},{"type":"text","value":"), and a dictionary's word list, find all shortest transformation sequence(s) from ","position":{"start":{"line":1119,"column":43,"offset":29390},"end":{"line":1119,"column":126,"offset":29473}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1119,"column":127,"offset":29474},"end":{"line":1119,"column":136,"offset":29483}}}],"position":{"start":{"line":1119,"column":126,"offset":29473},"end":{"line":1119,"column":137,"offset":29484}}},{"type":"text","value":" to ","position":{"start":{"line":1119,"column":137,"offset":29484},"end":{"line":1119,"column":141,"offset":29488}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1119,"column":142,"offset":29489},"end":{"line":1119,"column":149,"offset":29496}}}],"position":{"start":{"line":1119,"column":141,"offset":29488},"end":{"line":1119,"column":150,"offset":29497}}},{"type":"text","value":", such that:","position":{"start":{"line":1119,"column":150,"offset":29497},"end":{"line":1119,"column":162,"offset":29509}}}],"position":{"start":{"line":1119,"column":1,"offset":29348},"end":{"line":1119,"column":162,"offset":29509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Only one letter can be changed at a time","position":{"start":{"line":1121,"column":4,"offset":29514},"end":{"line":1121,"column":44,"offset":29554}}}],"position":{"start":{"line":1121,"column":1,"offset":29511},"end":{"line":1121,"column":44,"offset":29554}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1122,"column":4,"offset":29558},"end":{"line":1122,"column":65,"offset":29619}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1122,"column":66,"offset":29620},"end":{"line":1122,"column":75,"offset":29629}}}],"position":{"start":{"line":1122,"column":65,"offset":29619},"end":{"line":1122,"column":76,"offset":29630}}},{"type":"text","value":" is ","position":{"start":{"line":1122,"column":76,"offset":29630},"end":{"line":1122,"column":80,"offset":29634}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":1122,"column":81,"offset":29635},"end":{"line":1122,"column":84,"offset":29638}}}],"position":{"start":{"line":1122,"column":80,"offset":29634},"end":{"line":1122,"column":85,"offset":29639}}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1122,"column":85,"offset":29639},"end":{"line":1122,"column":105,"offset":29659}}}],"position":{"start":{"line":1122,"column":1,"offset":29555},"end":{"line":1122,"column":105,"offset":29659}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1121,"column":1,"offset":29511},"end":{"line":1122,"column":105,"offset":29659}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1124,"column":3,"offset":29663},"end":{"line":1124,"column":8,"offset":29668}}}],"position":{"start":{"line":1124,"column":1,"offset":29661},"end":{"line":1124,"column":10,"offset":29670}}}],"position":{"start":{"line":1124,"column":1,"offset":29661},"end":{"line":1124,"column":10,"offset":29670}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Return an empty list if there is no such transformation sequence.","position":{"start":{"line":1126,"column":5,"offset":29676},"end":{"line":1126,"column":70,"offset":29741}}}],"position":{"start":{"line":1126,"column":1,"offset":29672},"end":{"line":1126,"column":70,"offset":29741}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1127,"column":5,"offset":29746},"end":{"line":1127,"column":36,"offset":29777}}}],"position":{"start":{"line":1127,"column":1,"offset":29742},"end":{"line":1127,"column":36,"offset":29777}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1128,"column":5,"offset":29782},"end":{"line":1128,"column":60,"offset":29837}}}],"position":{"start":{"line":1128,"column":1,"offset":29778},"end":{"line":1128,"column":60,"offset":29837}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1129,"column":5,"offset":29842},"end":{"line":1129,"column":51,"offset":29888}}}],"position":{"start":{"line":1129,"column":1,"offset":29838},"end":{"line":1129,"column":51,"offset":29888}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1130,"column":5,"offset":29893},"end":{"line":1130,"column":20,"offset":29908}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1130,"column":21,"offset":29909},"end":{"line":1130,"column":30,"offset":29918}}}],"position":{"start":{"line":1130,"column":20,"offset":29908},"end":{"line":1130,"column":31,"offset":29919}}},{"type":"text","value":" and ","position":{"start":{"line":1130,"column":31,"offset":29919},"end":{"line":1130,"column":36,"offset":29924}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1130,"column":37,"offset":29925},"end":{"line":1130,"column":44,"offset":29932}}}],"position":{"start":{"line":1130,"column":36,"offset":29924},"end":{"line":1130,"column":45,"offset":29933}}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1130,"column":45,"offset":29933},"end":{"line":1130,"column":81,"offset":29969}}}],"position":{"start":{"line":1130,"column":1,"offset":29889},"end":{"line":1130,"column":81,"offset":29969}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1126,"column":1,"offset":29672},"end":{"line":1130,"column":81,"offset":29969}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1132,"column":3,"offset":29973},"end":{"line":1132,"column":13,"offset":29983}}}],"position":{"start":{"line":1132,"column":1,"offset":29971},"end":{"line":1132,"column":15,"offset":29985}}}],"position":{"start":{"line":1132,"column":1,"offset":29971},"end":{"line":1132,"column":15,"offset":29985}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput:\n[\n  [\"hit\",\"hot\",\"dot\",\"dog\",\"cog\"],\n  [\"hit\",\"hot\",\"lot\",\"log\",\"cog\"]\n]\n"}],"position":{"start":{"line":1134,"column":1,"offset":29987},"end":{"line":1146,"column":4,"offset":30169}}}],"position":{"start":{"line":1134,"column":1,"offset":29987},"end":{"line":1146,"column":4,"offset":30169}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1148,"column":3,"offset":30173},"end":{"line":1148,"column":13,"offset":30183}}}],"position":{"start":{"line":1148,"column":1,"offset":30171},"end":{"line":1148,"column":15,"offset":30185}}}],"position":{"start":{"line":1148,"column":1,"offset":30171},"end":{"line":1148,"column":15,"offset":30185}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: []\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.\n"}],"position":{"start":{"line":1150,"column":1,"offset":30187},"end":{"line":1160,"column":4,"offset":30381}}}],"position":{"start":{"line":1150,"column":1,"offset":30187},"end":{"line":1160,"column":4,"offset":30381}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1162,"column":5,"offset":30387},"end":{"line":1162,"column":14,"offset":30396}}}],"position":{"start":{"line":1162,"column":1,"offset":30383},"end":{"line":1162,"column":14,"offset":30396}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"This is just like ","position":{"start":{"line":1164,"column":1,"offset":30398},"end":{"line":1164,"column":19,"offset":30416}}},{"type":"element","tagName":"a","properties":{"href":"./127.%20Word%20Ladder"},"children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1164,"column":20,"offset":30417},"end":{"line":1164,"column":36,"offset":30433}}}],"position":{"start":{"line":1164,"column":19,"offset":30416},"end":{"line":1164,"column":61,"offset":30458}}},{"type":"text","value":".","position":{"start":{"line":1164,"column":61,"offset":30458},"end":{"line":1164,"column":62,"offset":30459}}}],"position":{"start":{"line":1164,"column":1,"offset":30398},"end":{"line":1164,"column":62,"offset":30459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The constrain still works, but instead of deleting the words right away, collect them and delete them all when a level ends, so that we can reuse the words (matching different parents in the same level).","position":{"start":{"line":1166,"column":1,"offset":30461},"end":{"line":1166,"column":204,"offset":30664}}}],"position":{"start":{"line":1166,"column":1,"offset":30461},"end":{"line":1166,"column":204,"offset":30664}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The items in the queue are not just words now. Parent nodes are also kept so that we can backtrack the path from the end.","position":{"start":{"line":1168,"column":1,"offset":30666},"end":{"line":1168,"column":122,"offset":30787}}}],"position":{"start":{"line":1168,"column":1,"offset":30666},"end":{"line":1168,"column":122,"offset":30787}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {string[][]}\n */\nfunction findLadders(beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return [];\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    const result = [];\n    let isEndWordFound = false;\n    const levelWords = new Set();\n    const queue = [[beginWord, null], null];\n    while (queue.length > 1) {\n        const node = queue.shift();\n\n        if (node === null) {\n            if (isEndWordFound) {\n                break;\n            }\n            levelWords.forEach((word) => wordList.delete(word));\n            levelWords.clear();\n            queue.push(null);\n            continue;\n        }\n\n        const word = node[0];\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const w = head + ALPHABET[c] + tail;\n                    if (w === endWord) {\n                        const path = [endWord];\n                        for (let n = node; n !== null; n = n[1]) {\n                            path.unshift(n[0]);\n                        }\n                        result.push(path);\n                        isEndWordFound = true;\n                    }\n                    if (wordList.has(w)) {\n                        levelWords.add(w);\n                        queue.push([w, node]);\n                    }\n                }\n            }\n        }\n    }\n\n    return result;\n}\n"}],"position":{"start":{"line":1170,"column":1,"offset":30789},"end":{"line":1230,"column":4,"offset":32471}}}],"position":{"start":{"line":1170,"column":1,"offset":30789},"end":{"line":1230,"column":4,"offset":32471}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1232,"column":1,"offset":32473},"end":{"line":1232,"column":4,"offset":32476}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Breadth-first Search\": ","position":{"start":{"line":1234,"column":1,"offset":32478},"end":{"line":1236,"column":25,"offset":32537}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1236,"column":25,"offset":32537},"end":{"line":1236,"column":70,"offset":32582}}}],"position":{"start":{"line":1236,"column":25,"offset":32537},"end":{"line":1236,"column":70,"offset":32582}}},{"type":"text","value":"\nSimilar Questions:\n\"Word Ladder II\": ","position":{"start":{"line":1236,"column":70,"offset":32582},"end":{"line":1238,"column":19,"offset":32620}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder-ii"},"children":[{"type":"text","value":"https://leetcode.com/problems/word-ladder-ii","position":{"start":{"line":1238,"column":19,"offset":32620},"end":{"line":1238,"column":63,"offset":32664}}}],"position":{"start":{"line":1238,"column":19,"offset":32620},"end":{"line":1238,"column":63,"offset":32664}}},{"type":"text","value":"\n\"Minimum Genetic Mutation\": ","position":{"start":{"line":1238,"column":63,"offset":32664},"end":{"line":1239,"column":29,"offset":32693}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/minimum-genetic-mutation"},"children":[{"type":"text","value":"https://leetcode.com/problems/minimum-genetic-mutation","position":{"start":{"line":1239,"column":29,"offset":32693},"end":{"line":1239,"column":83,"offset":32747}}}],"position":{"start":{"line":1239,"column":29,"offset":32693},"end":{"line":1239,"column":83,"offset":32747}}}],"position":{"start":{"line":1234,"column":1,"offset":32478},"end":{"line":1239,"column":83,"offset":32747}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1241,"column":1,"offset":32749},"end":{"line":1241,"column":4,"offset":32752}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#127-word-ladderhttpsleetcodecomproblemsword-ladderdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1243,"column":2,"offset":32755},"end":{"line":1243,"column":142,"offset":32895}}}],"position":{"start":{"line":1243,"column":1,"offset":32754},"end":{"line":1243,"column":207,"offset":32960}}}],"position":{"start":{"line":1243,"column":1,"offset":32754},"end":{"line":1243,"column":207,"offset":32960}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1245,"column":4,"offset":32965},"end":{"line":1245,"column":6,"offset":32967}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/word-ladder/description/"},"children":[{"type":"text","value":"127. Word Ladder","position":{"start":{"line":1245,"column":7,"offset":32968},"end":{"line":1245,"column":23,"offset":32984}}}],"position":{"start":{"line":1245,"column":6,"offset":32967},"end":{"line":1245,"column":80,"offset":33041}}}],"position":{"start":{"line":1245,"column":1,"offset":32962},"end":{"line":1245,"column":80,"offset":33041}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1247,"column":5,"offset":33047},"end":{"line":1247,"column":13,"offset":33055}}}],"position":{"start":{"line":1247,"column":1,"offset":33043},"end":{"line":1247,"column":13,"offset":33055}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given two words (","position":{"start":{"line":1249,"column":1,"offset":33057},"end":{"line":1249,"column":18,"offset":33074}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1249,"column":19,"offset":33075},"end":{"line":1249,"column":28,"offset":33084}}}],"position":{"start":{"line":1249,"column":18,"offset":33074},"end":{"line":1249,"column":29,"offset":33085}}},{"type":"text","value":" and ","position":{"start":{"line":1249,"column":29,"offset":33085},"end":{"line":1249,"column":34,"offset":33090}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1249,"column":35,"offset":33091},"end":{"line":1249,"column":42,"offset":33098}}}],"position":{"start":{"line":1249,"column":34,"offset":33090},"end":{"line":1249,"column":43,"offset":33099}}},{"type":"text","value":"), and a dictionary's word list, find the length of shortest transformation sequence from ","position":{"start":{"line":1249,"column":43,"offset":33099},"end":{"line":1249,"column":133,"offset":33189}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1249,"column":134,"offset":33190},"end":{"line":1249,"column":143,"offset":33199}}}],"position":{"start":{"line":1249,"column":133,"offset":33189},"end":{"line":1249,"column":144,"offset":33200}}},{"type":"text","value":" to ","position":{"start":{"line":1249,"column":144,"offset":33200},"end":{"line":1249,"column":148,"offset":33204}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1249,"column":149,"offset":33205},"end":{"line":1249,"column":156,"offset":33212}}}],"position":{"start":{"line":1249,"column":148,"offset":33204},"end":{"line":1249,"column":157,"offset":33213}}},{"type":"text","value":", such that:","position":{"start":{"line":1249,"column":157,"offset":33213},"end":{"line":1249,"column":169,"offset":33225}}}],"position":{"start":{"line":1249,"column":1,"offset":33057},"end":{"line":1249,"column":169,"offset":33225}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Only one letter can be changed at a time.","position":{"start":{"line":1251,"column":4,"offset":33230},"end":{"line":1251,"column":45,"offset":33271}}}],"position":{"start":{"line":1251,"column":1,"offset":33227},"end":{"line":1251,"column":45,"offset":33271}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Each transformed word must exist in the word list. Note that ","position":{"start":{"line":1252,"column":4,"offset":33275},"end":{"line":1252,"column":65,"offset":33336}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1252,"column":66,"offset":33337},"end":{"line":1252,"column":75,"offset":33346}}}],"position":{"start":{"line":1252,"column":65,"offset":33336},"end":{"line":1252,"column":76,"offset":33347}}},{"type":"text","value":" is ","position":{"start":{"line":1252,"column":76,"offset":33347},"end":{"line":1252,"column":80,"offset":33351}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"not","position":{"start":{"line":1252,"column":81,"offset":33352},"end":{"line":1252,"column":84,"offset":33355}}}],"position":{"start":{"line":1252,"column":80,"offset":33351},"end":{"line":1252,"column":85,"offset":33356}}},{"type":"text","value":" a transformed word.","position":{"start":{"line":1252,"column":85,"offset":33356},"end":{"line":1252,"column":105,"offset":33376}}}],"position":{"start":{"line":1252,"column":1,"offset":33272},"end":{"line":1252,"column":105,"offset":33376}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1251,"column":1,"offset":33227},"end":{"line":1252,"column":105,"offset":33376}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1254,"column":3,"offset":33380},"end":{"line":1254,"column":8,"offset":33385}}}],"position":{"start":{"line":1254,"column":1,"offset":33378},"end":{"line":1254,"column":10,"offset":33387}}}],"position":{"start":{"line":1254,"column":1,"offset":33378},"end":{"line":1254,"column":10,"offset":33387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Return 0 if there is no such transformation sequence.","position":{"start":{"line":1256,"column":5,"offset":33393},"end":{"line":1256,"column":58,"offset":33446}}}],"position":{"start":{"line":1256,"column":1,"offset":33389},"end":{"line":1256,"column":58,"offset":33446}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words have the same length.","position":{"start":{"line":1257,"column":5,"offset":33451},"end":{"line":1257,"column":36,"offset":33482}}}],"position":{"start":{"line":1257,"column":1,"offset":33447},"end":{"line":1257,"column":36,"offset":33482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All words contain only lowercase alphabetic characters.","position":{"start":{"line":1258,"column":5,"offset":33487},"end":{"line":1258,"column":60,"offset":33542}}}],"position":{"start":{"line":1258,"column":1,"offset":33483},"end":{"line":1258,"column":60,"offset":33542}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume no duplicates in the word list.","position":{"start":{"line":1259,"column":5,"offset":33547},"end":{"line":1259,"column":51,"offset":33593}}}],"position":{"start":{"line":1259,"column":1,"offset":33543},"end":{"line":1259,"column":51,"offset":33593}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"You may assume ","position":{"start":{"line":1260,"column":5,"offset":33598},"end":{"line":1260,"column":20,"offset":33613}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"beginWord","position":{"start":{"line":1260,"column":21,"offset":33614},"end":{"line":1260,"column":30,"offset":33623}}}],"position":{"start":{"line":1260,"column":20,"offset":33613},"end":{"line":1260,"column":31,"offset":33624}}},{"type":"text","value":" and ","position":{"start":{"line":1260,"column":31,"offset":33624},"end":{"line":1260,"column":36,"offset":33629}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"endWord","position":{"start":{"line":1260,"column":37,"offset":33630},"end":{"line":1260,"column":44,"offset":33637}}}],"position":{"start":{"line":1260,"column":36,"offset":33629},"end":{"line":1260,"column":45,"offset":33638}}},{"type":"text","value":" are non-empty and are not the same.","position":{"start":{"line":1260,"column":45,"offset":33638},"end":{"line":1260,"column":81,"offset":33674}}}],"position":{"start":{"line":1260,"column":1,"offset":33594},"end":{"line":1260,"column":81,"offset":33674}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1256,"column":1,"offset":33389},"end":{"line":1260,"column":81,"offset":33674}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1262,"column":3,"offset":33678},"end":{"line":1262,"column":13,"offset":33688}}}],"position":{"start":{"line":1262,"column":1,"offset":33676},"end":{"line":1262,"column":15,"offset":33690}}}],"position":{"start":{"line":1262,"column":1,"offset":33676},"end":{"line":1262,"column":15,"offset":33690}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\",\nendWord = \"cog\",\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\",\"cog\"]\n\nOutput: 5\n\nExplanation: As one shortest transformation is \"hit\" -> \"hot\" -> \"dot\" -> \"dog\" -> \"cog\",\nreturn its length 5.\n"}],"position":{"start":{"line":1264,"column":1,"offset":33692},"end":{"line":1275,"column":4,"offset":33915}}}],"position":{"start":{"line":1264,"column":1,"offset":33692},"end":{"line":1275,"column":4,"offset":33915}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1277,"column":3,"offset":33919},"end":{"line":1277,"column":13,"offset":33929}}}],"position":{"start":{"line":1277,"column":1,"offset":33917},"end":{"line":1277,"column":15,"offset":33931}}}],"position":{"start":{"line":1277,"column":1,"offset":33917},"end":{"line":1277,"column":15,"offset":33931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input:\nbeginWord = \"hit\"\nendWord = \"cog\"\nwordList = [\"hot\",\"dot\",\"dog\",\"lot\",\"log\"]\n\nOutput: 0\n\nExplanation: The endWord \"cog\" is not in wordList, therefore no possible transformation.\n"}],"position":{"start":{"line":1279,"column":1,"offset":33933},"end":{"line":1289,"column":4,"offset":34126}}}],"position":{"start":{"line":1279,"column":1,"offset":33933},"end":{"line":1289,"column":4,"offset":34126}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1291,"column":5,"offset":34132},"end":{"line":1291,"column":14,"offset":34141}}}],"position":{"start":{"line":1291,"column":1,"offset":34128},"end":{"line":1291,"column":14,"offset":34141}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Think of it as building a tree, with ","position":{"start":{"line":1293,"column":1,"offset":34143},"end":{"line":1293,"column":38,"offset":34180}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"begineWord"}],"position":{"start":{"line":1293,"column":38,"offset":34180},"end":{"line":1293,"column":50,"offset":34192}}},{"type":"text","value":" as root and ","position":{"start":{"line":1293,"column":50,"offset":34192},"end":{"line":1293,"column":63,"offset":34205}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"endWord"}],"position":{"start":{"line":1293,"column":63,"offset":34205},"end":{"line":1293,"column":72,"offset":34214}}},{"type":"text","value":" as leaves.","position":{"start":{"line":1293,"column":72,"offset":34214},"end":{"line":1293,"column":83,"offset":34225}}}],"position":{"start":{"line":1293,"column":1,"offset":34143},"end":{"line":1293,"column":83,"offset":34225}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The best way control the depth (length of the shortest transformations) while building the tree is level-order traversal (BFS).","position":{"start":{"line":1295,"column":1,"offset":34227},"end":{"line":1295,"column":128,"offset":34354}}}],"position":{"start":{"line":1295,"column":1,"offset":34227},"end":{"line":1295,"column":128,"offset":34354}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We do not actually build the tree because it is expensive (astronomical if the list is huge). In fact, we only need one shortest path. So just like Dijkstra's algorithm, we say that the first time (level ","position":{"start":{"line":1297,"column":1,"offset":34356},"end":{"line":1297,"column":205,"offset":34560}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i"}],"position":{"start":{"line":1297,"column":205,"offset":34560},"end":{"line":1297,"column":208,"offset":34563}}},{"type":"text","value":") we encounter a word that turns out to be in a shortest path, then level ","position":{"start":{"line":1297,"column":208,"offset":34563},"end":{"line":1297,"column":282,"offset":34637}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"i"}],"position":{"start":{"line":1297,"column":282,"offset":34637},"end":{"line":1297,"column":285,"offset":34640}}},{"type":"text","value":" is the lowest level this word could ever get. We can safely remove it from the ","position":{"start":{"line":1297,"column":285,"offset":34640},"end":{"line":1297,"column":365,"offset":34720}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wordList"}],"position":{"start":{"line":1297,"column":365,"offset":34720},"end":{"line":1297,"column":375,"offset":34730}}},{"type":"text","value":".","position":{"start":{"line":1297,"column":375,"offset":34730},"end":{"line":1297,"column":376,"offset":34731}}}],"position":{"start":{"line":1297,"column":1,"offset":34356},"end":{"line":1297,"column":376,"offset":34731}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To find all the next words, instead of filtering the ","position":{"start":{"line":1299,"column":1,"offset":34733},"end":{"line":1299,"column":54,"offset":34786}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wordList"}],"position":{"start":{"line":1299,"column":54,"offset":34786},"end":{"line":1299,"column":64,"offset":34796}}},{"type":"text","value":", enumerate all 25 possible words and check if in ","position":{"start":{"line":1299,"column":64,"offset":34796},"end":{"line":1299,"column":114,"offset":34846}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"wordList"}],"position":{"start":{"line":1299,"column":114,"offset":34846},"end":{"line":1299,"column":124,"offset":34856}}},{"type":"text","value":".","position":{"start":{"line":1299,"column":124,"offset":34856},"end":{"line":1299,"column":125,"offset":34857}}}],"position":{"start":{"line":1299,"column":1,"offset":34733},"end":{"line":1299,"column":125,"offset":34857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {string} beginWord\n * @param {string} endWord\n * @param {string[]} wordList\n * @return {number}\n */\nlet ladderLength = function (beginWord, endWord, wordList) {\n    wordList = new Set(wordList);\n    if (!wordList.has(endWord)) {\n        return 0;\n    }\n\n    const ALPHABET = 'abcdefghijklmnopqrstuvwxyz';\n\n    let level = 1;\n    const queue = [beginWord, null];\n    while (queue.length > 1) {\n        const word = queue.shift();\n\n        if (word === null) {\n            level++;\n            queue.push(null);\n            continue;\n        }\n\n        for (let i = word.length - 1; i >= 0; i--) {\n            const head = word.slice(0, i);\n            const tail = word.slice(i + 1);\n\n            for (let c = 0; c < 26; c++) {\n                if (ALPHABET[c] !== word[i]) {\n                    const word = head + ALPHABET[c] + tail;\n                    if (word === endWord) {\n                        return level + 1;\n                    }\n                    if (wordList.delete(word)) {\n                        queue.push(word);\n                    }\n                }\n            }\n        }\n    }\n\n    return 0;\n};\n"}],"position":{"start":{"line":1301,"column":1,"offset":34859},"end":{"line":1347,"column":4,"offset":36011}}}],"position":{"start":{"line":1301,"column":1,"offset":34859},"end":{"line":1347,"column":4,"offset":36011}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1349,"column":1,"offset":36013},"end":{"line":1349,"column":4,"offset":36016}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Hard\nRelated Topics:\n\"Array\": ","position":{"start":{"line":1351,"column":1,"offset":36018},"end":{"line":1353,"column":10,"offset":36060}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/array"},"children":[{"type":"text","value":"https://leetcode.com/tag/array","position":{"start":{"line":1353,"column":10,"offset":36060},"end":{"line":1353,"column":40,"offset":36090}}}],"position":{"start":{"line":1353,"column":10,"offset":36060},"end":{"line":1353,"column":40,"offset":36090}}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1353,"column":40,"offset":36090},"end":{"line":1354,"column":15,"offset":36105}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/union-find"},"children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1354,"column":15,"offset":36105},"end":{"line":1354,"column":50,"offset":36140}}}],"position":{"start":{"line":1354,"column":15,"offset":36105},"end":{"line":1354,"column":50,"offset":36140}}},{"type":"text","value":"\nSimilar Questions:\n\"Binary Tree Longest Consecutive Sequence\": ","position":{"start":{"line":1354,"column":50,"offset":36140},"end":{"line":1356,"column":45,"offset":36204}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence"},"children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-longest-consecutive-sequence","position":{"start":{"line":1356,"column":45,"offset":36204},"end":{"line":1356,"column":115,"offset":36274}}}],"position":{"start":{"line":1356,"column":45,"offset":36204},"end":{"line":1356,"column":115,"offset":36274}}}],"position":{"start":{"line":1351,"column":1,"offset":36018},"end":{"line":1356,"column":115,"offset":36274}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1358,"column":1,"offset":36276},"end":{"line":1358,"column":4,"offset":36279}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#128-longest-consecutive-sequencehttpsleetcodecomproblemslongest-consecutive-sequencedescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1360,"column":2,"offset":36282},"end":{"line":1360,"column":142,"offset":36422}}}],"position":{"start":{"line":1360,"column":1,"offset":36281},"end":{"line":1360,"column":241,"offset":36521}}}],"position":{"start":{"line":1360,"column":1,"offset":36281},"end":{"line":1360,"column":241,"offset":36521}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1362,"column":4,"offset":36526},"end":{"line":1362,"column":6,"offset":36528}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/longest-consecutive-sequence/description/"},"children":[{"type":"text","value":"128. Longest Consecutive Sequence","position":{"start":{"line":1362,"column":7,"offset":36529},"end":{"line":1362,"column":40,"offset":36562}}}],"position":{"start":{"line":1362,"column":6,"offset":36528},"end":{"line":1362,"column":114,"offset":36636}}}],"position":{"start":{"line":1362,"column":1,"offset":36523},"end":{"line":1362,"column":114,"offset":36636}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1364,"column":5,"offset":36642},"end":{"line":1364,"column":13,"offset":36650}}}],"position":{"start":{"line":1364,"column":1,"offset":36638},"end":{"line":1364,"column":13,"offset":36650}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given an unsorted array of integers, find the length of the longest consecutive elements sequence.","position":{"start":{"line":1366,"column":1,"offset":36652},"end":{"line":1366,"column":99,"offset":36750}}}],"position":{"start":{"line":1366,"column":1,"offset":36652},"end":{"line":1366,"column":99,"offset":36750}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Your algorithm should run in O(","position":{"start":{"line":1368,"column":1,"offset":36752},"end":{"line":1368,"column":32,"offset":36783}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"n","position":{"start":{"line":1368,"column":33,"offset":36784},"end":{"line":1368,"column":34,"offset":36785}}}],"position":{"start":{"line":1368,"column":32,"offset":36783},"end":{"line":1368,"column":35,"offset":36786}}},{"type":"text","value":") complexity.","position":{"start":{"line":1368,"column":35,"offset":36786},"end":{"line":1368,"column":48,"offset":36799}}}],"position":{"start":{"line":1368,"column":1,"offset":36752},"end":{"line":1368,"column":48,"offset":36799}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1370,"column":3,"offset":36803},"end":{"line":1370,"column":11,"offset":36811}}}],"position":{"start":{"line":1370,"column":1,"offset":36801},"end":{"line":1370,"column":13,"offset":36813}}}],"position":{"start":{"line":1370,"column":1,"offset":36801},"end":{"line":1370,"column":13,"offset":36813}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [100, 4, 200, 1, 3, 2]\nOutput: 4\nExplanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.\n"}],"position":{"start":{"line":1372,"column":1,"offset":36815},"end":{"line":1377,"column":4,"offset":36962}}}],"position":{"start":{"line":1372,"column":1,"offset":36815},"end":{"line":1377,"column":4,"offset":36962}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1379,"column":5,"offset":36968},"end":{"line":1379,"column":14,"offset":36977}}}],"position":{"start":{"line":1379,"column":1,"offset":36964},"end":{"line":1379,"column":14,"offset":36977}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Build a Set from the list. Pick a number, find all it's adjacent numbers that are also in the Set. Count them and remove them all from the Set. Repeat until the Set is empty. Time complexity O(n + n) = O(n).","position":{"start":{"line":1381,"column":1,"offset":36979},"end":{"line":1381,"column":208,"offset":37186}}}],"position":{"start":{"line":1381,"column":1,"offset":36979},"end":{"line":1381,"column":208,"offset":37186}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {number[]} nums\n * @return {number}\n */\nlet longestConsecutive = function (nums) {\n    const numSet = new Set(nums);\n    let maxCount = 0;\n    while (numSet.size > 0) {\n        const num = numSet.values().next().value;\n        numSet.delete(num);\n        let count = 1;\n        for (let n = num + 1; numSet.delete(n); n++) {\n            count++;\n        }\n        for (let n = num - 1; numSet.delete(n); n--) {\n            count++;\n        }\n        if (count > maxCount) {\n            maxCount = count;\n        }\n    }\n    return maxCount;\n};\n"}],"position":{"start":{"line":1383,"column":1,"offset":37188},"end":{"line":1407,"column":4,"offset":37763}}}],"position":{"start":{"line":1383,"column":1,"offset":37188},"end":{"line":1407,"column":4,"offset":37763}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1409,"column":1,"offset":37765},"end":{"line":1409,"column":4,"offset":37768}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Tree\": ","position":{"start":{"line":1411,"column":1,"offset":37770},"end":{"line":1413,"column":9,"offset":37813}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/tree"},"children":[{"type":"text","value":"https://leetcode.com/tag/tree","position":{"start":{"line":1413,"column":9,"offset":37813},"end":{"line":1413,"column":38,"offset":37842}}}],"position":{"start":{"line":1413,"column":9,"offset":37813},"end":{"line":1413,"column":38,"offset":37842}}},{"type":"text","value":"\n\"Depth-first Search\": ","position":{"start":{"line":1413,"column":38,"offset":37842},"end":{"line":1414,"column":23,"offset":37865}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1414,"column":23,"offset":37865},"end":{"line":1414,"column":66,"offset":37908}}}],"position":{"start":{"line":1414,"column":23,"offset":37865},"end":{"line":1414,"column":66,"offset":37908}}},{"type":"text","value":"\nSimilar Questions:\n\"Path Sum\": ","position":{"start":{"line":1414,"column":66,"offset":37908},"end":{"line":1416,"column":13,"offset":37940}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/path-sum"},"children":[{"type":"text","value":"https://leetcode.com/problems/path-sum","position":{"start":{"line":1416,"column":13,"offset":37940},"end":{"line":1416,"column":51,"offset":37978}}}],"position":{"start":{"line":1416,"column":13,"offset":37940},"end":{"line":1416,"column":51,"offset":37978}}},{"type":"text","value":"\n\"Binary Tree Maximum Path Sum\": ","position":{"start":{"line":1416,"column":51,"offset":37978},"end":{"line":1417,"column":33,"offset":38011}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/binary-tree-maximum-path-sum"},"children":[{"type":"text","value":"https://leetcode.com/problems/binary-tree-maximum-path-sum","position":{"start":{"line":1417,"column":33,"offset":38011},"end":{"line":1417,"column":91,"offset":38069}}}],"position":{"start":{"line":1417,"column":33,"offset":38011},"end":{"line":1417,"column":91,"offset":38069}}}],"position":{"start":{"line":1411,"column":1,"offset":37770},"end":{"line":1417,"column":91,"offset":38069}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1419,"column":1,"offset":38071},"end":{"line":1419,"column":4,"offset":38074}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#129-sum-root-to-leaf-numbershttpsleetcodecomproblemssum-root-to-leaf-numbersdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1421,"column":2,"offset":38077},"end":{"line":1421,"column":142,"offset":38217}}}],"position":{"start":{"line":1421,"column":1,"offset":38076},"end":{"line":1421,"column":233,"offset":38308}}}],"position":{"start":{"line":1421,"column":1,"offset":38076},"end":{"line":1421,"column":233,"offset":38308}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1423,"column":4,"offset":38313},"end":{"line":1423,"column":6,"offset":38315}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/sum-root-to-leaf-numbers/description/"},"children":[{"type":"text","value":"129. Sum Root to Leaf Numbers","position":{"start":{"line":1423,"column":7,"offset":38316},"end":{"line":1423,"column":36,"offset":38345}}}],"position":{"start":{"line":1423,"column":6,"offset":38315},"end":{"line":1423,"column":106,"offset":38415}}}],"position":{"start":{"line":1423,"column":1,"offset":38310},"end":{"line":1423,"column":106,"offset":38415}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1425,"column":5,"offset":38421},"end":{"line":1425,"column":13,"offset":38429}}}],"position":{"start":{"line":1425,"column":1,"offset":38417},"end":{"line":1425,"column":13,"offset":38429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree containing digits from ","position":{"start":{"line":1427,"column":1,"offset":38431},"end":{"line":1427,"column":44,"offset":38474}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0-9"}],"position":{"start":{"line":1427,"column":44,"offset":38474},"end":{"line":1427,"column":49,"offset":38479}}},{"type":"text","value":" only, each root-to-leaf path could represent a number.","position":{"start":{"line":1427,"column":49,"offset":38479},"end":{"line":1427,"column":104,"offset":38534}}}],"position":{"start":{"line":1427,"column":1,"offset":38431},"end":{"line":1427,"column":104,"offset":38534}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"An example is the root-to-leaf path ","position":{"start":{"line":1429,"column":1,"offset":38536},"end":{"line":1429,"column":37,"offset":38572}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1->2->3"}],"position":{"start":{"line":1429,"column":37,"offset":38572},"end":{"line":1429,"column":46,"offset":38581}}},{"type":"text","value":" which represents the number ","position":{"start":{"line":1429,"column":46,"offset":38581},"end":{"line":1429,"column":75,"offset":38610}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"123"}],"position":{"start":{"line":1429,"column":75,"offset":38610},"end":{"line":1429,"column":80,"offset":38615}}},{"type":"text","value":".","position":{"start":{"line":1429,"column":80,"offset":38615},"end":{"line":1429,"column":81,"offset":38616}}}],"position":{"start":{"line":1429,"column":1,"offset":38536},"end":{"line":1429,"column":81,"offset":38616}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Find the total sum of all root-to-leaf numbers.","position":{"start":{"line":1431,"column":1,"offset":38618},"end":{"line":1431,"column":48,"offset":38665}}}],"position":{"start":{"line":1431,"column":1,"offset":38618},"end":{"line":1431,"column":48,"offset":38665}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note:","position":{"start":{"line":1433,"column":3,"offset":38669},"end":{"line":1433,"column":8,"offset":38674}}}],"position":{"start":{"line":1433,"column":1,"offset":38667},"end":{"line":1433,"column":10,"offset":38676}}},{"type":"text","value":" A leaf is a node with no children.","position":{"start":{"line":1433,"column":10,"offset":38676},"end":{"line":1433,"column":45,"offset":38711}}}],"position":{"start":{"line":1433,"column":1,"offset":38667},"end":{"line":1433,"column":45,"offset":38711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1435,"column":3,"offset":38715},"end":{"line":1435,"column":11,"offset":38723}}}],"position":{"start":{"line":1435,"column":1,"offset":38713},"end":{"line":1435,"column":13,"offset":38725}}}],"position":{"start":{"line":1435,"column":1,"offset":38713},"end":{"line":1435,"column":13,"offset":38725}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [1,2,3]\n    1\n   / \\\n  2   3\nOutput: 25\nExplanation:\nThe root-to-leaf path 1->2 represents the number 12.\nThe root-to-leaf path 1->3 represents the number 13.\nTherefore, sum = 12 + 13 = 25.\n"}],"position":{"start":{"line":1437,"column":1,"offset":38727},"end":{"line":1447,"column":4,"offset":38931}}}],"position":{"start":{"line":1437,"column":1,"offset":38727},"end":{"line":1447,"column":4,"offset":38931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1449,"column":3,"offset":38935},"end":{"line":1449,"column":13,"offset":38945}}}],"position":{"start":{"line":1449,"column":1,"offset":38933},"end":{"line":1449,"column":15,"offset":38947}}}],"position":{"start":{"line":1449,"column":1,"offset":38933},"end":{"line":1449,"column":15,"offset":38947}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"Input: [4,9,0,5,1]\n    4\n   / \\\n  9   0\n / \\\n5   1\nOutput: 1026\nExplanation:\nThe root-to-leaf path 4->9->5 represents the number 495.\nThe root-to-leaf path 4->9->1 represents the number 491.\nThe root-to-leaf path 4->0 represents the number 40.\nTherefore, sum = 495 + 491 + 40 = 1026.\n"}],"position":{"start":{"line":1451,"column":1,"offset":38949},"end":{"line":1464,"column":4,"offset":39240}}}],"position":{"start":{"line":1451,"column":1,"offset":38949},"end":{"line":1464,"column":4,"offset":39240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1466,"column":5,"offset":39246},"end":{"line":1466,"column":14,"offset":39255}}}],"position":{"start":{"line":1466,"column":1,"offset":39242},"end":{"line":1466,"column":14,"offset":39255}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To write a clean solution for this promblem, use ","position":{"start":{"line":1468,"column":1,"offset":39257},"end":{"line":1468,"column":50,"offset":39306}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":1468,"column":50,"offset":39306},"end":{"line":1468,"column":53,"offset":39309}}},{"type":"text","value":" as indicator of leaf node. If all the children get ","position":{"start":{"line":1468,"column":53,"offset":39309},"end":{"line":1468,"column":105,"offset":39361}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":1468,"column":105,"offset":39361},"end":{"line":1468,"column":108,"offset":39364}}},{"type":"text","value":", it is a leaf node, return the sum of current level.","position":{"start":{"line":1468,"column":108,"offset":39364},"end":{"line":1468,"column":161,"offset":39417}}}],"position":{"start":{"line":1468,"column":1,"offset":39257},"end":{"line":1468,"column":161,"offset":39417}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nlet sumNumbers = function (root, sum = 0) {\n    if (!root) {\n        return 0;\n    }\n    sum = sum * 10 + root.val;\n    return sumNumbers(root.left, sum) + sumNumbers(root.right, sum) || sum;\n};\n"}],"position":{"start":{"line":1470,"column":1,"offset":39419},"end":{"line":1489,"column":4,"offset":39825}}}],"position":{"start":{"line":1470,"column":1,"offset":39419},"end":{"line":1489,"column":4,"offset":39825}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1491,"column":1,"offset":39827},"end":{"line":1491,"column":4,"offset":39830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1493,"column":1,"offset":39832},"end":{"line":1495,"column":23,"offset":39889}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1495,"column":23,"offset":39889},"end":{"line":1495,"column":66,"offset":39932}}}],"position":{"start":{"line":1495,"column":23,"offset":39889},"end":{"line":1495,"column":66,"offset":39932}}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1495,"column":66,"offset":39932},"end":{"line":1496,"column":25,"offset":39957}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1496,"column":25,"offset":39957},"end":{"line":1496,"column":70,"offset":40002}}}],"position":{"start":{"line":1496,"column":25,"offset":39957},"end":{"line":1496,"column":70,"offset":40002}}},{"type":"text","value":"\n\"Union Find\": ","position":{"start":{"line":1496,"column":70,"offset":40002},"end":{"line":1497,"column":15,"offset":40017}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/union-find"},"children":[{"type":"text","value":"https://leetcode.com/tag/union-find","position":{"start":{"line":1497,"column":15,"offset":40017},"end":{"line":1497,"column":50,"offset":40052}}}],"position":{"start":{"line":1497,"column":15,"offset":40017},"end":{"line":1497,"column":50,"offset":40052}}},{"type":"text","value":"\nSimilar Questions:\n\"Number of Islands\": ","position":{"start":{"line":1497,"column":50,"offset":40052},"end":{"line":1499,"column":22,"offset":40093}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/number-of-islands"},"children":[{"type":"text","value":"https://leetcode.com/problems/number-of-islands","position":{"start":{"line":1499,"column":22,"offset":40093},"end":{"line":1499,"column":69,"offset":40140}}}],"position":{"start":{"line":1499,"column":22,"offset":40093},"end":{"line":1499,"column":69,"offset":40140}}},{"type":"text","value":"\n\"Walls and Gates\": ","position":{"start":{"line":1499,"column":69,"offset":40140},"end":{"line":1500,"column":20,"offset":40160}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/walls-and-gates"},"children":[{"type":"text","value":"https://leetcode.com/problems/walls-and-gates","position":{"start":{"line":1500,"column":20,"offset":40160},"end":{"line":1500,"column":65,"offset":40205}}}],"position":{"start":{"line":1500,"column":20,"offset":40160},"end":{"line":1500,"column":65,"offset":40205}}}],"position":{"start":{"line":1493,"column":1,"offset":39832},"end":{"line":1500,"column":65,"offset":40205}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1502,"column":1,"offset":40207},"end":{"line":1502,"column":4,"offset":40210}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#130-surrounded-regionshttpsleetcodecomproblemssurrounded-regionsdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1504,"column":2,"offset":40213},"end":{"line":1504,"column":142,"offset":40353}}}],"position":{"start":{"line":1504,"column":1,"offset":40212},"end":{"line":1504,"column":221,"offset":40432}}}],"position":{"start":{"line":1504,"column":1,"offset":40212},"end":{"line":1504,"column":221,"offset":40432}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1506,"column":4,"offset":40437},"end":{"line":1506,"column":6,"offset":40439}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/surrounded-regions/description/"},"children":[{"type":"text","value":"130. Surrounded Regions","position":{"start":{"line":1506,"column":7,"offset":40440},"end":{"line":1506,"column":30,"offset":40463}}}],"position":{"start":{"line":1506,"column":6,"offset":40439},"end":{"line":1506,"column":94,"offset":40527}}}],"position":{"start":{"line":1506,"column":1,"offset":40434},"end":{"line":1506,"column":94,"offset":40527}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1508,"column":5,"offset":40533},"end":{"line":1508,"column":13,"offset":40541}}}],"position":{"start":{"line":1508,"column":1,"offset":40529},"end":{"line":1508,"column":13,"offset":40541}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a 2D board containing ","position":{"start":{"line":1510,"column":1,"offset":40543},"end":{"line":1510,"column":29,"offset":40571}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1510,"column":29,"offset":40571},"end":{"line":1510,"column":34,"offset":40576}}},{"type":"text","value":" and ","position":{"start":{"line":1510,"column":34,"offset":40576},"end":{"line":1510,"column":39,"offset":40581}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1510,"column":39,"offset":40581},"end":{"line":1510,"column":44,"offset":40586}}},{"type":"text","value":" (","position":{"start":{"line":1510,"column":44,"offset":40586},"end":{"line":1510,"column":46,"offset":40588}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"the letter O","position":{"start":{"line":1510,"column":48,"offset":40590},"end":{"line":1510,"column":60,"offset":40602}}}],"position":{"start":{"line":1510,"column":46,"offset":40588},"end":{"line":1510,"column":62,"offset":40604}}},{"type":"text","value":"), capture all regions surrounded by ","position":{"start":{"line":1510,"column":62,"offset":40604},"end":{"line":1510,"column":99,"offset":40641}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1510,"column":99,"offset":40641},"end":{"line":1510,"column":104,"offset":40646}}},{"type":"text","value":".","position":{"start":{"line":1510,"column":104,"offset":40646},"end":{"line":1510,"column":105,"offset":40647}}}],"position":{"start":{"line":1510,"column":1,"offset":40543},"end":{"line":1510,"column":105,"offset":40647}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"A region is captured by flipping all ","position":{"start":{"line":1512,"column":1,"offset":40649},"end":{"line":1512,"column":38,"offset":40686}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1512,"column":38,"offset":40686},"end":{"line":1512,"column":43,"offset":40691}}},{"type":"text","value":"s into ","position":{"start":{"line":1512,"column":43,"offset":40691},"end":{"line":1512,"column":50,"offset":40698}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1512,"column":50,"offset":40698},"end":{"line":1512,"column":55,"offset":40703}}},{"type":"text","value":"s in that surrounded region.","position":{"start":{"line":1512,"column":55,"offset":40703},"end":{"line":1512,"column":83,"offset":40731}}}],"position":{"start":{"line":1512,"column":1,"offset":40649},"end":{"line":1512,"column":83,"offset":40731}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1514,"column":3,"offset":40735},"end":{"line":1514,"column":11,"offset":40743}}}],"position":{"start":{"line":1514,"column":1,"offset":40733},"end":{"line":1514,"column":13,"offset":40745}}}],"position":{"start":{"line":1514,"column":1,"offset":40733},"end":{"line":1514,"column":13,"offset":40745}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"X X X X\nX O O X\nX X O X\nX O X X\n"}],"position":{"start":{"line":1516,"column":1,"offset":40747},"end":{"line":1522,"column":4,"offset":40787}}}],"position":{"start":{"line":1516,"column":1,"offset":40747},"end":{"line":1522,"column":4,"offset":40787}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"After running your function, the board should be:","position":{"start":{"line":1524,"column":1,"offset":40789},"end":{"line":1524,"column":50,"offset":40838}}}],"position":{"start":{"line":1524,"column":1,"offset":40789},"end":{"line":1524,"column":50,"offset":40838}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"X X X X\nX X X X\nX X X X\nX O X X\n"}],"position":{"start":{"line":1526,"column":1,"offset":40840},"end":{"line":1532,"column":4,"offset":40880}}}],"position":{"start":{"line":1526,"column":1,"offset":40840},"end":{"line":1532,"column":4,"offset":40880}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1534,"column":3,"offset":40884},"end":{"line":1534,"column":15,"offset":40896}}}],"position":{"start":{"line":1534,"column":1,"offset":40882},"end":{"line":1534,"column":17,"offset":40898}}}],"position":{"start":{"line":1534,"column":1,"offset":40882},"end":{"line":1534,"column":17,"offset":40898}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Surrounded regions shouldn't be on the border, which means that any ","position":{"start":{"line":1536,"column":1,"offset":40900},"end":{"line":1536,"column":69,"offset":40968}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1536,"column":69,"offset":40968},"end":{"line":1536,"column":74,"offset":40973}}},{"type":"text","value":" on the border of the board are not flipped to ","position":{"start":{"line":1536,"column":74,"offset":40973},"end":{"line":1536,"column":121,"offset":41020}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1536,"column":121,"offset":41020},"end":{"line":1536,"column":126,"offset":41025}}},{"type":"text","value":". Any ","position":{"start":{"line":1536,"column":126,"offset":41025},"end":{"line":1536,"column":132,"offset":41031}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1536,"column":132,"offset":41031},"end":{"line":1536,"column":137,"offset":41036}}},{"type":"text","value":" that is not on the border and it is not connected to an ","position":{"start":{"line":1536,"column":137,"offset":41036},"end":{"line":1536,"column":194,"offset":41093}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'O'"}],"position":{"start":{"line":1536,"column":194,"offset":41093},"end":{"line":1536,"column":199,"offset":41098}}},{"type":"text","value":" on the border will be flipped to ","position":{"start":{"line":1536,"column":199,"offset":41098},"end":{"line":1536,"column":233,"offset":41132}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"'X'"}],"position":{"start":{"line":1536,"column":233,"offset":41132},"end":{"line":1536,"column":238,"offset":41137}}},{"type":"text","value":". Two cells are connected if they are adjacent cells connected horizontally or vertically.","position":{"start":{"line":1536,"column":238,"offset":41137},"end":{"line":1536,"column":328,"offset":41227}}}],"position":{"start":{"line":1536,"column":1,"offset":40900},"end":{"line":1536,"column":328,"offset":41227}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1538,"column":5,"offset":41233},"end":{"line":1538,"column":14,"offset":41242}}}],"position":{"start":{"line":1538,"column":1,"offset":41229},"end":{"line":1538,"column":14,"offset":41242}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Find all the ","position":{"start":{"line":1540,"column":1,"offset":41244},"end":{"line":1540,"column":14,"offset":41257}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1540,"column":14,"offset":41257},"end":{"line":1540,"column":17,"offset":41260}}},{"type":"text","value":"s that are connected to the ","position":{"start":{"line":1540,"column":17,"offset":41260},"end":{"line":1540,"column":45,"offset":41288}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1540,"column":45,"offset":41288},"end":{"line":1540,"column":48,"offset":41291}}},{"type":"text","value":"s on the border, change them to ","position":{"start":{"line":1540,"column":48,"offset":41291},"end":{"line":1540,"column":80,"offset":41323}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":1540,"column":80,"offset":41323},"end":{"line":1540,"column":83,"offset":41326}}},{"type":"text","value":". Then scan the board, change ","position":{"start":{"line":1540,"column":83,"offset":41326},"end":{"line":1540,"column":113,"offset":41356}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1540,"column":113,"offset":41356},"end":{"line":1540,"column":116,"offset":41359}}},{"type":"text","value":" to ","position":{"start":{"line":1540,"column":116,"offset":41359},"end":{"line":1540,"column":120,"offset":41363}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"X"}],"position":{"start":{"line":1540,"column":120,"offset":41363},"end":{"line":1540,"column":123,"offset":41366}}},{"type":"text","value":" and ","position":{"start":{"line":1540,"column":123,"offset":41366},"end":{"line":1540,"column":128,"offset":41371}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":1540,"column":128,"offset":41371},"end":{"line":1540,"column":131,"offset":41374}}},{"type":"text","value":" back to ","position":{"start":{"line":1540,"column":131,"offset":41374},"end":{"line":1540,"column":140,"offset":41383}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1540,"column":140,"offset":41383},"end":{"line":1540,"column":143,"offset":41386}}},{"type":"text","value":".","position":{"start":{"line":1540,"column":143,"offset":41386},"end":{"line":1540,"column":144,"offset":41387}}}],"position":{"start":{"line":1540,"column":1,"offset":41244},"end":{"line":1540,"column":144,"offset":41387}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The process of finding the connected ","position":{"start":{"line":1542,"column":1,"offset":41389},"end":{"line":1542,"column":38,"offset":41426}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1542,"column":38,"offset":41426},"end":{"line":1542,"column":41,"offset":41429}}},{"type":"text","value":"s is just like tree traversal. ","position":{"start":{"line":1542,"column":41,"offset":41429},"end":{"line":1542,"column":72,"offset":41460}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O"}],"position":{"start":{"line":1542,"column":72,"offset":41460},"end":{"line":1542,"column":75,"offset":41463}}},{"type":"text","value":"s on the border are the same level. Their children are the second level. And so on.","position":{"start":{"line":1542,"column":75,"offset":41463},"end":{"line":1542,"column":158,"offset":41546}}}],"position":{"start":{"line":1542,"column":1,"offset":41389},"end":{"line":1542,"column":158,"offset":41546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So both BFS and DFS are good. I prefer BFS when pruning is not needed in favor of its readability.","position":{"start":{"line":1544,"column":1,"offset":41548},"end":{"line":1544,"column":99,"offset":41646}}}],"position":{"start":{"line":1544,"column":1,"offset":41548},"end":{"line":1544,"column":99,"offset":41646}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {character[][]} board\n * @return {void} Do not return anything, modify board in-place instead.\n */\nlet solve = function (board) {\n    const height = board.length;\n    if (height <= 1) {\n        return;\n    }\n    const width = board[0].length;\n    if (width <= 1) {\n        return;\n    }\n\n    const rowend = height - 1;\n    const colend = width - 1;\n\n    const queue = [];\n\n    for (let row = 0; row < height; row++) {\n        if (board[row][0] === 'O') {\n            board[row][0] = '#';\n            queue.push(row, 0);\n        }\n        if (board[row][colend] === 'O') {\n            board[row][colend] = '#';\n            queue.push(row, colend);\n        }\n    }\n\n    for (let col = 0; col < width; col++) {\n        if (board[0][col] === 'O') {\n            board[0][col] = '#';\n            queue.push(0, col);\n        }\n        if (board[rowend][col] === 'O') {\n            board[rowend][col] = '#';\n            queue.push(rowend, col);\n        }\n    }\n\n    while (queue.length > 0) {\n        const row = queue.shift();\n        const col = queue.shift();\n        if (row < rowend && board[row + 1][col] === 'O') {\n            board[row + 1][col] = '#';\n            queue.push(row + 1, col);\n        }\n        if (row > 0 && board[row - 1][col] === 'O') {\n            board[row - 1][col] = '#';\n            queue.push(row - 1, col);\n        }\n        if (board[row][col + 1] === 'O') {\n            board[row][col + 1] = '#';\n            queue.push(row, col + 1);\n        }\n        if (board[row][col - 1] === 'O') {\n            board[row][col - 1] = '#';\n            queue.push(row, col - 1);\n        }\n    }\n\n    for (let row = 0; row < height; row++) {\n        for (let col = 0; col < width; col++) {\n            if (board[row][col] === '#') {\n                board[row][col] = 'O';\n            } else if (board[row][col] === 'O') {\n                board[row][col] = 'X';\n            }\n        }\n    }\n};\n"}],"position":{"start":{"line":1546,"column":1,"offset":41648},"end":{"line":1619,"column":4,"offset":43585}}}],"position":{"start":{"line":1546,"column":1,"offset":41648},"end":{"line":1619,"column":4,"offset":43585}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1621,"column":1,"offset":43587},"end":{"line":1621,"column":4,"offset":43590}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Difficulty: Medium\nRelated Topics:\n\"Depth-first Search\": ","position":{"start":{"line":1623,"column":1,"offset":43592},"end":{"line":1625,"column":23,"offset":43649}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/depth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/depth-first-search","position":{"start":{"line":1625,"column":23,"offset":43649},"end":{"line":1625,"column":66,"offset":43692}}}],"position":{"start":{"line":1625,"column":23,"offset":43649},"end":{"line":1625,"column":66,"offset":43692}}},{"type":"text","value":"\n\"Breadth-first Search\": ","position":{"start":{"line":1625,"column":66,"offset":43692},"end":{"line":1626,"column":25,"offset":43717}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/breadth-first-search"},"children":[{"type":"text","value":"https://leetcode.com/tag/breadth-first-search","position":{"start":{"line":1626,"column":25,"offset":43717},"end":{"line":1626,"column":70,"offset":43762}}}],"position":{"start":{"line":1626,"column":25,"offset":43717},"end":{"line":1626,"column":70,"offset":43762}}},{"type":"text","value":"\n\"Graph\": ","position":{"start":{"line":1626,"column":70,"offset":43762},"end":{"line":1627,"column":10,"offset":43772}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/tag/graph"},"children":[{"type":"text","value":"https://leetcode.com/tag/graph","position":{"start":{"line":1627,"column":10,"offset":43772},"end":{"line":1627,"column":40,"offset":43802}}}],"position":{"start":{"line":1627,"column":10,"offset":43772},"end":{"line":1627,"column":40,"offset":43802}}},{"type":"text","value":"\nSimilar Questions:\n\"Copy List with Random Pointer\": ","position":{"start":{"line":1627,"column":40,"offset":43802},"end":{"line":1629,"column":34,"offset":43855}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/copy-list-with-random-pointer"},"children":[{"type":"text","value":"https://leetcode.com/problems/copy-list-with-random-pointer","position":{"start":{"line":1629,"column":34,"offset":43855},"end":{"line":1629,"column":93,"offset":43914}}}],"position":{"start":{"line":1629,"column":34,"offset":43855},"end":{"line":1629,"column":93,"offset":43914}}}],"position":{"start":{"line":1623,"column":1,"offset":43592},"end":{"line":1629,"column":93,"offset":43914}}},{"type":"text","value":"\n"},{"type":"element","tagName":"hr","properties":{},"children":[],"position":{"start":{"line":1631,"column":1,"offset":43916},"end":{"line":1631,"column":4,"offset":43919}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#133-clone-graphhttpsleetcodecomproblemsclone-graphdescription"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1633,"column":2,"offset":43922},"end":{"line":1633,"column":142,"offset":44062}}}],"position":{"start":{"line":1633,"column":1,"offset":43921},"end":{"line":1633,"column":207,"offset":44127}}}],"position":{"start":{"line":1633,"column":1,"offset":43921},"end":{"line":1633,"column":207,"offset":44127}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"âž¤ ","position":{"start":{"line":1635,"column":4,"offset":44132},"end":{"line":1635,"column":6,"offset":44134}}},{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/clone-graph/description/"},"children":[{"type":"text","value":"133. Clone Graph","position":{"start":{"line":1635,"column":7,"offset":44135},"end":{"line":1635,"column":23,"offset":44151}}}],"position":{"start":{"line":1635,"column":6,"offset":44134},"end":{"line":1635,"column":80,"offset":44208}}}],"position":{"start":{"line":1635,"column":1,"offset":44129},"end":{"line":1635,"column":80,"offset":44208}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Problem:","position":{"start":{"line":1637,"column":5,"offset":44214},"end":{"line":1637,"column":13,"offset":44222}}}],"position":{"start":{"line":1637,"column":1,"offset":44210},"end":{"line":1637,"column":13,"offset":44222}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the head of a graph, return a deep copy (clone) of the graph. Each node in the graph contains a ","position":{"start":{"line":1639,"column":1,"offset":44224},"end":{"line":1639,"column":103,"offset":44326}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"label"}],"position":{"start":{"line":1639,"column":103,"offset":44326},"end":{"line":1639,"column":110,"offset":44333}}},{"type":"text","value":" (","position":{"start":{"line":1639,"column":110,"offset":44333},"end":{"line":1639,"column":112,"offset":44335}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int"}],"position":{"start":{"line":1639,"column":112,"offset":44335},"end":{"line":1639,"column":117,"offset":44340}}},{"type":"text","value":") and a list (","position":{"start":{"line":1639,"column":117,"offset":44340},"end":{"line":1639,"column":131,"offset":44354}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"List[UndirectedGraphNode]"}],"position":{"start":{"line":1639,"column":131,"offset":44354},"end":{"line":1639,"column":158,"offset":44381}}},{"type":"text","value":") of its ","position":{"start":{"line":1639,"column":158,"offset":44381},"end":{"line":1639,"column":167,"offset":44390}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"neighbors"}],"position":{"start":{"line":1639,"column":167,"offset":44390},"end":{"line":1639,"column":178,"offset":44401}}},{"type":"text","value":". There is an edge between the given node and each of the nodes in its neighbors.","position":{"start":{"line":1639,"column":178,"offset":44401},"end":{"line":1639,"column":259,"offset":44482}}}],"position":{"start":{"line":1639,"column":1,"offset":44224},"end":{"line":1639,"column":259,"offset":44482}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"OJ's undirected graph serialization (so you can understand error output):","position":{"start":{"line":1641,"column":1,"offset":44484},"end":{"line":1641,"column":74,"offset":44557}}}],"position":{"start":{"line":1641,"column":1,"offset":44484},"end":{"line":1641,"column":74,"offset":44557}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Nodes are labeled uniquely.","position":{"start":{"line":1643,"column":1,"offset":44559},"end":{"line":1643,"column":28,"offset":44586}}}],"position":{"start":{"line":1643,"column":1,"offset":44559},"end":{"line":1643,"column":28,"offset":44586}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"We use ","position":{"start":{"line":1645,"column":1,"offset":44588},"end":{"line":1645,"column":8,"offset":44595}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":1645,"column":8,"offset":44595},"end":{"line":1645,"column":11,"offset":44598}}},{"type":"text","value":" as a separator for each node, and ","position":{"start":{"line":1645,"column":11,"offset":44598},"end":{"line":1645,"column":46,"offset":44633}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":","}],"position":{"start":{"line":1645,"column":46,"offset":44633},"end":{"line":1645,"column":49,"offset":44636}}},{"type":"text","value":" as a separator for node label and each neighbor of the node.","position":{"start":{"line":1645,"column":49,"offset":44636},"end":{"line":1645,"column":110,"offset":44697}}}],"position":{"start":{"line":1645,"column":1,"offset":44588},"end":{"line":1645,"column":110,"offset":44697}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"As an example, consider the serialized graph ","position":{"start":{"line":1647,"column":1,"offset":44699},"end":{"line":1647,"column":46,"offset":44744}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"{0,1,2#1,2#2,2}"}],"position":{"start":{"line":1647,"column":46,"offset":44744},"end":{"line":1647,"column":63,"offset":44761}}},{"type":"text","value":".","position":{"start":{"line":1647,"column":63,"offset":44761},"end":{"line":1647,"column":64,"offset":44762}}}],"position":{"start":{"line":1647,"column":1,"offset":44699},"end":{"line":1647,"column":64,"offset":44762}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"The graph has a total of three nodes, and therefore contains three parts as separated by ","position":{"start":{"line":1649,"column":1,"offset":44764},"end":{"line":1649,"column":90,"offset":44853}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"#"}],"position":{"start":{"line":1649,"column":90,"offset":44853},"end":{"line":1649,"column":93,"offset":44856}}},{"type":"text","value":".","position":{"start":{"line":1649,"column":93,"offset":44856},"end":{"line":1649,"column":94,"offset":44857}}}],"position":{"start":{"line":1649,"column":1,"offset":44764},"end":{"line":1649,"column":94,"offset":44857}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"First node is labeled as ","position":{"start":{"line":1651,"column":4,"offset":44862},"end":{"line":1651,"column":29,"offset":44887}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":1651,"column":29,"offset":44887},"end":{"line":1651,"column":32,"offset":44890}}},{"type":"text","value":". Connect node ","position":{"start":{"line":1651,"column":32,"offset":44890},"end":{"line":1651,"column":47,"offset":44905}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"0"}],"position":{"start":{"line":1651,"column":47,"offset":44905},"end":{"line":1651,"column":50,"offset":44908}}},{"type":"text","value":" to both nodes ","position":{"start":{"line":1651,"column":50,"offset":44908},"end":{"line":1651,"column":65,"offset":44923}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1"}],"position":{"start":{"line":1651,"column":65,"offset":44923},"end":{"line":1651,"column":68,"offset":44926}}},{"type":"text","value":" and ","position":{"start":{"line":1651,"column":68,"offset":44926},"end":{"line":1651,"column":73,"offset":44931}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":1651,"column":73,"offset":44931},"end":{"line":1651,"column":76,"offset":44934}}},{"type":"text","value":".","position":{"start":{"line":1651,"column":76,"offset":44934},"end":{"line":1651,"column":77,"offset":44935}}}],"position":{"start":{"line":1651,"column":1,"offset":44859},"end":{"line":1651,"column":77,"offset":44935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Second node is labeled as ","position":{"start":{"line":1652,"column":4,"offset":44939},"end":{"line":1652,"column":30,"offset":44965}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1"}],"position":{"start":{"line":1652,"column":30,"offset":44965},"end":{"line":1652,"column":33,"offset":44968}}},{"type":"text","value":". Connect node ","position":{"start":{"line":1652,"column":33,"offset":44968},"end":{"line":1652,"column":48,"offset":44983}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"1"}],"position":{"start":{"line":1652,"column":48,"offset":44983},"end":{"line":1652,"column":51,"offset":44986}}},{"type":"text","value":" to node ","position":{"start":{"line":1652,"column":51,"offset":44986},"end":{"line":1652,"column":60,"offset":44995}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":1652,"column":60,"offset":44995},"end":{"line":1652,"column":63,"offset":44998}}},{"type":"text","value":".","position":{"start":{"line":1652,"column":63,"offset":44998},"end":{"line":1652,"column":64,"offset":44999}}}],"position":{"start":{"line":1652,"column":1,"offset":44936},"end":{"line":1652,"column":64,"offset":44999}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Third node is labeled as ","position":{"start":{"line":1653,"column":4,"offset":45003},"end":{"line":1653,"column":29,"offset":45028}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":1653,"column":29,"offset":45028},"end":{"line":1653,"column":32,"offset":45031}}},{"type":"text","value":". Connect node ","position":{"start":{"line":1653,"column":32,"offset":45031},"end":{"line":1653,"column":47,"offset":45046}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":1653,"column":47,"offset":45046},"end":{"line":1653,"column":50,"offset":45049}}},{"type":"text","value":" to node ","position":{"start":{"line":1653,"column":50,"offset":45049},"end":{"line":1653,"column":59,"offset":45058}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"2"}],"position":{"start":{"line":1653,"column":59,"offset":45058},"end":{"line":1653,"column":62,"offset":45061}}},{"type":"text","value":" (itself), thus forming a self-cycle.","position":{"start":{"line":1653,"column":62,"offset":45061},"end":{"line":1653,"column":99,"offset":45098}}}],"position":{"start":{"line":1653,"column":1,"offset":45000},"end":{"line":1653,"column":99,"offset":45098}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1651,"column":1,"offset":44859},"end":{"line":1653,"column":99,"offset":45098}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Visually, the graph looks like the following:","position":{"start":{"line":1655,"column":1,"offset":45100},"end":{"line":1655,"column":46,"offset":45145}}}],"position":{"start":{"line":1655,"column":1,"offset":45100},"end":{"line":1655,"column":46,"offset":45145}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"       1\n      / \\\n     /   \\\n    0 --- 2\n         / \\\n         \\_/\n"}],"position":{"start":{"line":1657,"column":1,"offset":45147},"end":{"line":1665,"column":4,"offset":45223}}}],"position":{"start":{"line":1657,"column":1,"offset":45147},"end":{"line":1665,"column":4,"offset":45223}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Note","position":{"start":{"line":1667,"column":3,"offset":45227},"end":{"line":1667,"column":7,"offset":45231}}}],"position":{"start":{"line":1667,"column":1,"offset":45225},"end":{"line":1667,"column":9,"offset":45233}}},{"type":"text","value":": The information about the tree serialization is only meant so that you can understand error output if you get a wrong answer. You don't need to understand the serialization to solve the problem.","position":{"start":{"line":1667,"column":9,"offset":45233},"end":{"line":1667,"column":205,"offset":45429}}}],"position":{"start":{"line":1667,"column":1,"offset":45225},"end":{"line":1667,"column":205,"offset":45429}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Solution:","position":{"start":{"line":1669,"column":5,"offset":45435},"end":{"line":1669,"column":14,"offset":45444}}}],"position":{"start":{"line":1669,"column":1,"offset":45431},"end":{"line":1669,"column":14,"offset":45444}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"DFS. Cache the visited node before entering the next recursion.","position":{"start":{"line":1671,"column":1,"offset":45446},"end":{"line":1671,"column":64,"offset":45509}}}],"position":{"start":{"line":1671,"column":1,"offset":45446},"end":{"line":1671,"column":64,"offset":45509}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * Definition for undirected graph.\n * function UndirectedGraphNode(label) {\n *     this.label = label;\n *     this.neighbors = [];   // Array of UndirectedGraphNode\n * }\n */\n\n/**\n * @param {UndirectedGraphNode} graph\n * @return {UndirectedGraphNode}\n */\nlet cloneGraph = function (graph) {\n    const cache = {};\n    return _clone(graph);\n\n    function _clone(graph) {\n        if (!graph) {\n            return graph;\n        }\n        const label = graph.label;\n        if (!cache[label]) {\n            cache[label] = new UndirectedGraphNode(label);\n            cache[label].neighbors = graph.neighbors.map(_clone);\n        }\n        return cache[label];\n    }\n};\n"}],"position":{"start":{"line":1673,"column":1,"offset":45511},"end":{"line":1702,"column":4,"offset":46196}}}],"position":{"start":{"line":1673,"column":1,"offset":45511},"end":{"line":1702,"column":4,"offset":46196}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/binary-tree-upside-down.webp","alt":"alt text","title":"binary-tree-upside-down"},"children":[],"position":{"start":{"line":1704,"column":1,"offset":46198},"end":{"line":1704,"column":127,"offset":46324}}}],"position":{"start":{"line":1704,"column":1,"offset":46198},"end":{"line":1704,"column":127,"offset":46324}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nconst upsideDownBinaryTree = function (root) {\n    let curr = root;\n    let next = null;\n    let temp = null;\n    let prev = null;\n    while (curr !== null) {\n        next = curr.left;\n        curr.left = temp;\n        temp = curr.right;\n        curr.right = prev;\n        prev = curr;\n        curr = next;\n    }\n    return prev;\n};\n\n// another\n\nconst upsideDownBinaryTree = function (root) {\n    if (root == null || root.left == null) {\n        return root;\n    }\n    const newRoot = upsideDownBinaryTree(root.left);\n    root.left.left = root.right;\n    root.left.right = root;\n    root.left = null;\n    root.right = null;\n    return newRoot;\n};\n"}],"position":{"start":{"line":1706,"column":1,"offset":46326},"end":{"line":1747,"column":4,"offset":47178}}}],"position":{"start":{"line":1706,"column":1,"offset":46326},"end":{"line":1747,"column":4,"offset":47178}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/maximum-sum-circular-subarray.png","alt":"alt text","title":"maximum-sum-circular-subarray"},"children":[],"position":{"start":{"line":1749,"column":1,"offset":47180},"end":{"line":1749,"column":138,"offset":47317}}}],"position":{"start":{"line":1749,"column":1,"offset":47180},"end":{"line":1749,"column":138,"offset":47317}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-js"]},"children":[{"type":"text","value":"/**\n * @param {number[]} A\n * @return {number}\n */\nconst maxSubarraySumCircular = function (A) {\n    let minSum = Infinity,\n        sum = 0,\n        maxSum = -Infinity,\n        curMax = 0,\n        curMin = 0;\n    for (let a of A) {\n        sum += a;\n        curMax = Math.max(curMax + a, a);\n        maxSum = Math.max(maxSum, curMax);\n        curMin = Math.min(curMin + a, a);\n        minSum = Math.min(minSum, curMin);\n    }\n    return maxSum > 0 ? Math.max(maxSum, sum - minSum) : maxSum;\n};\n"}],"position":{"start":{"line":1751,"column":1,"offset":47319},"end":{"line":1771,"column":4,"offset":47822}}}],"position":{"start":{"line":1751,"column":1,"offset":47319},"end":{"line":1771,"column":4,"offset":47822}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#balanced-binary-tree---leetcode"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1773,"column":2,"offset":47825},"end":{"line":1773,"column":142,"offset":47965}}}],"position":{"start":{"line":1773,"column":1,"offset":47824},"end":{"line":1773,"column":177,"offset":48000}}}],"position":{"start":{"line":1773,"column":1,"offset":47824},"end":{"line":1773,"column":177,"offset":48000}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"âž¤ Balanced Binary Tree - LeetCode","position":{"start":{"line":1775,"column":3,"offset":48004},"end":{"line":1775,"column":36,"offset":48037}}}],"position":{"start":{"line":1775,"column":1,"offset":48002},"end":{"line":1775,"column":36,"offset":48037}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1777,"column":3,"offset":48041},"end":{"line":1777,"column":144,"offset":48182}}}],"position":{"start":{"line":1777,"column":3,"offset":48041},"end":{"line":1777,"column":144,"offset":48182}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1777,"column":1,"offset":48039},"end":{"line":1777,"column":144,"offset":48182}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a binary tree, determine if it is height-balanced.","position":{"start":{"line":1779,"column":1,"offset":48184},"end":{"line":1779,"column":57,"offset":48240}}}],"position":{"start":{"line":1779,"column":1,"offset":48184},"end":{"line":1779,"column":57,"offset":48240}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as:","position":{"start":{"line":1781,"column":1,"offset":48242},"end":{"line":1781,"column":63,"offset":48304}}}],"position":{"start":{"line":1781,"column":1,"offset":48242},"end":{"line":1781,"column":63,"offset":48304}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"a binary tree in which the left and right subtrees of ","position":{"start":{"line":1783,"column":3,"offset":48308},"end":{"line":1783,"column":57,"offset":48362}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"every","position":{"start":{"line":1783,"column":58,"offset":48363},"end":{"line":1783,"column":63,"offset":48368}}}],"position":{"start":{"line":1783,"column":57,"offset":48362},"end":{"line":1783,"column":64,"offset":48369}}},{"type":"text","value":" node differ in height by no more than 1.","position":{"start":{"line":1783,"column":64,"offset":48369},"end":{"line":1783,"column":105,"offset":48410}}}],"position":{"start":{"line":1783,"column":3,"offset":48308},"end":{"line":1783,"column":105,"offset":48410}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1783,"column":1,"offset":48306},"end":{"line":1783,"column":105,"offset":48410}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1785,"column":3,"offset":48414},"end":{"line":1785,"column":13,"offset":48424}}}],"position":{"start":{"line":1785,"column":1,"offset":48412},"end":{"line":1785,"column":15,"offset":48426}}}],"position":{"start":{"line":1785,"column":1,"offset":48412},"end":{"line":1785,"column":15,"offset":48426}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/10/06/balance_1.jpg","alt":null},"children":[],"position":{"start":{"line":1787,"column":1,"offset":48428},"end":{"line":1787,"column":66,"offset":48493}}}],"position":{"start":{"line":1787,"column":1,"offset":48428},"end":{"line":1787,"column":66,"offset":48493}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":1789,"column":3,"offset":48497},"end":{"line":1789,"column":9,"offset":48503}}}],"position":{"start":{"line":1789,"column":1,"offset":48495},"end":{"line":1789,"column":11,"offset":48505}}},{"type":"text","value":" root = ","position":{"start":{"line":1789,"column":11,"offset":48505},"end":{"line":1789,"column":19,"offset":48513}}},{"type":"text","value":"[","position":{"start":{"line":1789,"column":19,"offset":48513},"end":{"line":1789,"column":21,"offset":48515}}},{"type":"text","value":"3,9,20,null,null,15,7","position":{"start":{"line":1789,"column":21,"offset":48515},"end":{"line":1789,"column":42,"offset":48536}}},{"type":"text","value":"]","position":{"start":{"line":1789,"column":42,"offset":48536},"end":{"line":1789,"column":44,"offset":48538}}},{"type":"text","value":"\n","position":{"start":{"line":1789,"column":44,"offset":48538},"end":{"line":1790,"column":1,"offset":48539}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":1790,"column":3,"offset":48541},"end":{"line":1790,"column":10,"offset":48548}}}],"position":{"start":{"line":1790,"column":1,"offset":48539},"end":{"line":1790,"column":12,"offset":48550}}},{"type":"text","value":" true","position":{"start":{"line":1790,"column":12,"offset":48550},"end":{"line":1790,"column":17,"offset":48555}}}],"position":{"start":{"line":1789,"column":1,"offset":48495},"end":{"line":1790,"column":17,"offset":48555}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1792,"column":3,"offset":48559},"end":{"line":1792,"column":13,"offset":48569}}}],"position":{"start":{"line":1792,"column":1,"offset":48557},"end":{"line":1792,"column":15,"offset":48571}}}],"position":{"start":{"line":1792,"column":1,"offset":48557},"end":{"line":1792,"column":15,"offset":48571}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/10/06/balance_2.jpg","alt":null},"children":[],"position":{"start":{"line":1794,"column":1,"offset":48573},"end":{"line":1794,"column":66,"offset":48638}}}],"position":{"start":{"line":1794,"column":1,"offset":48573},"end":{"line":1794,"column":66,"offset":48638}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":1796,"column":3,"offset":48642},"end":{"line":1796,"column":9,"offset":48648}}}],"position":{"start":{"line":1796,"column":1,"offset":48640},"end":{"line":1796,"column":11,"offset":48650}}},{"type":"text","value":" root = ","position":{"start":{"line":1796,"column":11,"offset":48650},"end":{"line":1796,"column":19,"offset":48658}}},{"type":"text","value":"[","position":{"start":{"line":1796,"column":19,"offset":48658},"end":{"line":1796,"column":21,"offset":48660}}},{"type":"text","value":"1,2,2,3,3,null,null,4,4","position":{"start":{"line":1796,"column":21,"offset":48660},"end":{"line":1796,"column":44,"offset":48683}}},{"type":"text","value":"]","position":{"start":{"line":1796,"column":44,"offset":48683},"end":{"line":1796,"column":46,"offset":48685}}},{"type":"text","value":"\n","position":{"start":{"line":1796,"column":46,"offset":48685},"end":{"line":1797,"column":1,"offset":48686}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":1797,"column":3,"offset":48688},"end":{"line":1797,"column":10,"offset":48695}}}],"position":{"start":{"line":1797,"column":1,"offset":48686},"end":{"line":1797,"column":12,"offset":48697}}},{"type":"text","value":" false","position":{"start":{"line":1797,"column":12,"offset":48697},"end":{"line":1797,"column":18,"offset":48703}}}],"position":{"start":{"line":1796,"column":1,"offset":48640},"end":{"line":1797,"column":18,"offset":48703}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1799,"column":3,"offset":48707},"end":{"line":1799,"column":13,"offset":48717}}}],"position":{"start":{"line":1799,"column":1,"offset":48705},"end":{"line":1799,"column":15,"offset":48719}}}],"position":{"start":{"line":1799,"column":1,"offset":48705},"end":{"line":1799,"column":15,"offset":48719}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":1801,"column":3,"offset":48723},"end":{"line":1801,"column":9,"offset":48729}}}],"position":{"start":{"line":1801,"column":1,"offset":48721},"end":{"line":1801,"column":11,"offset":48731}}},{"type":"text","value":" root = ","position":{"start":{"line":1801,"column":11,"offset":48731},"end":{"line":1801,"column":19,"offset":48739}}},{"type":"text","value":"[","position":{"start":{"line":1801,"column":19,"offset":48739},"end":{"line":1801,"column":21,"offset":48741}}},{"type":"text","value":"]","position":{"start":{"line":1801,"column":21,"offset":48741},"end":{"line":1801,"column":23,"offset":48743}}},{"type":"text","value":"\n","position":{"start":{"line":1801,"column":23,"offset":48743},"end":{"line":1802,"column":1,"offset":48744}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":1802,"column":3,"offset":48746},"end":{"line":1802,"column":10,"offset":48753}}}],"position":{"start":{"line":1802,"column":1,"offset":48744},"end":{"line":1802,"column":12,"offset":48755}}},{"type":"text","value":" true","position":{"start":{"line":1802,"column":12,"offset":48755},"end":{"line":1802,"column":17,"offset":48760}}}],"position":{"start":{"line":1801,"column":1,"offset":48721},"end":{"line":1802,"column":17,"offset":48760}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1804,"column":3,"offset":48764},"end":{"line":1804,"column":15,"offset":48776}}}],"position":{"start":{"line":1804,"column":1,"offset":48762},"end":{"line":1804,"column":17,"offset":48778}}}],"position":{"start":{"line":1804,"column":1,"offset":48762},"end":{"line":1804,"column":17,"offset":48778}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1806,"column":5,"offset":48784},"end":{"line":1806,"column":53,"offset":48832}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0, 5000]"}],"position":{"start":{"line":1806,"column":53,"offset":48832},"end":{"line":1806,"column":64,"offset":48843}}},{"type":"text","value":".","position":{"start":{"line":1806,"column":64,"offset":48843},"end":{"line":1806,"column":65,"offset":48844}}}],"position":{"start":{"line":1806,"column":1,"offset":48780},"end":{"line":1806,"column":65,"offset":48844}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-104 <= Node.val <= 104"}],"position":{"start":{"line":1807,"column":5,"offset":48849},"end":{"line":1807,"column":30,"offset":48874}}}],"position":{"start":{"line":1807,"column":1,"offset":48845},"end":{"line":1807,"column":30,"offset":48874}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1806,"column":1,"offset":48780},"end":{"line":1807,"column":30,"offset":48874}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/balanced-binary-tree/"},"children":[{"type":"text","value":"Source","position":{"start":{"line":1809,"column":2,"offset":48877},"end":{"line":1809,"column":8,"offset":48883}}}],"position":{"start":{"line":1809,"column":1,"offset":48876},"end":{"line":1809,"column":62,"offset":48937}}},{"type":"text","value":"# Convert Sorted Array to Binary Search Tree","position":{"start":{"line":1809,"column":62,"offset":48937},"end":{"line":1809,"column":106,"offset":48981}}}],"position":{"start":{"line":1809,"column":1,"offset":48876},"end":{"line":1809,"column":106,"offset":48981}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1811,"column":3,"offset":48985},"end":{"line":1811,"column":144,"offset":49126}}}],"position":{"start":{"line":1811,"column":3,"offset":48985},"end":{"line":1811,"column":144,"offset":49126}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1811,"column":1,"offset":48983},"end":{"line":1811,"column":144,"offset":49126}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given an array where elements are sorted in ascending order, convert it to a height balanced BST.","position":{"start":{"line":1813,"column":1,"offset":49128},"end":{"line":1813,"column":98,"offset":49225}}}],"position":{"start":{"line":1813,"column":1,"offset":49128},"end":{"line":1813,"column":98,"offset":49225}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of ","position":{"start":{"line":1815,"column":1,"offset":49227},"end":{"line":1815,"column":119,"offset":49345}}},{"type":"element","tagName":"em","properties":{},"children":[{"type":"text","value":"every","position":{"start":{"line":1815,"column":120,"offset":49346},"end":{"line":1815,"column":125,"offset":49351}}}],"position":{"start":{"line":1815,"column":119,"offset":49345},"end":{"line":1815,"column":126,"offset":49352}}},{"type":"text","value":" node never differ by more than 1.","position":{"start":{"line":1815,"column":126,"offset":49352},"end":{"line":1815,"column":160,"offset":49386}}}],"position":{"start":{"line":1815,"column":1,"offset":49227},"end":{"line":1815,"column":160,"offset":49386}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example:","position":{"start":{"line":1817,"column":3,"offset":49390},"end":{"line":1817,"column":11,"offset":49398}}}],"position":{"start":{"line":1817,"column":1,"offset":49388},"end":{"line":1817,"column":13,"offset":49400}}}],"position":{"start":{"line":1817,"column":1,"offset":49388},"end":{"line":1817,"column":13,"offset":49400}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given the sorted array: ","position":{"start":{"line":1819,"column":1,"offset":49402},"end":{"line":1819,"column":25,"offset":49426}}},{"type":"text","value":"[","position":{"start":{"line":1819,"column":25,"offset":49426},"end":{"line":1819,"column":27,"offset":49428}}},{"type":"text","value":"-10,-3,0,5,9","position":{"start":{"line":1819,"column":27,"offset":49428},"end":{"line":1819,"column":39,"offset":49440}}},{"type":"text","value":"]","position":{"start":{"line":1819,"column":39,"offset":49440},"end":{"line":1819,"column":41,"offset":49442}}},{"type":"text","value":",","position":{"start":{"line":1819,"column":41,"offset":49442},"end":{"line":1819,"column":42,"offset":49443}}}],"position":{"start":{"line":1819,"column":1,"offset":49402},"end":{"line":1819,"column":42,"offset":49443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"One possible answer is: ","position":{"start":{"line":1821,"column":1,"offset":49445},"end":{"line":1821,"column":25,"offset":49469}}},{"type":"text","value":"[","position":{"start":{"line":1821,"column":25,"offset":49469},"end":{"line":1821,"column":27,"offset":49471}}},{"type":"text","value":"0,-3,9,-10,null,5","position":{"start":{"line":1821,"column":27,"offset":49471},"end":{"line":1821,"column":44,"offset":49488}}},{"type":"text","value":"]","position":{"start":{"line":1821,"column":44,"offset":49488},"end":{"line":1821,"column":46,"offset":49490}}},{"type":"text","value":", which represents the following height balanced BST:","position":{"start":{"line":1821,"column":46,"offset":49490},"end":{"line":1821,"column":99,"offset":49543}}}],"position":{"start":{"line":1821,"column":1,"offset":49445},"end":{"line":1821,"column":99,"offset":49543}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"  0\n / \\\\\n"}],"position":{"start":{"line":1823,"column":1,"offset":49545},"end":{"line":1824,"column":10,"offset":49562}}}],"position":{"start":{"line":1823,"column":1,"offset":49545},"end":{"line":1824,"column":10,"offset":49562}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"-3 9\n/ /\n-10 5","position":{"start":{"line":1826,"column":1,"offset":49564},"end":{"line":1828,"column":6,"offset":49578}}}],"position":{"start":{"line":1826,"column":1,"offset":49564},"end":{"line":1828,"column":6,"offset":49578}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/"},"children":[{"type":"text","value":"Source","position":{"start":{"line":1830,"column":2,"offset":49581},"end":{"line":1830,"column":8,"offset":49587}}}],"position":{"start":{"line":1830,"column":1,"offset":49580},"end":{"line":1830,"column":84,"offset":49663}}},{"type":"text","value":"# Delete Node in a BST","position":{"start":{"line":1830,"column":84,"offset":49663},"end":{"line":1830,"column":106,"offset":49685}}}],"position":{"start":{"line":1830,"column":1,"offset":49580},"end":{"line":1830,"column":106,"offset":49685}}},{"type":"text","value":"\n"},{"type":"element","tagName":"blockquote","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Level up your coding skills and quickly land a job. This is the best place to expand your knowledge and get prepared for your next interview.","position":{"start":{"line":1832,"column":3,"offset":49689},"end":{"line":1832,"column":144,"offset":49830}}}],"position":{"start":{"line":1832,"column":3,"offset":49689},"end":{"line":1832,"column":144,"offset":49830}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1832,"column":1,"offset":49687},"end":{"line":1832,"column":144,"offset":49830}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.","position":{"start":{"line":1834,"column":1,"offset":49832},"end":{"line":1834,"column":157,"offset":49988}}}],"position":{"start":{"line":1834,"column":1,"offset":49832},"end":{"line":1834,"column":157,"offset":49988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Basically, the deletion can be divided into two stages:","position":{"start":{"line":1836,"column":1,"offset":49990},"end":{"line":1836,"column":56,"offset":50045}}}],"position":{"start":{"line":1836,"column":1,"offset":49990},"end":{"line":1836,"column":56,"offset":50045}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Search for a node to remove.","position":{"start":{"line":1838,"column":5,"offset":50051},"end":{"line":1838,"column":33,"offset":50079}}}],"position":{"start":{"line":1838,"column":1,"offset":50047},"end":{"line":1838,"column":33,"offset":50079}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"If the node is found, delete the node.","position":{"start":{"line":1839,"column":5,"offset":50084},"end":{"line":1839,"column":43,"offset":50122}}}],"position":{"start":{"line":1839,"column":1,"offset":50080},"end":{"line":1839,"column":43,"offset":50122}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1838,"column":1,"offset":50047},"end":{"line":1839,"column":43,"offset":50122}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Follow up:","position":{"start":{"line":1841,"column":3,"offset":50126},"end":{"line":1841,"column":13,"offset":50136}}}],"position":{"start":{"line":1841,"column":1,"offset":50124},"end":{"line":1841,"column":15,"offset":50138}}},{"type":"text","value":" Can you solve it with time complexity ","position":{"start":{"line":1841,"column":15,"offset":50138},"end":{"line":1841,"column":54,"offset":50177}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"O(height of tree)"}],"position":{"start":{"line":1841,"column":54,"offset":50177},"end":{"line":1841,"column":73,"offset":50196}}},{"type":"text","value":"?","position":{"start":{"line":1841,"column":73,"offset":50196},"end":{"line":1841,"column":74,"offset":50197}}}],"position":{"start":{"line":1841,"column":1,"offset":50124},"end":{"line":1841,"column":74,"offset":50197}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 1:","position":{"start":{"line":1843,"column":3,"offset":50201},"end":{"line":1843,"column":13,"offset":50211}}}],"position":{"start":{"line":1843,"column":1,"offset":50199},"end":{"line":1843,"column":15,"offset":50213}}}],"position":{"start":{"line":1843,"column":1,"offset":50199},"end":{"line":1843,"column":15,"offset":50213}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/09/04/del_node_1.jpg","alt":null},"children":[],"position":{"start":{"line":1845,"column":1,"offset":50215},"end":{"line":1845,"column":67,"offset":50281}}}],"position":{"start":{"line":1845,"column":1,"offset":50215},"end":{"line":1845,"column":67,"offset":50281}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":1847,"column":3,"offset":50285},"end":{"line":1847,"column":9,"offset":50291}}}],"position":{"start":{"line":1847,"column":1,"offset":50283},"end":{"line":1847,"column":11,"offset":50293}}},{"type":"text","value":" root = ","position":{"start":{"line":1847,"column":11,"offset":50293},"end":{"line":1847,"column":19,"offset":50301}}},{"type":"text","value":"[","position":{"start":{"line":1847,"column":19,"offset":50301},"end":{"line":1847,"column":21,"offset":50303}}},{"type":"text","value":"5,3,6,2,4,null,7","position":{"start":{"line":1847,"column":21,"offset":50303},"end":{"line":1847,"column":37,"offset":50319}}},{"type":"text","value":"]","position":{"start":{"line":1847,"column":37,"offset":50319},"end":{"line":1847,"column":39,"offset":50321}}},{"type":"text","value":", key = 3\n","position":{"start":{"line":1847,"column":39,"offset":50321},"end":{"line":1848,"column":1,"offset":50331}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":1848,"column":3,"offset":50333},"end":{"line":1848,"column":10,"offset":50340}}}],"position":{"start":{"line":1848,"column":1,"offset":50331},"end":{"line":1848,"column":12,"offset":50342}}},{"type":"text","value":" ","position":{"start":{"line":1848,"column":12,"offset":50342},"end":{"line":1848,"column":13,"offset":50343}}},{"type":"text","value":"[","position":{"start":{"line":1848,"column":13,"offset":50343},"end":{"line":1848,"column":15,"offset":50345}}},{"type":"text","value":"5,4,6,2,null,null,7","position":{"start":{"line":1848,"column":15,"offset":50345},"end":{"line":1848,"column":34,"offset":50364}}},{"type":"text","value":"]","position":{"start":{"line":1848,"column":34,"offset":50364},"end":{"line":1848,"column":36,"offset":50366}}},{"type":"text","value":"\n","position":{"start":{"line":1848,"column":36,"offset":50366},"end":{"line":1849,"column":1,"offset":50367}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1849,"column":3,"offset":50369},"end":{"line":1849,"column":15,"offset":50381}}}],"position":{"start":{"line":1849,"column":1,"offset":50367},"end":{"line":1849,"column":17,"offset":50383}}},{"type":"text","value":" Given key to delete is 3. So we find the node with value 3 and delete it.\nOne valid answer is ","position":{"start":{"line":1849,"column":17,"offset":50383},"end":{"line":1850,"column":21,"offset":50478}}},{"type":"text","value":"[","position":{"start":{"line":1850,"column":21,"offset":50478},"end":{"line":1850,"column":23,"offset":50480}}},{"type":"text","value":"5,4,6,2,null,null,7","position":{"start":{"line":1850,"column":23,"offset":50480},"end":{"line":1850,"column":42,"offset":50499}}},{"type":"text","value":"]","position":{"start":{"line":1850,"column":42,"offset":50499},"end":{"line":1850,"column":44,"offset":50501}}},{"type":"text","value":", shown in the above BST.\nPlease notice that another valid answer is ","position":{"start":{"line":1850,"column":44,"offset":50501},"end":{"line":1851,"column":44,"offset":50570}}},{"type":"text","value":"[","position":{"start":{"line":1851,"column":44,"offset":50570},"end":{"line":1851,"column":46,"offset":50572}}},{"type":"text","value":"5,2,6,null,4,null,7","position":{"start":{"line":1851,"column":46,"offset":50572},"end":{"line":1851,"column":65,"offset":50591}}},{"type":"text","value":"]","position":{"start":{"line":1851,"column":65,"offset":50591},"end":{"line":1851,"column":67,"offset":50593}}},{"type":"text","value":" and it's also accepted.\n","position":{"start":{"line":1851,"column":67,"offset":50593},"end":{"line":1852,"column":1,"offset":50618}}},{"type":"element","tagName":"img","properties":{"src":"https://assets.leetcode.com/uploads/2020/09/04/del_node_supp.jpg","alt":null},"children":[],"position":{"start":{"line":1852,"column":1,"offset":50618},"end":{"line":1852,"column":70,"offset":50687}}}],"position":{"start":{"line":1847,"column":1,"offset":50283},"end":{"line":1852,"column":70,"offset":50687}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 2:","position":{"start":{"line":1854,"column":3,"offset":50691},"end":{"line":1854,"column":13,"offset":50701}}}],"position":{"start":{"line":1854,"column":1,"offset":50689},"end":{"line":1854,"column":15,"offset":50703}}}],"position":{"start":{"line":1854,"column":1,"offset":50689},"end":{"line":1854,"column":15,"offset":50703}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":1856,"column":3,"offset":50707},"end":{"line":1856,"column":9,"offset":50713}}}],"position":{"start":{"line":1856,"column":1,"offset":50705},"end":{"line":1856,"column":11,"offset":50715}}},{"type":"text","value":" root = ","position":{"start":{"line":1856,"column":11,"offset":50715},"end":{"line":1856,"column":19,"offset":50723}}},{"type":"text","value":"[","position":{"start":{"line":1856,"column":19,"offset":50723},"end":{"line":1856,"column":21,"offset":50725}}},{"type":"text","value":"5,3,6,2,4,null,7","position":{"start":{"line":1856,"column":21,"offset":50725},"end":{"line":1856,"column":37,"offset":50741}}},{"type":"text","value":"]","position":{"start":{"line":1856,"column":37,"offset":50741},"end":{"line":1856,"column":39,"offset":50743}}},{"type":"text","value":", key = 0\n","position":{"start":{"line":1856,"column":39,"offset":50743},"end":{"line":1857,"column":1,"offset":50753}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":1857,"column":3,"offset":50755},"end":{"line":1857,"column":10,"offset":50762}}}],"position":{"start":{"line":1857,"column":1,"offset":50753},"end":{"line":1857,"column":12,"offset":50764}}},{"type":"text","value":" ","position":{"start":{"line":1857,"column":12,"offset":50764},"end":{"line":1857,"column":13,"offset":50765}}},{"type":"text","value":"[","position":{"start":{"line":1857,"column":13,"offset":50765},"end":{"line":1857,"column":15,"offset":50767}}},{"type":"text","value":"5,3,6,2,4,null,7","position":{"start":{"line":1857,"column":15,"offset":50767},"end":{"line":1857,"column":31,"offset":50783}}},{"type":"text","value":"]","position":{"start":{"line":1857,"column":31,"offset":50783},"end":{"line":1857,"column":33,"offset":50785}}},{"type":"text","value":"\n","position":{"start":{"line":1857,"column":33,"offset":50785},"end":{"line":1858,"column":1,"offset":50786}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Explanation:","position":{"start":{"line":1858,"column":3,"offset":50788},"end":{"line":1858,"column":15,"offset":50800}}}],"position":{"start":{"line":1858,"column":1,"offset":50786},"end":{"line":1858,"column":17,"offset":50802}}},{"type":"text","value":" The tree does not contain a node with value = 0.","position":{"start":{"line":1858,"column":17,"offset":50802},"end":{"line":1858,"column":66,"offset":50851}}}],"position":{"start":{"line":1856,"column":1,"offset":50705},"end":{"line":1858,"column":66,"offset":50851}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Example 3:","position":{"start":{"line":1860,"column":3,"offset":50855},"end":{"line":1860,"column":13,"offset":50865}}}],"position":{"start":{"line":1860,"column":1,"offset":50853},"end":{"line":1860,"column":15,"offset":50867}}}],"position":{"start":{"line":1860,"column":1,"offset":50853},"end":{"line":1860,"column":15,"offset":50867}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Input:","position":{"start":{"line":1862,"column":3,"offset":50871},"end":{"line":1862,"column":9,"offset":50877}}}],"position":{"start":{"line":1862,"column":1,"offset":50869},"end":{"line":1862,"column":11,"offset":50879}}},{"type":"text","value":" root = ","position":{"start":{"line":1862,"column":11,"offset":50879},"end":{"line":1862,"column":19,"offset":50887}}},{"type":"text","value":"[","position":{"start":{"line":1862,"column":19,"offset":50887},"end":{"line":1862,"column":21,"offset":50889}}},{"type":"text","value":"]","position":{"start":{"line":1862,"column":21,"offset":50889},"end":{"line":1862,"column":23,"offset":50891}}},{"type":"text","value":", key = 0\n","position":{"start":{"line":1862,"column":23,"offset":50891},"end":{"line":1863,"column":1,"offset":50901}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Output:","position":{"start":{"line":1863,"column":3,"offset":50903},"end":{"line":1863,"column":10,"offset":50910}}}],"position":{"start":{"line":1863,"column":1,"offset":50901},"end":{"line":1863,"column":12,"offset":50912}}},{"type":"text","value":" ","position":{"start":{"line":1863,"column":12,"offset":50912},"end":{"line":1863,"column":13,"offset":50913}}},{"type":"text","value":"[","position":{"start":{"line":1863,"column":13,"offset":50913},"end":{"line":1863,"column":15,"offset":50915}}},{"type":"text","value":"]","position":{"start":{"line":1863,"column":15,"offset":50915},"end":{"line":1863,"column":17,"offset":50917}}}],"position":{"start":{"line":1862,"column":1,"offset":50869},"end":{"line":1863,"column":17,"offset":50917}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"Constraints:","position":{"start":{"line":1865,"column":3,"offset":50921},"end":{"line":1865,"column":15,"offset":50933}}}],"position":{"start":{"line":1865,"column":1,"offset":50919},"end":{"line":1865,"column":17,"offset":50935}}}],"position":{"start":{"line":1865,"column":1,"offset":50919},"end":{"line":1865,"column":17,"offset":50935}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"The number of nodes in the tree is in the range ","position":{"start":{"line":1867,"column":5,"offset":50941},"end":{"line":1867,"column":53,"offset":50989}}},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"[0, 104]"}],"position":{"start":{"line":1867,"column":53,"offset":50989},"end":{"line":1867,"column":63,"offset":50999}}},{"type":"text","value":".","position":{"start":{"line":1867,"column":63,"offset":50999},"end":{"line":1867,"column":64,"offset":51000}}}],"position":{"start":{"line":1867,"column":1,"offset":50937},"end":{"line":1867,"column":64,"offset":51000}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-105 <= Node.val <= 105"}],"position":{"start":{"line":1868,"column":5,"offset":51005},"end":{"line":1868,"column":30,"offset":51030}}}],"position":{"start":{"line":1868,"column":1,"offset":51001},"end":{"line":1868,"column":30,"offset":51030}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Each node has a ","position":{"start":{"line":1869,"column":5,"offset":51035},"end":{"line":1869,"column":21,"offset":51051}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"unique","position":{"start":{"line":1869,"column":23,"offset":51053},"end":{"line":1869,"column":29,"offset":51059}}}],"position":{"start":{"line":1869,"column":21,"offset":51051},"end":{"line":1869,"column":31,"offset":51061}}},{"type":"text","value":" value.","position":{"start":{"line":1869,"column":31,"offset":51061},"end":{"line":1869,"column":38,"offset":51068}}}],"position":{"start":{"line":1869,"column":1,"offset":51031},"end":{"line":1869,"column":38,"offset":51068}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"root"}],"position":{"start":{"line":1870,"column":5,"offset":51073},"end":{"line":1870,"column":11,"offset":51079}}},{"type":"text","value":" is a valid binary search tree.","position":{"start":{"line":1870,"column":11,"offset":51079},"end":{"line":1870,"column":42,"offset":51110}}}],"position":{"start":{"line":1870,"column":1,"offset":51069},"end":{"line":1870,"column":42,"offset":51110}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"-105 <= key <= 105"}],"position":{"start":{"line":1871,"column":5,"offset":51115},"end":{"line":1871,"column":25,"offset":51135}}}],"position":{"start":{"line":1871,"column":1,"offset":51111},"end":{"line":1871,"column":25,"offset":51135}}},{"type":"text","value":"\n"}],"position":{"start":{"line":1867,"column":1,"offset":50937},"end":{"line":1871,"column":25,"offset":51135}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://leetcode.com/problems/delete-node-in-a-bst/"},"children":[{"type":"text","value":"Source","position":{"start":{"line":1873,"column":2,"offset":51138},"end":{"line":1873,"column":8,"offset":51144}}}],"position":{"start":{"line":1873,"column":1,"offset":51137},"end":{"line":1873,"column":62,"offset":51198}}},{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-0.jpg","alt":"alt text","title":"meeting-room-ii"},"children":[],"position":{"start":{"line":1873,"column":62,"offset":51198},"end":{"line":1873,"column":173,"offset":51309}}},{"type":"text","value":"\n","position":{"start":{"line":1873,"column":173,"offset":51309},"end":{"line":1874,"column":1,"offset":51310}}},{"type":"element","tagName":"img","properties":{"src":"https://github.com/everthis/leetcode-js/blob/master/images/meeting-room-ii-1.jpg","alt":"alt text","title":"meeting-room-ii"},"children":[],"position":{"start":{"line":1874,"column":1,"offset":51310},"end":{"line":1874,"column":112,"offset":51421}}}],"position":{"start":{"line":1873,"column":1,"offset":51137},"end":{"line":1874,"column":112,"offset":51421}}},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{"className":["language-javascript"]},"children":[{"type":"text","value":"/**\n * @param {number[][]} intervals\n * @return {number}\n */\nconst minMeetingRooms = function (intervals) {\n    const len = intervals.length;\n    const starts = new Array(len);\n    const ends = new Array(len);\n    for (let i = 0; i < len; i++) {\n        starts[i] = intervals[i][0];\n        ends[i] = intervals[i][1];\n    }\n    starts.sort((a, b) => a - b);\n    ends.sort((a, b) => a - b);\n    let rooms = 0;\n    let endsIdx = 0;\n    for (let i = 0; i < len; i++) {\n        if (starts[i] < ends[endsIdx]) rooms++;\n        else endsIdx++;\n    }\n    return rooms;\n};\n"}],"position":{"start":{"line":1876,"column":1,"offset":51423},"end":{"line":1899,"column":4,"offset":52005}}}],"position":{"start":{"line":1876,"column":1,"offset":51423},"end":{"line":1899,"column":4,"offset":52005}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"#-"},"children":[{"type":"element","tagName":"img","properties":{"src":"https://raw.githubusercontent.com/andreasbm/readme/master/assets/lines/colored.png","alt":"-----------------------------------------------------"},"children":[],"position":{"start":{"line":1901,"column":2,"offset":52008},"end":{"line":1901,"column":142,"offset":52148}}}],"position":{"start":{"line":1901,"column":1,"offset":52007},"end":{"line":1901,"column":147,"offset":52153}}}],"position":{"start":{"line":1901,"column":1,"offset":52007},"end":{"line":1901,"column":147,"offset":52153}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1902,"column":1,"offset":52154}}}}