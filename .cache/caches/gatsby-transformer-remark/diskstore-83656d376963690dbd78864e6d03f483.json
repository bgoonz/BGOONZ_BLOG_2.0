{"expireTime":9007200881132594000,"key":"transformer-remark-markdown-html-9779431613489693b14a79bd48654bb2--","val":"<p>The easiest way to write to files in Node.js is to use the <code>fs.writeFile()</code> API.</p>\n<p>Example:</p>\n<pre><code class=\"language-js\">const fs = require('fs');\n\nconst content = 'Some content!';\n\nfs.writeFile('/Users/joe/test.txt', content, (err) => {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    //file written successfully\n});\n</code></pre>\n<p>Alternatively, you can use the synchronous version <code>fs.writeFileSync()</code>:</p>\n<pre><code class=\"language-js\">const fs = require('fs');\n\nconst content = 'Some content!';\n\ntry {\n    const data = fs.writeFileSync('/Users/joe/test.txt', content);\n    //file written successfully\n} catch (err) {\n    console.error(err);\n}\n</code></pre>\n<p>By default, this API will <strong>replace the contents of the file</strong> if it does already exist.</p>\n<p>You can modify the default by specifying a flag:</p>\n<pre><code class=\"language-js\">fs.writeFile('/Users/joe/test.txt', content, { flag: 'a+' }, (err) => {});\n</code></pre>\n<p>The flags you'll likely use are</p>\n<ul>\n<li><code>r+</code> open the file for reading and writing</li>\n<li><code>w+</code> open the file for reading and writing, positioning the stream at the beginning of the file. The file is created if not existing</li>\n<li><code>a</code> open the file for writing, positioning the stream at the end of the file. The file is created if not existing</li>\n<li><code>a+</code> open the file for reading and writing, positioning the stream at the end of the file. The file is created if not existing</li>\n</ul>\n<p>(you can find more flags at <a href=\"https://nodejs.org/api/fs.html#fs_file_system_flags\">https://nodejs.org/api/fs.html#fs_file_system_flags</a>)</p>\n<h2>Append to a file</h2>\n<p>A handy method to append content to the end of a file is <code>fs.appendFile()</code> (and its <code>fs.appendFileSync()</code> counterpart):</p>\n<pre><code class=\"language-js\">const content = 'Some content!';\n\nfs.appendFile('file.log', content, (err) => {\n    if (err) {\n        console.error(err);\n        return;\n    }\n    //done!\n});\n</code></pre>\n<h2>Using streams</h2>\n<p>All those methods write the full content to the file before returning the control back to your program (in the async version, this means executing the callback)</p>\n<p>In this case, a better option is to write the file content using streams.</p>"}