{"version":3,"sources":["webpack:///./src/templates/blog.js"],"names":["Blog","render","display_posts","getPages","this","props","pageContext","pages","className","style","toStyleObj","withPrefix","post","post_idx","key","to","src","alt","dateTime","moment","strftime","rel","Fragment","React","Component"],"mappings":"4RAeqBA,E,kGACjBC,OAAA,WAAU,IAAD,OACDC,EAAgB,IAAUC,YAASC,KAAKC,MAAMC,YAAYC,MAAO,SAAU,mBAAoB,QACnG,OACI,kBAAC,IAAWH,KAAKC,MACb,4BAAQG,UAAU,kCAEd,IAAMJ,KAAKC,MAAO,gCAAiC,OAC/C,yBAAKG,UAAU,SACXC,MACIC,YAAW,0BAA4BC,YAAW,IAAMP,KAAKC,MAAO,gCAAiC,OAAS,QAI1H,yBAAKG,UAAU,YACX,wBAAIA,UAAU,cAEV,IAAMJ,KAAKC,MAAO,gCAAiC,OAGvD,IAAMD,KAAKC,MAAO,mCAAoC,OAClD,uBAAGG,UAAU,iBAET,IAAMJ,KAAKC,MAAO,mCAAoC,OATlE,MAcJ,yBAAKG,UAAU,kBACX,yBAAKA,UAAU,aAEX,IAAMN,GAAe,SAACU,EAAMC,GAAP,OACjB,6BAASC,IAAKD,EACVL,UAAU,QAEV,IAAMI,EAAM,0BAA2B,OACnC,kBAAC,IAAD,CAAMJ,UAAU,iBACZO,GACIJ,YAAW,IAAMC,EAAM,MAAO,QAElC,yBAAKI,IACGL,YAAW,IAAMC,EAAM,0BAA2B,OAEtDK,IACI,IAAM,EAAKZ,MAAO,0CAA2C,SAK7E,4BAAQG,UAAU,eACd,yBAAKA,UAAU,aACX,0BAAMA,UAAU,YACZU,SACIC,IAAO,IAAMP,EAAM,mBAAoB,OAAOQ,SAAS,mBAG3DD,IAAO,IAAMP,EAAM,mBAAoB,OAAOQ,SAAS,aAL3D,MAQJ,wBAAIZ,UAAU,wBACV,kBAAC,IAAD,CAAMO,GACEJ,YAAW,IAAMC,EAAM,MAAO,OAElCS,IAAI,YAEJ,IAAMT,EAAM,oBAAqB,MALrC,OAUR,IAAMA,EAAM,sBAAuB,OAC/B,kBAAC,IAAMU,SAAP,KACI,uBAAGd,UAAU,gBAET,IAAMI,EAAM,sBAAuB,QAG8B,IAArE,IAAM,EAAKP,MAAO,wCAAyC,OAAkB,IAAM,EAAKA,MAAO,yCAA0C,OACrI,uBAAGG,UAAU,aACT,kBAAC,IAAD,CAAMA,UAAU,iBACZO,GACIJ,YAAW,IAAMC,EAAM,MAAO,QAGlC,IAAM,EAAKP,MAAO,yCAA0C,MALhE,MARZ,KAvCR,QAHR,MAiEJ,yBAAKG,UAAU,kB,GA9FGe,IAAMC","file":"component---src-templates-blog-js-3fd4dcf59a47fe68e73a.js","sourcesContent":["import {graphql} from 'gatsby';\nimport _ from 'lodash';\nimport moment from 'moment-strftime';\nimport React from 'react';\nimport {Layout} from '../components/index';\nimport {getPages, Link, toStyleObj, withPrefix} from '../utils';\n// this minimal GraphQL query ensures that when 'gatsby develop' is running,\n// any changes to content files are reflected in browser\nexport const query = graphql `\n    query ($url: String) {\n        sitePage(path: { eq: $url }) {\n            id\n        }\n    }\n`;\nexport default class Blog extends React.Component {\n    render() {\n        let display_posts = _.orderBy(getPages(this.props.pageContext.pages, '/blog'), 'frontmatter.date', 'desc');\n        return (\n            <Layout {...this.props}>\n                <header className=\"page-header has-gradient outer\">\n                    {\n                    _.get(this.props, 'pageContext.frontmatter.image', null) && (\n                        <div className=\"bg-img\"\n                            style={\n                                toStyleObj(\"background-image: url('\" + withPrefix(_.get(this.props, 'pageContext.frontmatter.image', null)) + \"')\")\n                            }/>\n                    )\n                }\n                    <div className=\"inner-sm\">\n                        <h1 className=\"page-title\">\n                            {\n                            _.get(this.props, 'pageContext.frontmatter.title', null)\n                        }</h1>\n                        {\n                        _.get(this.props, 'pageContext.frontmatter.subtitle', null) && (\n                            <p className=\"page-subtitle\">\n                                {\n                                _.get(this.props, 'pageContext.frontmatter.subtitle', null)\n                            }</p>\n                        )\n                    } </div>\n                </header>\n                <div className=\"inner-md outer\">\n                    <div className=\"post-feed\">\n                        {\n                        _.map(display_posts, (post, post_idx) => (\n                            <article key={post_idx}\n                                className=\"post\">\n                                {\n                                _.get(post, 'frontmatter.thumb_image', null) && (\n                                    <Link className=\"post-thumbnail\"\n                                        to={\n                                            withPrefix(_.get(post, 'url', null))\n                                    }>\n                                        <img src={\n                                                withPrefix(_.get(post, 'frontmatter.thumb_image', null))\n                                            }\n                                            alt={\n                                                _.get(this.props, 'pageContext.frontmatter.thumb_image_alt', null)\n                                            }/>\n                                    </Link>\n                                )\n                            }\n                                <header className=\"post-header\">\n                                    <div className=\"post-meta\">\n                                        <time className=\"published\"\n                                            dateTime={\n                                                moment(_.get(post, 'frontmatter.date', null)).strftime('%Y-%m-%d %H:%M')\n                                        }>\n                                            {\n                                            moment(_.get(post, 'frontmatter.date', null)).strftime('%B %d, %Y')\n                                        } </time>\n                                    </div>\n                                    <h2 className=\"post-title line-left\">\n                                        <Link to={\n                                                withPrefix(_.get(post, 'url', null))\n                                            }\n                                            rel=\"bookmark\">\n                                            {\n                                            _.get(post, 'frontmatter.title', null)\n                                        } </Link>\n                                    </h2>\n                                </header>\n                                {\n                                _.get(post, 'frontmatter.excerpt', null) && (\n                                    <React.Fragment>\n                                        <p className=\"post-excerpt\">\n                                            {\n                                            _.get(post, 'frontmatter.excerpt', null)\n                                        }</p>\n                                        {\n                                        _.get(this.props, 'pageContext.frontmatter.has_more_link', null) === true && _.get(this.props, 'pageContext.frontmatter.more_link_text', null) && (\n                                            <p className=\"read-more\">\n                                                <Link className=\"read-more-link\"\n                                                    to={\n                                                        withPrefix(_.get(post, 'url', null))\n                                                }>\n                                                    {\n                                                    _.get(this.props, 'pageContext.frontmatter.more_link_text', null)\n                                                } </Link>\n                                            </p>\n                                        )\n                                    } </React.Fragment>\n                                )\n                            } </article>\n                        ))\n                    } </div>\n                </div>\n                <div className=\"gcse-search\"></div>\n            </Layout>\n        );\n    }\n}\n"],"sourceRoot":""}